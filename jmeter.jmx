<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
    </TestPlan>
    <hashTree>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
      </CookieManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="UserName" elementType="Argument">
            <stringProp name="Argument.name">UserName</stringProp>
            <stringProp name="Argument.value">05U1atQUh1CtSeOoo06eOw==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Password" elementType="Argument">
            <stringProp name="Argument.name">Password</stringProp>
            <stringProp name="Argument.value">HclT4XJ4yxGOQz+i8Kc2+A==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="API_Key" elementType="Argument">
            <stringProp name="Argument.name">API_Key</stringProp>
            <stringProp name="Argument.value">BNCIn6GzRbrKqIepyhYR0Q==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Latitude" elementType="Argument">
            <stringProp name="Argument.name">Latitude</stringProp>
            <stringProp name="Argument.value">38.89756</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Longitude" elementType="Argument">
            <stringProp name="Argument.name">Longitude</stringProp>
            <stringProp name="Argument.value">-77.0365</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="DOB" elementType="Argument">
            <stringProp name="Argument.name">DOB</stringProp>
            <stringProp name="Argument.value">1985-09-09</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="NAC" elementType="Argument">
            <stringProp name="Argument.name">NAC</stringProp>
            <stringProp name="Argument.value">8KD7V PGGM0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TravelAgencySenderName" elementType="Argument">
            <stringProp name="Argument.name">TravelAgencySenderName</stringProp>
            <stringProp name="Argument.value">Swathi</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TravelAgencyAddress" elementType="Argument">
            <stringProp name="Argument.name">TravelAgencyAddress</stringProp>
            <stringProp name="Argument.value">ndc@unisys.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="IATA_Number" elementType="Argument">
            <stringProp name="Argument.name">IATA_Number</stringProp>
            <stringProp name="Argument.value">88614039</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="UserRole" elementType="Argument">
            <stringProp name="Argument.name">UserRole</stringProp>
            <stringProp name="Argument.value">Admin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="DepartureDate" elementType="Argument">
            <stringProp name="Argument.name">DepartureDate</stringProp>
            <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd,,P3D,,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ArrivalDate" elementType="Argument">
            <stringProp name="Argument.name">ArrivalDate</stringProp>
            <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd,,P3D,,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="FlightNumber" elementType="Argument">
            <stringProp name="Argument.name">FlightNumber</stringProp>
            <stringProp name="Argument.value">3341</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Timestamp_TicketBy" elementType="Argument">
            <stringProp name="Argument.name">Timestamp_TicketBy</stringProp>
            <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd,,P5D,,)}T01:59:00</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="AirportCode1" elementType="Argument">
            <stringProp name="Argument.name">AirportCode1</stringProp>
            <stringProp name="Argument.value">MSP</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="AirportCode2" elementType="Argument">
            <stringProp name="Argument.name">AirportCode2</stringProp>
            <stringProp name="Argument.value">ORD</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="AirportCode3" elementType="Argument">
            <stringProp name="Argument.name">AirportCode3</stringProp>
            <stringProp name="Argument.value">ORD</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="AirportCode4" elementType="Argument">
            <stringProp name="Argument.name">AirportCode4</stringProp>
            <stringProp name="Argument.value">TXL</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="FlightNumber1" elementType="Argument">
            <stringProp name="Argument.name">FlightNumber1</stringProp>
            <stringProp name="Argument.value">3342</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RequestTime_zone" elementType="Argument">
            <stringProp name="Argument.name">RequestTime_zone</stringProp>
            <stringProp name="Argument.value">2017-05-02T07:45:00+07:45</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="DepartureDate1" elementType="Argument">
            <stringProp name="Argument.name">DepartureDate1</stringProp>
            <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd,,P4D,,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ArrivalDate1" elementType="Argument">
            <stringProp name="Argument.name">ArrivalDate1</stringProp>
            <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd,,P4D,,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="FlightNumber2" elementType="Argument">
            <stringProp name="Argument.name">FlightNumber2</stringProp>
            <stringProp name="Argument.value">3343</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="FlightNumber3" elementType="Argument">
            <stringProp name="Argument.name">FlightNumber3</stringProp>
            <stringProp name="Argument.value">3344</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CRDepartureDate" elementType="Argument">
            <stringProp name="Argument.name">CRDepartureDate</stringProp>
            <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd,,P5D,,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CRArrivalDate" elementType="Argument">
            <stringProp name="Argument.name">CRArrivalDate</stringProp>
            <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd,,P5D,,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - Env details" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="Base_URL_1" elementType="Argument">
            <stringProp name="Argument.name">Base_URL_1</stringProp>
            <stringProp name="Argument.value">http://ustr-erl-9905.na.uis.unisys.com:8181/ExternalProxyWS/webservices/ordercreate</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Newton URL</stringProp>
          </elementProp>
          <elementProp name="Base_URL_2" elementType="Argument">
            <stringProp name="Argument.name">Base_URL_2</stringProp>
            <stringProp name="Argument.value">http://ustr-erl2-3105.na.uis.unisys.com:8181/ExternalProxyWS/webservices/ordercreate</stringProp>
            <stringProp name="Argument.desc">Marie URL</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Ord_Chang" elementType="Argument">
            <stringProp name="Argument.name">Ord_Chang</stringProp>
            <stringProp name="Argument.value">http://ustr-erl-9905.na.uis.unisys.com:8181/ExternalProxyWS/webservices/orderchange</stringProp>
            <stringProp name="Argument.desc">Newton URL</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TravelAgent" elementType="Argument">
            <stringProp name="Argument.name">TravelAgent</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ProxyURL" elementType="Argument">
            <stringProp name="Argument.name">ProxyURL</stringProp>
            <stringProp name="Argument.value">https://ustr-erl-9904.na.uis.unisys.com:442/ExternalProxyWS/webservices/ordercreate</stringProp>
            <stringProp name="Argument.desc">Arayabhata(https) OrderCreate</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="URL" elementType="Argument">
            <stringProp name="Argument.name">URL</stringProp>
            <stringProp name="Argument.value">ustr-erl-9904.na.uis.unisys.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PORT" elementType="Argument">
            <stringProp name="Argument.name">PORT</stringProp>
            <stringProp name="Argument.value">4446</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Protocol" elementType="Argument">
            <stringProp name="Argument.name">Protocol</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="URL_1" elementType="Argument">
            <stringProp name="Argument.name">URL_1</stringProp>
            <stringProp name="Argument.value">https://ustr-erl-9904.na.uis.unisys.com:4446</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ProxyURL_1" elementType="Argument">
            <stringProp name="Argument.name">ProxyURL_1</stringProp>
            <stringProp name="Argument.value">https://ustr-erl-9904.na.uis.unisys.com:442/ExternalProxyWS/webservices/orderchange</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">OrderChange</stringProp>
          </elementProp>
          <elementProp name="ProxyURL_2" elementType="Argument">
            <stringProp name="Argument.name">ProxyURL_2</stringProp>
            <stringProp name="Argument.value">https://ustr-erl-9904.na.uis.unisys.com:442/ExternalProxyWS/webservices/ordercancel</stringProp>
            <stringProp name="Argument.desc">OrderCancel</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ProxyURL_3" elementType="Argument">
            <stringProp name="Argument.name">ProxyURL_3</stringProp>
            <stringProp name="Argument.value">https://ustr-erl-9904.na.uis.unisys.com:442/ExternalProxyWS/webservices/airdocissue</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Airdoc</stringProp>
          </elementProp>
          <elementProp name="URL1" elementType="Argument">
            <stringProp name="Argument.name">URL1</stringProp>
            <stringProp name="Argument.value">ustr-erl-9905.na.uis.unisys.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Base_URL_3" elementType="Argument">
            <stringProp name="Argument.name">Base_URL_3</stringProp>
            <stringProp name="Argument.value">http://ustr-erl-9905.na.uis.unisys.com:8181/ExternalProxyWS/webservices/ordercreate</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers"/>
      </HeaderManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Scenario-1: Order create with 1PAX, 1SEG, FOP:CASH, ET alone." enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-189293349">SurName</stringProp>
              <stringProp name="-821952632">GivenName</stringProp>
              <stringProp name="516961236">Address</stringProp>
              <stringProp name="2129321697">Gender</stringProp>
              <stringProp name="77796008">RCHAR</stringProp>
              <stringProp name="2520532">RNUM</stringProp>
              <stringProp name="1360325948">ResponseID</stringProp>
              <stringProp name="672861214">Airline</stringProp>
              <stringProp name="2016261304">Version</stringProp>
              <stringProp name="1708294622">PaymentAmount</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1014981934">
                <stringProp name="80294290">Swati</stringProp>
                <stringProp name="78733432">Ratna</stringProp>
                <stringProp name="1025115230">test@unisys.com</stringProp>
                <stringProp name="2100660076">Female</stringProp>
                <stringProp name="1658739812">${__RandomString(7,GENR,RCHAR)}</stringProp>
                <stringProp name="1952742500">${__Random(1000000,9999999,RNUM)}</stringProp>
                <stringProp name="-157003066">${RCHAR}${RNUM}</stringProp>
                <stringProp name="2793">XA</stringProp>
                <stringProp name="1513129">16.2</stringProp>
                <stringProp name="1507423">1000</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="false">
            <collectionProp name="UserParameters.names">
              <stringProp name="-189293349">SurName</stringProp>
              <stringProp name="-821952632">GivenName</stringProp>
              <stringProp name="516961236">Address</stringProp>
              <stringProp name="2129321697">Gender</stringProp>
              <stringProp name="77796008">RCHAR</stringProp>
              <stringProp name="2520532">RNUM</stringProp>
              <stringProp name="1360325948">ResponseID</stringProp>
              <stringProp name="672861214">Airline</stringProp>
              <stringProp name="2016261304">Version</stringProp>
              <stringProp name="1708294622">PaymentAmount</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1014981934">
                <stringProp name="80294290">Swati</stringProp>
                <stringProp name="78733432">Ratna</stringProp>
                <stringProp name="1025115230">test@unisys.com</stringProp>
                <stringProp name="2100660076">Female</stringProp>
                <stringProp name="1658739812">${__RandomString(7,GENR,RCHAR)}</stringProp>
                <stringProp name="1952742500">${__Random(1000000,9999999,RNUM)}</stringProp>
                <stringProp name="-157003066">${RCHAR}${RNUM}</stringProp>
                <stringProp name="2793">XA</stringProp>
                <stringProp name="1513129">16.2</stringProp>
                <stringProp name="1507423">1000</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Soap Request 1" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:head=&quot;http://www.iata.org/IATA/EDIST/Headerv1.0&quot; xmlns:edis=&quot;http://www.iata.org/IATA/EDIST&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;head:MessageHeaderType&gt;&#xd;
           &lt;head:UserName&gt;${UserName}&lt;/head:UserName&gt;&#xd;
         &lt;head:Password&gt;${Password}&lt;/head:Password&gt;&#xd;
         &lt;head:Airline&gt;${Airline}&lt;/head:Airline&gt;&#xd;
         &#xd;
     &#xd;
      &lt;/head:MessageHeaderType&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;edis:OrderCreateRQ Version=&quot;16.2&quot; xsi:schemaLocation=&quot;http://www.iata.org/IATA/EDIST OrderCreateRQ.xsd&quot; xmlns=&quot;http://www.iata.org/IATA/EDIST&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
         &lt;PointOfSale&gt;&#xd;
            &lt;Location&gt;&#xd;
               &lt;CountryCode&gt;US&lt;/CountryCode&gt;&#xd;
               &lt;CityCode&gt;${AirportCode1}&lt;/CityCode&gt;&#xd;
            &lt;/Location&gt;&#xd;
            &lt;RequestTime Zone=&quot;EST&quot;&gt;${RequestTime_zone}&lt;/RequestTime&gt;&#xd;
            &lt;TouchPoint&gt;&#xd;
               &lt;Device&gt;&#xd;
                  &lt;Code&gt;2&lt;/Code&gt;&#xd;
                  &lt;Definition&gt;Web Browser&lt;/Definition&gt;&#xd;
                  &lt;Position&gt;&#xd;
                     &lt;Latitude&gt;${Latitude}&lt;/Latitude&gt;&#xd;
                     &lt;Longitude&gt;${Longitude}&lt;/Longitude&gt;&#xd;
                     &lt;NAC&gt;${NAC}&lt;/NAC&gt;&#xd;
                  &lt;/Position&gt;&#xd;
               &lt;/Device&gt;&#xd;
               &lt;Event&gt;&#xd;
                  &lt;Code&gt;1&lt;/Code&gt;&#xd;
                  &lt;Definition&gt;Order or buy&lt;/Definition&gt;&#xd;
               &lt;/Event&gt;&#xd;
            &lt;/TouchPoint&gt;&#xd;
         &lt;/PointOfSale&gt;&#xd;
         &lt;Document&gt;&#xd;
            &lt;Name&gt;UNISYS NDC GATEWAY&lt;/Name&gt;&#xd;
            &lt;ReferenceVersion&gt;1.0&lt;/ReferenceVersion&gt;&#xd;
         &lt;/Document&gt;&#xd;
         &lt;Party&gt;&#xd;
            &lt;Sender&gt;&#xd;
               &lt;TravelAgencySender&gt;&#xd;
                  &lt;Name&gt;${TravelAgencySenderName}&lt;/Name&gt;&#xd;
                  &lt;Contacts&gt;&#xd;
                     &lt;Contact&gt;&#xd;
                        &lt;EmailContact&gt;&#xd;
                           &lt;Address&gt;${TravelAgencyAddress}&lt;/Address&gt;&#xd;
                        &lt;/EmailContact&gt;&#xd;
                     &lt;/Contact&gt;&#xd;
                  &lt;/Contacts&gt;&#xd;
                  &lt;PseudoCity&gt;A4A&lt;/PseudoCity&gt;&#xd;
                  &lt;IATA_Number&gt;${IATA_Number}&lt;/IATA_Number&gt;&#xd;
                  &lt;AgencyID Owner=&quot;${Airline}&quot;&gt;${TravelAgencySenderName}&lt;/AgencyID&gt;&#xd;
                  &lt;AgentUser&gt;&#xd;
                     &lt;Name&gt;${TravelAgencySenderName}&lt;/Name&gt;&#xd;
                     &lt;AgentUserID&gt;${TravelAgencySenderName}&lt;/AgentUserID&gt;&#xd;
                     &lt;UserRole&gt;${UserRole}&lt;/UserRole&gt;&#xd;
                  &lt;/AgentUser&gt;&#xd;
               &lt;/TravelAgencySender&gt;&#xd;
            &lt;/Sender&gt;&#xd;
         &lt;/Party&gt;&#xd;
         &lt;Query&gt;&#xd;
            &lt;Passengers&gt;&#xd;
               &lt;Passenger ObjectKey=&quot;PAX1&quot;&gt;&#xd;
                  &lt;PTC Quantity=&quot;1&quot;&gt;ADT&lt;/PTC&gt;&#xd;
                  &lt;ResidenceCode&gt;US&lt;/ResidenceCode&gt;&#xd;
                  &lt;Age&gt;&#xd;
                     &lt;BirthDate&gt;${DOB}&lt;/BirthDate&gt;&#xd;
                  &lt;/Age&gt;&#xd;
                  &lt;Name&gt;&#xd;
                     &lt;Surname&gt;${SurName}&lt;/Surname&gt;&#xd;
                     &lt;Given&gt;${GivenName}&lt;/Given&gt;&#xd;
                     &lt;!--Title&gt;Mr.&lt;/Title--&gt;&#xd;
                     &lt;!--Middle&gt;JM&lt;/Middle--&gt;&#xd;
                  &lt;/Name&gt;&#xd;
                  &lt;Contacts&gt;&#xd;
                     &lt;Contact&gt;&#xd;
                        &lt;EmailContact&gt;&#xd;
                           &lt;Address&gt;${Address}&lt;/Address&gt;&#xd;
                        &lt;/EmailContact&gt;&#xd;
                     &lt;/Contact&gt;&#xd;
                     &lt;!--Contact&gt;&#xd;
                        &lt;PhoneContact&gt;&#xd;
                           &lt;Application&gt;Emergency&lt;/Application&gt;&#xd;
                           &lt;Number&gt;${EmergencyNumber}&lt;/Number&gt;&#xd;
                        &lt;/PhoneContact&gt;&#xd;
                     &lt;/Contact--&gt;&#xd;
                     &lt;!--Contact&gt;&#xd;
                        &lt;AddressContact&gt;&#xd;
                           &lt;Application&gt;AddressAtOrigin&lt;/Application&gt;&#xd;
                           &lt;Street&gt;${AddressContact_Street}&lt;/Street&gt;&#xd;
                           &lt;CityName&gt;${AddressContact_CityName}&lt;/CityName&gt;&#xd;
                           &lt;PostalCode&gt;${AddressContact_PostalCode}&lt;/PostalCode&gt;&#xd;
                           &lt;CountryCode&gt;${AddressContact_CountryCode}&lt;/CountryCode&gt;&#xd;
                        &lt;/AddressContact&gt;&#xd;
                     &lt;/Contact--&gt;&#xd;
                  &lt;/Contacts&gt;&#xd;
                  &lt;Gender&gt;${Gender}&lt;/Gender&gt;&#xd;
               &lt;/Passenger&gt;&#xd;
            &lt;/Passengers&gt;&#xd;
            &lt;OrderItems&gt;&#xd;
               &lt;ShoppingResponse&gt;&#xd;
                  &lt;Owner&gt;${Airline}&lt;/Owner&gt;&#xd;
                  &lt;ResponseID&gt;${ResponseID}&lt;/ResponseID&gt;&#xd;
                  &lt;Offers&gt;&#xd;
                     &lt;Offer&gt;&#xd;
                        &lt;OfferID Owner=&quot;${Airline}&quot;&gt;1&lt;/OfferID&gt;&#xd;
                        &lt;OfferItems&gt;&#xd;
                           &lt;OfferItem&gt;&#xd;
                              &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162714&lt;/OfferItemID&gt;&#xd;
                              &lt;Passengers&gt;&#xd;
                                 &lt;PassengerReference&gt;PAX1&lt;/PassengerReference&gt;&#xd;
                              &lt;/Passengers&gt;&#xd;
                              &lt;ApplicableFlight&gt;&#xd;
                                 &lt;OriginDestinationReferences&gt;OD1&lt;/OriginDestinationReferences&gt;&#xd;
                              &lt;/ApplicableFlight&gt;&#xd;
                           &lt;/OfferItem&gt;&#xd;
                           &lt;!--OfferItem&gt;&#xd;
                              &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162715&lt;/OfferItemID&gt;&#xd;
                              &lt;Passengers&gt;&#xd;
                                 &lt;PassengerReference&gt;PAX1&lt;/PassengerReference&gt;&#xd;
                              &lt;/Passengers&gt;&#xd;
                              &lt;AssociatedServices&gt;&#xd;
                                 &lt;AssociatedService&gt;&#xd;
                                    &lt;ServiceID Owner=&quot;${Airline}&quot;&gt;SV1&lt;/ServiceID&gt;&#xd;
                                 &lt;/AssociatedService&gt;&#xd;
                              &lt;/AssociatedServices&gt;&#xd;
                           &lt;/OfferItem--&gt;&#xd;
                           &lt;!--OfferItem&gt;&#xd;
                              &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162716&lt;/OfferItemID&gt;&#xd;
                              &lt;Passengers&gt;&#xd;
                                 &lt;PassengerReference&gt;PAX1&lt;/PassengerReference&gt;&#xd;
                              &lt;/Passengers&gt;&#xd;
                              &lt;AssociatedServices&gt;&#xd;
                                 &lt;AssociatedService&gt;&#xd;
                                    &lt;ServiceID Owner=&quot;${Airline}&quot;&gt;SV2&lt;/ServiceID&gt;&#xd;
                                 &lt;/AssociatedService&gt;&#xd;
                              &lt;/AssociatedServices&gt;&#xd;
                           &lt;/OfferItem--&gt;&#xd;
                        &lt;/OfferItems&gt;&#xd;
                     &lt;/Offer&gt;&#xd;
                  &lt;/Offers&gt;&#xd;
               &lt;/ShoppingResponse&gt;&#xd;
               &lt;OfferItem&gt;&#xd;
                  &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162714&lt;/OfferItemID&gt;&#xd;
                  &lt;OfferItemType&gt;&#xd;
                     &lt;DetailedFlightItem&gt;&#xd;
                        &lt;OriginDestination&gt;&#xd;
                           &lt;Flight&gt;&#xd;
                              &lt;Departure&gt;&#xd;
                                 &lt;AirportCode&gt;${AirportCode1}&lt;/AirportCode&gt;&#xd;
                                 &lt;Date&gt;${DepartureDate}&lt;/Date&gt;&#xd;
                                 &lt;Time&gt;02:00&lt;/Time&gt;&#xd;
                              &lt;/Departure&gt;&#xd;
                              &lt;Arrival&gt;&#xd;
                                 &lt;AirportCode&gt;${AirportCode2}&lt;/AirportCode&gt;&#xd;
                                 &lt;Date&gt;${ArrivalDate}&lt;/Date&gt;&#xd;
                                 &lt;Time&gt;08:10&lt;/Time&gt;&#xd;
                              &lt;/Arrival&gt;&#xd;
                              &lt;MarketingCarrier&gt;&#xd;
                                 &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                                 &lt;Name&gt;NORTHWEST AIRLINES&lt;/Name&gt;&#xd;
                                 &lt;FlightNumber&gt;${FlightNumber}&lt;/FlightNumber&gt;&#xd;
                              &lt;/MarketingCarrier&gt;&#xd;
                              &lt;OperatingCarrier&gt;&#xd;
                                 &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                                 &lt;Name&gt;NORTHWEST AIRLINES&lt;/Name&gt;&#xd;
                                 &lt;FlightNumber&gt;${FlightNumber}&lt;/FlightNumber&gt;&#xd;
                              &lt;/OperatingCarrier&gt;&#xd;
                           &lt;/Flight&gt;&#xd;
                        &lt;/OriginDestination&gt;&#xd;
                        &lt;FareDetail&gt;&#xd;
                           &lt;FareComponent&gt;&#xd;
                              &lt;SegmentReference&gt;SEG1&lt;/SegmentReference&gt;&#xd;
                              &lt;PriceBreakdown&gt;&#xd;
                                 &lt;Price&gt;&#xd;
                                    &lt;BaseAmount Code=&quot;USD&quot;&gt;950.00&lt;/BaseAmount&gt;&#xd;
                                    &lt;Taxes&gt;&#xd;
                                       &lt;Total Code=&quot;USD&quot;&gt;50.00&lt;/Total&gt;&#xd;
                                       &lt;Breakdown&gt;&#xd;
                                          &lt;Tax&gt;&#xd;
                                             &lt;Amount Code=&quot;USD&quot;&gt;50.00&lt;/Amount&gt;&#xd;
                                             &lt;TaxCode&gt;FC&lt;/TaxCode&gt;&#xd;
                                          &lt;/Tax&gt;&#xd;
                                       &lt;/Breakdown&gt;&#xd;
                                    &lt;/Taxes&gt;&#xd;
                                 &lt;/Price&gt;&#xd;
                              &lt;/PriceBreakdown&gt;&#xd;
                              &lt;FareBasis&gt;&#xd;
                                 &lt;FareBasisCode&gt;&#xd;
                                    &lt;Code&gt;F5&lt;/Code&gt;&#xd;
                                 &lt;/FareBasisCode&gt;&#xd;
                                 &lt;RBD&gt;Y&lt;/RBD&gt;&#xd;
                              &lt;/FareBasis&gt;&#xd;
                              &lt;FareRules&gt;&#xd;
                                 &lt;Penalty&gt;&#xd;
                                    &lt;Details&gt;&#xd;
                                       &lt;Detail&gt;&#xd;
                                          &lt;Type&gt;Cancel&lt;/Type&gt;&#xd;
                                          &lt;Amounts&gt;&#xd;
                                             &lt;Amount&gt;&#xd;
                                                &lt;CurrencyAmountValue&gt;900.00&lt;/CurrencyAmountValue&gt;&#xd;
                                               &#xd;
                                             &lt;/Amount&gt;&#xd;
                                          &lt;/Amounts&gt;&#xd;
                                       &lt;/Detail&gt;&#xd;
                                       &lt;Detail&gt;&#xd;
                                          &lt;Type&gt;Change&lt;/Type&gt;&#xd;
                                          &lt;Amounts&gt;&#xd;
                                             &lt;Amount&gt;&#xd;
                                                &lt;CurrencyAmountValue&gt;40.00&lt;/CurrencyAmountValue&gt;&#xd;
                                                &#xd;
                                             &lt;/Amount&gt;&#xd;
                                          &lt;/Amounts&gt;&#xd;
                                       &lt;/Detail&gt;&#xd;
                                    &lt;/Details&gt;&#xd;
                                 &lt;/Penalty&gt;&#xd;
                              &lt;/FareRules&gt;&#xd;
                           &lt;/FareComponent&gt;&#xd;
                        &lt;/FareDetail&gt;&#xd;
                     &lt;/DetailedFlightItem&gt;&#xd;
                  &lt;/OfferItemType&gt;&#xd;
                  &lt;TimeLimits&gt;&#xd;
                     &lt;TimeLimit&gt;&#xd;
                        &lt;PriceGuaranteeTimeLimit Timestamp=&quot;${Timestamp_TicketBy}&quot;/&gt;&#xd;
                        &lt;TicketByTimeLimit&gt;&#xd;
                           &lt;TicketBy&gt;${Timestamp_TicketBy}&lt;/TicketBy&gt;&#xd;
                        &lt;/TicketByTimeLimit&gt;&#xd;
                     &lt;/TimeLimit&gt;&#xd;
                  &lt;/TimeLimits&gt;&#xd;
               &lt;/OfferItem&gt;&#xd;
               &lt;OfferItem&gt;&#xd;
                  &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162715&lt;/OfferItemID&gt;&#xd;
                  &lt;OfferItemType&gt;&#xd;
                     &lt;DetailedFlightItem&gt;&#xd;
                        &lt;OriginDestination&gt;&#xd;
                           &lt;Flight&gt;&#xd;
                              &lt;Departure&gt;&#xd;
                                 &lt;AirportCode&gt;${AirportCode1}&lt;/AirportCode&gt;&#xd;
                                 &lt;Date&gt;${DepartureDate}&lt;/Date&gt;&#xd;
                                 &lt;Time&gt;02:00&lt;/Time&gt;&#xd;
                              &lt;/Departure&gt;&#xd;
                              &lt;Arrival&gt;&#xd;
                                 &lt;AirportCode&gt;${AirportCode2}&lt;/AirportCode&gt;&#xd;
                                 &lt;Date&gt;${ArrivalDate}&lt;/Date&gt;&#xd;
                                 &lt;Time&gt;08:10&lt;/Time&gt;&#xd;
                              &lt;/Arrival&gt;&#xd;
                              &lt;MarketingCarrier&gt;&#xd;
                                 &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                                 &lt;Name&gt;NORTHWEST AIRLINES&lt;/Name&gt;&#xd;
                                 &lt;FlightNumber&gt;${FlightNumber}&lt;/FlightNumber&gt;&#xd;
                              &lt;/MarketingCarrier&gt;&#xd;
                              &lt;OperatingCarrier&gt;&#xd;
                                 &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                                 &lt;Name&gt;NORTHWEST AIRLINES&lt;/Name&gt;&#xd;
                                 &lt;FlightNumber&gt;${FlightNumber}&lt;/FlightNumber&gt;&#xd;
                              &lt;/OperatingCarrier&gt;&#xd;
                           &lt;/Flight&gt;&#xd;
                        &lt;/OriginDestination&gt;&#xd;
                     &lt;/DetailedFlightItem&gt;&#xd;
                  &lt;/OfferItemType&gt;&#xd;
                  &lt;TimeLimits&gt;&#xd;
                     &lt;TimeLimit&gt;&#xd;
                        &lt;PriceGuaranteeTimeLimit Timestamp=&quot;${Timestamp_TicketBy}&quot;/&gt;&#xd;
                        &lt;TicketByTimeLimit&gt;&#xd;
                           &lt;TicketBy&gt;${Timestamp_TicketBy}&lt;/TicketBy&gt;&#xd;
                        &lt;/TicketByTimeLimit&gt;&#xd;
                     &lt;/TimeLimit&gt;&#xd;
                  &lt;/TimeLimits&gt;&#xd;
               &lt;/OfferItem&gt;&#xd;
               &lt;OfferItem&gt;&#xd;
                  &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162716&lt;/OfferItemID&gt;&#xd;
                  &lt;OfferItemType&gt;&#xd;
                     &lt;OtherItem&gt;&#xd;
                        &lt;Price&gt;&#xd;
                           &lt;DetailCurrencyPrice&gt;&#xd;
                              &lt;Total Code=&quot;USD&quot;&gt;140.00&lt;/Total&gt;&#xd;
                           &lt;/DetailCurrencyPrice&gt;&#xd;
                        &lt;/Price&gt;&#xd;
                     &lt;/OtherItem&gt;&#xd;
                  &lt;/OfferItemType&gt;&#xd;
                  &lt;TimeLimits&gt;&#xd;
                     &lt;TimeLimit&gt;&#xd;
                        &lt;PriceGuaranteeTimeLimit Timestamp=&quot;${Timestamp_TicketBy}&quot;/&gt;&#xd;
                        &lt;TicketByTimeLimit&gt;&#xd;
                           &lt;TicketBy&gt;${Timestamp_TicketBy}&lt;/TicketBy&gt;&#xd;
                        &lt;/TicketByTimeLimit&gt;&#xd;
                     &lt;/TimeLimit&gt;&#xd;
                  &lt;/TimeLimits&gt;&#xd;
               &lt;/OfferItem&gt;&#xd;
            &lt;/OrderItems&gt;&#xd;
            &lt;Payments&gt;&#xd;
             &#xd;
               &#xd;
               &lt;Payment&gt;&#xd;
                  &lt;Method&gt;&#xd;
                     &lt;Cash CashInd=&quot;true&quot;/&gt;&#xd;
                  &lt;/Method&gt;&#xd;
                  &lt;Amount Code=&quot;USD&quot; Taxable=&quot;true&quot;&gt;${PaymentAmount}&lt;/Amount&gt;&#xd;
               &lt;/Payment&gt;&#xd;
          &#xd;
            &lt;/Payments&gt;&#xd;
            &#xd;
            &lt;DataLists&gt;&#xd;
               &lt;FlightSegmentList&gt;&#xd;
                  &lt;FlightSegment SegmentKey=&quot;SEG1&quot;&gt;&#xd;
                     &lt;Departure&gt;&#xd;
                        &lt;AirportCode&gt;${AirportCode1}&lt;/AirportCode&gt;&#xd;
                        &lt;Date&gt;${DepartureDate}&lt;/Date&gt;&#xd;
                        &lt;Time&gt;11:10&lt;/Time&gt;&#xd;
                     &lt;/Departure&gt;&#xd;
                     &lt;Arrival&gt;&#xd;
                        &lt;AirportCode&gt;${AirportCode2}&lt;/AirportCode&gt;&#xd;
                        &lt;Date&gt;${ArrivalDate}&lt;/Date&gt;&#xd;
                        &lt;Time&gt;20:20&lt;/Time&gt;&#xd;
                     &lt;/Arrival&gt;&#xd;
                     &lt;MarketingCarrier&gt;&#xd;
                        &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                        &lt;Name&gt;NORTHWEST AIRLINES&lt;/Name&gt;&#xd;
                        &lt;FlightNumber&gt;${FlightNumber}&lt;/FlightNumber&gt;&#xd;
                     &lt;/MarketingCarrier&gt;&#xd;
                     &lt;OperatingCarrier&gt;&#xd;
                        &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                        &lt;Name&gt;NORTHWEST AIRLINES&lt;/Name&gt;&#xd;
                        &lt;FlightNumber&gt;${FlightNumber}&lt;/FlightNumber&gt;&#xd;
                     &lt;/OperatingCarrier&gt;&#xd;
                     &lt;Equipment&gt;&#xd;
                        &lt;AircraftCode&gt;320&lt;/AircraftCode&gt;&#xd;
                        &lt;Name&gt;320 - AIRBUS INDUSTRIE A320 JET&lt;/Name&gt;&#xd;
                     &lt;/Equipment&gt;&#xd;
                     &lt;ClassOfService&gt;&#xd;
                        &lt;Code&gt;Y&lt;/Code&gt;&#xd;
                     &lt;/ClassOfService&gt;&#xd;
                     &lt;FlightDetail&gt;&#xd;
                        &lt;FlightDuration&gt;&#xd;
                           &lt;Value&gt;PT6H10M&lt;/Value&gt;&#xd;
                        &lt;/FlightDuration&gt;&#xd;
                     &lt;/FlightDetail&gt;&#xd;
                  &lt;/FlightSegment&gt;&#xd;
               &lt;/FlightSegmentList&gt;&#xd;
               &lt;FlightList&gt;&#xd;
                  &lt;Flight FlightKey=&quot;FL1&quot;&gt;&#xd;
                     &lt;Journey&gt;&#xd;
                        &lt;Time&gt;PT16H10M&lt;/Time&gt;&#xd;
                     &lt;/Journey&gt;&#xd;
                     &lt;SegmentReferences&gt;SEG1&lt;/SegmentReferences&gt;&#xd;
                  &lt;/Flight&gt;&#xd;
               &lt;/FlightList&gt;&#xd;
               &lt;OriginDestinationList&gt;&#xd;
                  &lt;OriginDestination OriginDestinationKey=&quot;OD1&quot;&gt;&#xd;
                     &lt;DepartureCode&gt;${AirportCode1}&lt;/DepartureCode&gt;&#xd;
                     &lt;ArrivalCode&gt;${AirportCode2}&lt;/ArrivalCode&gt;&#xd;
                     &lt;FlightReferences&gt;FL1&lt;/FlightReferences&gt;&#xd;
                  &lt;/OriginDestination&gt;&#xd;
               &lt;/OriginDestinationList&gt;&#xd;
               &lt;ServiceList&gt;&#xd;
                  &lt;Service ObjectKey=&quot;SV1&quot;&gt;&#xd;
                     &lt;ServiceID Owner=&quot;${Airline}&quot;&gt;1022&lt;/ServiceID&gt;&#xd;
                     &lt;Name&gt;Asian Meal&lt;/Name&gt;&#xd;
                     &lt;Encoding&gt;&#xd;
                        &lt;RFIC&gt;&#xd;
                           &lt;Code&gt;G&lt;/Code&gt;&#xd;
                        &lt;/RFIC&gt;&#xd;
                        &lt;Code&gt;VGML&lt;/Code&gt;&#xd;
                        &lt;SubCode&gt;0AN&lt;/SubCode&gt;&#xd;
                     &lt;/Encoding&gt;&#xd;
                     &lt;Descriptions&gt;&#xd;
                        &lt;Description&gt;&#xd;
                           &lt;Text&gt;Asian Meal&lt;/Text&gt;&#xd;
                        &lt;/Description&gt;&#xd;
                     &lt;/Descriptions&gt;&#xd;
                     &lt;Price&gt;&#xd;
                        &lt;Total Code=&quot;USD&quot;&gt;100.00&lt;/Total&gt;&#xd;
                        &lt;Taxes&gt;&#xd;
                           &lt;Total Code=&quot;USD&quot;&gt;10.00&lt;/Total&gt;&#xd;
                           &lt;Breakdown&gt;&#xd;
                              &lt;Tax&gt;&#xd;
                                 &lt;Amount Code=&quot;USD&quot;&gt;10.00&lt;/Amount&gt;&#xd;
                                 &lt;Nation&gt;US&lt;/Nation&gt;&#xd;
                                 &lt;TaxCode&gt;FC&lt;/TaxCode&gt;&#xd;
                              &lt;/Tax&gt;&#xd;
                              &lt;!--Tax&gt;&#xd;
                                 &lt;Amount Code=&quot;USD&quot;&gt;5.00&lt;/Amount&gt;&#xd;
                                 &lt;Nation&gt;US&lt;/Nation&gt;&#xd;
                                 &lt;TaxCode&gt;DE&lt;/TaxCode&gt;&#xd;
                              &lt;/Tax--&gt;&#xd;
                           &lt;/Breakdown&gt;&#xd;
                        &lt;/Taxes&gt;&#xd;
                     &lt;/Price&gt;&#xd;
                     &lt;BookingInstructions&gt;&#xd;
                        &lt;SSRCode&gt;AVML&lt;/SSRCode&gt;&#xd;
                     &lt;/BookingInstructions&gt;&#xd;
                     &lt;Associations&gt;&#xd;
                        &lt;Flight&gt;&#xd;
                           &lt;SegmentReferences&gt;SEG1&lt;/SegmentReferences&gt;&#xd;
                        &lt;/Flight&gt;&#xd;
                     &lt;/Associations&gt;&#xd;
                  &lt;/Service&gt;&#xd;
                  &lt;Service ObjectKey=&quot;SV2&quot;&gt;&#xd;
                     &lt;ServiceID Owner=&quot;${Airline}&quot;&gt;1115&lt;/ServiceID&gt;&#xd;
                     &lt;Name&gt;LOUNGE ACCESS&lt;/Name&gt;&#xd;
                     &lt;Encoding&gt;&#xd;
                        &lt;RFIC&gt;&#xd;
                           &lt;Code&gt;E&lt;/Code&gt;&#xd;
                        &lt;/RFIC&gt;&#xd;
                        &lt;SubCode&gt;0BX&lt;/SubCode&gt;&#xd;
                     &lt;/Encoding&gt;&#xd;
                     &lt;Descriptions&gt;&#xd;
                        &lt;Description&gt;&#xd;
                           &lt;Text&gt;LOUNGE ACCESS&lt;/Text&gt;&#xd;
                        &lt;/Description&gt;&#xd;
                     &lt;/Descriptions&gt;&#xd;
                     &lt;Price&gt;&#xd;
                        &lt;Total Code=&quot;USD&quot;&gt;50.00&lt;/Total&gt;&#xd;
                        &lt;Taxes&gt;&#xd;
                           &lt;Total Code=&quot;USD&quot;&gt;10.00&lt;/Total&gt;&#xd;
                           &lt;Breakdown&gt;&#xd;
                              &lt;Tax&gt;&#xd;
                                 &lt;Amount Code=&quot;USD&quot;&gt;10.00&lt;/Amount&gt;&#xd;
                                 &lt;Nation&gt;US&lt;/Nation&gt;&#xd;
                                 &lt;TaxCode&gt;FC&lt;/TaxCode&gt;&#xd;
                              &lt;/Tax&gt;&#xd;
                              &lt;!--Tax&gt;&#xd;
                                 &lt;Amount Code=&quot;USD&quot;&gt;5.00&lt;/Amount&gt;&#xd;
                                 &lt;Nation&gt;US&lt;/Nation&gt;&#xd;
                                 &lt;TaxCode&gt;DE&lt;/TaxCode&gt;&#xd;
                              &lt;/Tax--&gt;&#xd;
                           &lt;/Breakdown&gt;&#xd;
                        &lt;/Taxes&gt;&#xd;
                     &lt;/Price&gt;&#xd;
                     &lt;Detail&gt;&#xd;
                        &lt;ServiceFulfillment&gt;&#xd;
                           &lt;OfferValidDates&gt;&#xd;
                              &lt;Start ShortDate=&quot;${DepartureDate}&quot;/&gt;&#xd;
                           &lt;/OfferValidDates&gt;&#xd;
                           &lt;Location&gt;&#xd;
                              &lt;AirportFulfillmentLocation&gt;&#xd;
                                 &lt;AirportCode&gt;${AirportCode1}&lt;/AirportCode&gt;&#xd;
                              &lt;/AirportFulfillmentLocation&gt;&#xd;
                              &lt;OtherFulfillmentLocation/&gt;&#xd;
                           &lt;/Location&gt;&#xd;
                        &lt;/ServiceFulfillment&gt;&#xd;
                     &lt;/Detail&gt;&#xd;
                  &lt;/Service&gt;&#xd;
               &lt;/ServiceList&gt;&#xd;
            &lt;/DataLists&gt;&#xd;
         &lt;/Query&gt;&#xd;
      &lt;/edis:OrderCreateRQ&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${Base_URL_3}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">BookingReferenceOrderID</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;OrderID Owner=&quot;${Airline}&quot;&gt;(.+?)&lt;/OrderID&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Scope.variable"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">3000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
              <stringProp name="XPathExtractor.default"></stringProp>
              <stringProp name="XPathExtractor.refname">var</stringProp>
              <stringProp name="XPathExtractor.matchNumber">1</stringProp>
              <stringProp name="XPathExtractor.xpathQuery">//faultstring</stringProp>
              <boolProp name="XPathExtractor.validate">false</boolProp>
              <boolProp name="XPathExtractor.tolerant">false</boolProp>
              <boolProp name="XPathExtractor.namespace">false</boolProp>
            </XPathExtractor>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="false">
            <stringProp name="BeanShellSampler.query">vars.put(&quot;response&quot;, prev.getResponseDataAsString());


</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="false">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">vars.put(&quot;response&quot;, prev.getResponseDataAsString());

//if(vars.get(&quot;response&quot;).contains(&quot;Payment transaction successful&quot;))
////log.info(&quot;bhbhbsssssssssssssssssssssssssh&quot;);
//goto Soap Request 2</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Soap Request 1" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:head=&quot;http://www.iata.org/IATA/EDIST/Headerv1.0&quot; xmlns:edis=&quot;http://www.iata.org/IATA/EDIST&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;head:MessageHeaderType&gt;&#xd;
         &lt;head:UserName&gt;${UserName}&lt;/head:UserName&gt;&#xd;
         &lt;head:Password&gt;${Password}&lt;/head:Password&gt;&#xd;
         &lt;head:Airline&gt;${Airline}&lt;/head:Airline&gt;&#xd;
         &lt;head:api_key&gt;${API_Key}&lt;/head:api_key&gt;&#xd;
      &lt;/head:MessageHeaderType&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;edis:OrderCreateRQ Version=&quot;16.2&quot; xsi:schemaLocation=&quot;http://www.iata.org/IATA/EDIST OrderCreateRQ.xsd&quot; xmlns=&quot;http://www.iata.org/IATA/EDIST&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
         &lt;PointOfSale&gt;&#xd;
            &lt;Location&gt;&#xd;
               &lt;CountryCode&gt;US&lt;/CountryCode&gt;&#xd;
               &lt;CityCode&gt;${AirportCode1}&lt;/CityCode&gt;&#xd;
            &lt;/Location&gt;&#xd;
            &lt;RequestTime Zone=&quot;EST&quot;&gt;${RequestTime_zone}&lt;/RequestTime&gt;&#xd;
            &lt;TouchPoint&gt;&#xd;
               &lt;Device&gt;&#xd;
                  &lt;Code&gt;2&lt;/Code&gt;&#xd;
                  &lt;Definition&gt;Web Browser&lt;/Definition&gt;&#xd;
                  &lt;Position&gt;&#xd;
                     &lt;Latitude&gt;${Latitude}&lt;/Latitude&gt;&#xd;
                     &lt;Longitude&gt;${Longitude}&lt;/Longitude&gt;&#xd;
                     &lt;NAC&gt;${NAC}&lt;/NAC&gt;&#xd;
                  &lt;/Position&gt;&#xd;
               &lt;/Device&gt;&#xd;
               &lt;Event&gt;&#xd;
                  &lt;Code&gt;1&lt;/Code&gt;&#xd;
                  &lt;Definition&gt;Order or buy&lt;/Definition&gt;&#xd;
               &lt;/Event&gt;&#xd;
            &lt;/TouchPoint&gt;&#xd;
         &lt;/PointOfSale&gt;&#xd;
         &lt;Document&gt;&#xd;
            &lt;Name&gt;UNISYS NDC GATEWAY&lt;/Name&gt;&#xd;
            &lt;ReferenceVersion&gt;1.0&lt;/ReferenceVersion&gt;&#xd;
         &lt;/Document&gt;&#xd;
         &lt;Party&gt;&#xd;
            &lt;Sender&gt;&#xd;
               &lt;TravelAgencySender&gt;&#xd;
                  &lt;Name&gt;${TravelAgencySenderName}&lt;/Name&gt;&#xd;
                  &lt;Contacts&gt;&#xd;
                     &lt;Contact&gt;&#xd;
                        &lt;EmailContact&gt;&#xd;
                           &lt;Address&gt;${TravelAgencyAddress}&lt;/Address&gt;&#xd;
                        &lt;/EmailContact&gt;&#xd;
                     &lt;/Contact&gt;&#xd;
                  &lt;/Contacts&gt;&#xd;
                  &lt;PseudoCity&gt;A4A&lt;/PseudoCity&gt;&#xd;
                  &lt;IATA_Number&gt;${IATA_Number}&lt;/IATA_Number&gt;&#xd;
                  &lt;AgencyID Owner=&quot;${Airline}&quot;&gt;${TravelAgencySenderName}&lt;/AgencyID&gt;&#xd;
                  &lt;AgentUser&gt;&#xd;
                     &lt;Name&gt;${TravelAgencySenderName}&lt;/Name&gt;&#xd;
                     &lt;AgentUserID&gt;${TravelAgencySenderName}&lt;/AgentUserID&gt;&#xd;
                     &lt;UserRole&gt;${UserRole}&lt;/UserRole&gt;&#xd;
                  &lt;/AgentUser&gt;&#xd;
               &lt;/TravelAgencySender&gt;&#xd;
            &lt;/Sender&gt;&#xd;
         &lt;/Party&gt;&#xd;
         &lt;Query&gt;&#xd;
            &lt;Passengers&gt;&#xd;
               &lt;Passenger ObjectKey=&quot;PAX1&quot;&gt;&#xd;
                  &lt;PTC Quantity=&quot;1&quot;&gt;ADT&lt;/PTC&gt;&#xd;
                  &lt;ResidenceCode&gt;US&lt;/ResidenceCode&gt;&#xd;
                  &lt;Age&gt;&#xd;
                     &lt;BirthDate&gt;${DOB}&lt;/BirthDate&gt;&#xd;
                  &lt;/Age&gt;&#xd;
                  &lt;Name&gt;&#xd;
                     &lt;Surname&gt;${SurName}&lt;/Surname&gt;&#xd;
                     &lt;Given&gt;${GivenName}&lt;/Given&gt;&#xd;
                     &lt;!--Title&gt;Mr.&lt;/Title--&gt;&#xd;
                     &lt;!--Middle&gt;JM&lt;/Middle--&gt;&#xd;
                  &lt;/Name&gt;&#xd;
                  &lt;Contacts&gt;&#xd;
                     &lt;Contact&gt;&#xd;
                        &lt;EmailContact&gt;&#xd;
                           &lt;Address&gt;${Address}&lt;/Address&gt;&#xd;
                        &lt;/EmailContact&gt;&#xd;
                     &lt;/Contact&gt;&#xd;
                     &lt;!--Contact&gt;&#xd;
                        &lt;PhoneContact&gt;&#xd;
                           &lt;Application&gt;Emergency&lt;/Application&gt;&#xd;
                           &lt;Number&gt;${EmergencyNumber}&lt;/Number&gt;&#xd;
                        &lt;/PhoneContact&gt;&#xd;
                     &lt;/Contact--&gt;&#xd;
                     &lt;!--Contact&gt;&#xd;
                        &lt;AddressContact&gt;&#xd;
                           &lt;Application&gt;AddressAtOrigin&lt;/Application&gt;&#xd;
                           &lt;Street&gt;${AddressContact_Street}&lt;/Street&gt;&#xd;
                           &lt;CityName&gt;${AddressContact_CityName}&lt;/CityName&gt;&#xd;
                           &lt;PostalCode&gt;${AddressContact_PostalCode}&lt;/PostalCode&gt;&#xd;
                           &lt;CountryCode&gt;${AddressContact_CountryCode}&lt;/CountryCode&gt;&#xd;
                        &lt;/AddressContact&gt;&#xd;
                     &lt;/Contact--&gt;&#xd;
                  &lt;/Contacts&gt;&#xd;
                  &lt;Gender&gt;${Gender}&lt;/Gender&gt;&#xd;
               &lt;/Passenger&gt;&#xd;
            &lt;/Passengers&gt;&#xd;
            &lt;OrderItems&gt;&#xd;
               &lt;ShoppingResponse&gt;&#xd;
                  &lt;Owner&gt;${Airline}&lt;/Owner&gt;&#xd;
                  &lt;ResponseID&gt;${ResponseID}&lt;/ResponseID&gt;&#xd;
                  &lt;Offers&gt;&#xd;
                     &lt;Offer&gt;&#xd;
                        &lt;OfferID Owner=&quot;${Airline}&quot;&gt;1&lt;/OfferID&gt;&#xd;
                        &lt;OfferItems&gt;&#xd;
                           &lt;OfferItem&gt;&#xd;
                              &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162714&lt;/OfferItemID&gt;&#xd;
                              &lt;Passengers&gt;&#xd;
                                 &lt;PassengerReference&gt;PAX1&lt;/PassengerReference&gt;&#xd;
                              &lt;/Passengers&gt;&#xd;
                              &lt;ApplicableFlight&gt;&#xd;
                                 &lt;OriginDestinationReferences&gt;OD1&lt;/OriginDestinationReferences&gt;&#xd;
                              &lt;/ApplicableFlight&gt;&#xd;
                           &lt;/OfferItem&gt;&#xd;
                           &lt;!--OfferItem&gt;&#xd;
                              &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162715&lt;/OfferItemID&gt;&#xd;
                              &lt;Passengers&gt;&#xd;
                                 &lt;PassengerReference&gt;PAX1&lt;/PassengerReference&gt;&#xd;
                              &lt;/Passengers&gt;&#xd;
                              &lt;AssociatedServices&gt;&#xd;
                                 &lt;AssociatedService&gt;&#xd;
                                    &lt;ServiceID Owner=&quot;${Airline}&quot;&gt;SV1&lt;/ServiceID&gt;&#xd;
                                 &lt;/AssociatedService&gt;&#xd;
                              &lt;/AssociatedServices&gt;&#xd;
                           &lt;/OfferItem--&gt;&#xd;
                           &lt;!--OfferItem&gt;&#xd;
                              &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162716&lt;/OfferItemID&gt;&#xd;
                              &lt;Passengers&gt;&#xd;
                                 &lt;PassengerReference&gt;PAX1&lt;/PassengerReference&gt;&#xd;
                              &lt;/Passengers&gt;&#xd;
                              &lt;AssociatedServices&gt;&#xd;
                                 &lt;AssociatedService&gt;&#xd;
                                    &lt;ServiceID Owner=&quot;${Airline}&quot;&gt;SV2&lt;/ServiceID&gt;&#xd;
                                 &lt;/AssociatedService&gt;&#xd;
                              &lt;/AssociatedServices&gt;&#xd;
                           &lt;/OfferItem--&gt;&#xd;
                        &lt;/OfferItems&gt;&#xd;
                     &lt;/Offer&gt;&#xd;
                  &lt;/Offers&gt;&#xd;
               &lt;/ShoppingResponse&gt;&#xd;
               &lt;OfferItem&gt;&#xd;
                  &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162714&lt;/OfferItemID&gt;&#xd;
                  &lt;OfferItemType&gt;&#xd;
                     &lt;DetailedFlightItem&gt;&#xd;
                        &lt;OriginDestination&gt;&#xd;
                           &lt;Flight&gt;&#xd;
                              &lt;Departure&gt;&#xd;
                                 &lt;AirportCode&gt;${AirportCode1}&lt;/AirportCode&gt;&#xd;
                                 &lt;Date&gt;${DepartureDate}&lt;/Date&gt;&#xd;
                                 &lt;Time&gt;02:00&lt;/Time&gt;&#xd;
                              &lt;/Departure&gt;&#xd;
                              &lt;Arrival&gt;&#xd;
                                 &lt;AirportCode&gt;${AirportCode2}&lt;/AirportCode&gt;&#xd;
                                 &lt;Date&gt;${ArrivalDate}&lt;/Date&gt;&#xd;
                                 &lt;Time&gt;08:10&lt;/Time&gt;&#xd;
                              &lt;/Arrival&gt;&#xd;
                              &lt;MarketingCarrier&gt;&#xd;
                                 &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                                 &lt;Name&gt;NORTHWEST AIRLINES&lt;/Name&gt;&#xd;
                                 &lt;FlightNumber&gt;${FlightNumber}&lt;/FlightNumber&gt;&#xd;
                              &lt;/MarketingCarrier&gt;&#xd;
                              &lt;OperatingCarrier&gt;&#xd;
                                 &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                                 &lt;Name&gt;NORTHWEST AIRLINES&lt;/Name&gt;&#xd;
                                 &lt;FlightNumber&gt;${FlightNumber}&lt;/FlightNumber&gt;&#xd;
                              &lt;/OperatingCarrier&gt;&#xd;
                           &lt;/Flight&gt;&#xd;
                        &lt;/OriginDestination&gt;&#xd;
                        &lt;FareDetail&gt;&#xd;
                           &lt;FareComponent&gt;&#xd;
                              &lt;SegmentReference&gt;SEG1&lt;/SegmentReference&gt;&#xd;
                              &lt;PriceBreakdown&gt;&#xd;
                                 &lt;Price&gt;&#xd;
                                    &lt;BaseAmount Code=&quot;USD&quot;&gt;950.00&lt;/BaseAmount&gt;&#xd;
                                    &lt;Taxes&gt;&#xd;
                                       &lt;Total Code=&quot;USD&quot;&gt;50.00&lt;/Total&gt;&#xd;
                                       &lt;Breakdown&gt;&#xd;
                                          &lt;Tax&gt;&#xd;
                                             &lt;Amount Code=&quot;USD&quot;&gt;50.00&lt;/Amount&gt;&#xd;
                                             &lt;TaxCode&gt;FC&lt;/TaxCode&gt;&#xd;
                                          &lt;/Tax&gt;&#xd;
                                       &lt;/Breakdown&gt;&#xd;
                                    &lt;/Taxes&gt;&#xd;
                                 &lt;/Price&gt;&#xd;
                              &lt;/PriceBreakdown&gt;&#xd;
                              &lt;FareBasis&gt;&#xd;
                                 &lt;FareBasisCode&gt;&#xd;
                                    &lt;Code&gt;F5&lt;/Code&gt;&#xd;
                                 &lt;/FareBasisCode&gt;&#xd;
                                 &lt;RBD&gt;Y&lt;/RBD&gt;&#xd;
                              &lt;/FareBasis&gt;&#xd;
                              &lt;FareRules&gt;&#xd;
                                 &lt;Penalty&gt;&#xd;
                                    &lt;Details&gt;&#xd;
                                       &lt;Detail&gt;&#xd;
                                          &lt;Type&gt;Cancel&lt;/Type&gt;&#xd;
                                          &lt;Amounts&gt;&#xd;
                                             &lt;Amount&gt;&#xd;
                                                &lt;CurrencyAmountValue&gt;900.00&lt;/CurrencyAmountValue&gt;&#xd;
                                               &#xd;
                                             &lt;/Amount&gt;&#xd;
                                          &lt;/Amounts&gt;&#xd;
                                       &lt;/Detail&gt;&#xd;
                                       &lt;Detail&gt;&#xd;
                                          &lt;Type&gt;Change&lt;/Type&gt;&#xd;
                                          &lt;Amounts&gt;&#xd;
                                             &lt;Amount&gt;&#xd;
                                                &lt;CurrencyAmountValue&gt;40.00&lt;/CurrencyAmountValue&gt;&#xd;
                                                &#xd;
                                             &lt;/Amount&gt;&#xd;
                                          &lt;/Amounts&gt;&#xd;
                                       &lt;/Detail&gt;&#xd;
                                    &lt;/Details&gt;&#xd;
                                 &lt;/Penalty&gt;&#xd;
                              &lt;/FareRules&gt;&#xd;
                           &lt;/FareComponent&gt;&#xd;
                        &lt;/FareDetail&gt;&#xd;
                     &lt;/DetailedFlightItem&gt;&#xd;
                  &lt;/OfferItemType&gt;&#xd;
                  &lt;TimeLimits&gt;&#xd;
                     &lt;TimeLimit&gt;&#xd;
                        &lt;PriceGuaranteeTimeLimit Timestamp=&quot;${Timestamp_TicketBy}&quot;/&gt;&#xd;
                        &lt;TicketByTimeLimit&gt;&#xd;
                           &lt;TicketBy&gt;${Timestamp_TicketBy}&lt;/TicketBy&gt;&#xd;
                        &lt;/TicketByTimeLimit&gt;&#xd;
                     &lt;/TimeLimit&gt;&#xd;
                  &lt;/TimeLimits&gt;&#xd;
               &lt;/OfferItem&gt;&#xd;
               &lt;OfferItem&gt;&#xd;
                  &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162715&lt;/OfferItemID&gt;&#xd;
                  &lt;OfferItemType&gt;&#xd;
                     &lt;DetailedFlightItem&gt;&#xd;
                        &lt;OriginDestination&gt;&#xd;
                           &lt;Flight&gt;&#xd;
                              &lt;Departure&gt;&#xd;
                                 &lt;AirportCode&gt;${AirportCode1}&lt;/AirportCode&gt;&#xd;
                                 &lt;Date&gt;${DepartureDate}&lt;/Date&gt;&#xd;
                                 &lt;Time&gt;02:00&lt;/Time&gt;&#xd;
                              &lt;/Departure&gt;&#xd;
                              &lt;Arrival&gt;&#xd;
                                 &lt;AirportCode&gt;${AirportCode2}&lt;/AirportCode&gt;&#xd;
                                 &lt;Date&gt;${ArrivalDate}&lt;/Date&gt;&#xd;
                                 &lt;Time&gt;08:10&lt;/Time&gt;&#xd;
                              &lt;/Arrival&gt;&#xd;
                              &lt;MarketingCarrier&gt;&#xd;
                                 &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                                 &lt;Name&gt;NORTHWEST AIRLINES&lt;/Name&gt;&#xd;
                                 &lt;FlightNumber&gt;${FlightNumber}&lt;/FlightNumber&gt;&#xd;
                              &lt;/MarketingCarrier&gt;&#xd;
                              &lt;OperatingCarrier&gt;&#xd;
                                 &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                                 &lt;Name&gt;NORTHWEST AIRLINES&lt;/Name&gt;&#xd;
                                 &lt;FlightNumber&gt;${FlightNumber}&lt;/FlightNumber&gt;&#xd;
                              &lt;/OperatingCarrier&gt;&#xd;
                           &lt;/Flight&gt;&#xd;
                        &lt;/OriginDestination&gt;&#xd;
                     &lt;/DetailedFlightItem&gt;&#xd;
                  &lt;/OfferItemType&gt;&#xd;
                  &lt;TimeLimits&gt;&#xd;
                     &lt;TimeLimit&gt;&#xd;
                        &lt;PriceGuaranteeTimeLimit Timestamp=&quot;${Timestamp_TicketBy}&quot;/&gt;&#xd;
                        &lt;TicketByTimeLimit&gt;&#xd;
                           &lt;TicketBy&gt;${Timestamp_TicketBy}&lt;/TicketBy&gt;&#xd;
                        &lt;/TicketByTimeLimit&gt;&#xd;
                     &lt;/TimeLimit&gt;&#xd;
                  &lt;/TimeLimits&gt;&#xd;
               &lt;/OfferItem&gt;&#xd;
               &lt;OfferItem&gt;&#xd;
                  &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162716&lt;/OfferItemID&gt;&#xd;
                  &lt;OfferItemType&gt;&#xd;
                     &lt;OtherItem&gt;&#xd;
                        &lt;Price&gt;&#xd;
                           &lt;DetailCurrencyPrice&gt;&#xd;
                              &lt;Total Code=&quot;USD&quot;&gt;140.00&lt;/Total&gt;&#xd;
                           &lt;/DetailCurrencyPrice&gt;&#xd;
                        &lt;/Price&gt;&#xd;
                     &lt;/OtherItem&gt;&#xd;
                  &lt;/OfferItemType&gt;&#xd;
                  &lt;TimeLimits&gt;&#xd;
                     &lt;TimeLimit&gt;&#xd;
                        &lt;PriceGuaranteeTimeLimit Timestamp=&quot;${Timestamp_TicketBy}&quot;/&gt;&#xd;
                        &lt;TicketByTimeLimit&gt;&#xd;
                           &lt;TicketBy&gt;${Timestamp_TicketBy}&lt;/TicketBy&gt;&#xd;
                        &lt;/TicketByTimeLimit&gt;&#xd;
                     &lt;/TimeLimit&gt;&#xd;
                  &lt;/TimeLimits&gt;&#xd;
               &lt;/OfferItem&gt;&#xd;
            &lt;/OrderItems&gt;&#xd;
            &lt;Payments&gt;&#xd;
             &#xd;
               &#xd;
               &lt;Payment&gt;&#xd;
                  &lt;Method&gt;&#xd;
                     &lt;Cash CashInd=&quot;true&quot;/&gt;&#xd;
                  &lt;/Method&gt;&#xd;
                  &lt;Amount Code=&quot;USD&quot; Taxable=&quot;true&quot;&gt;${PaymentAmount}&lt;/Amount&gt;&#xd;
               &lt;/Payment&gt;&#xd;
          &#xd;
            &lt;/Payments&gt;&#xd;
            &#xd;
            &lt;DataLists&gt;&#xd;
               &lt;FlightSegmentList&gt;&#xd;
                  &lt;FlightSegment SegmentKey=&quot;SEG1&quot;&gt;&#xd;
                     &lt;Departure&gt;&#xd;
                        &lt;AirportCode&gt;${AirportCode1}&lt;/AirportCode&gt;&#xd;
                        &lt;Date&gt;${DepartureDate}&lt;/Date&gt;&#xd;
                        &lt;Time&gt;11:10&lt;/Time&gt;&#xd;
                     &lt;/Departure&gt;&#xd;
                     &lt;Arrival&gt;&#xd;
                        &lt;AirportCode&gt;${AirportCode2}&lt;/AirportCode&gt;&#xd;
                        &lt;Date&gt;${ArrivalDate}&lt;/Date&gt;&#xd;
                        &lt;Time&gt;20:20&lt;/Time&gt;&#xd;
                     &lt;/Arrival&gt;&#xd;
                     &lt;MarketingCarrier&gt;&#xd;
                        &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                        &lt;Name&gt;NORTHWEST AIRLINES&lt;/Name&gt;&#xd;
                        &lt;FlightNumber&gt;${FlightNumber}&lt;/FlightNumber&gt;&#xd;
                     &lt;/MarketingCarrier&gt;&#xd;
                     &lt;OperatingCarrier&gt;&#xd;
                        &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                        &lt;Name&gt;NORTHWEST AIRLINES&lt;/Name&gt;&#xd;
                        &lt;FlightNumber&gt;${FlightNumber}&lt;/FlightNumber&gt;&#xd;
                     &lt;/OperatingCarrier&gt;&#xd;
                     &lt;Equipment&gt;&#xd;
                        &lt;AircraftCode&gt;320&lt;/AircraftCode&gt;&#xd;
                        &lt;Name&gt;320 - AIRBUS INDUSTRIE A320 JET&lt;/Name&gt;&#xd;
                     &lt;/Equipment&gt;&#xd;
                     &lt;ClassOfService&gt;&#xd;
                        &lt;Code&gt;Y&lt;/Code&gt;&#xd;
                     &lt;/ClassOfService&gt;&#xd;
                     &lt;FlightDetail&gt;&#xd;
                        &lt;FlightDuration&gt;&#xd;
                           &lt;Value&gt;PT6H10M&lt;/Value&gt;&#xd;
                        &lt;/FlightDuration&gt;&#xd;
                     &lt;/FlightDetail&gt;&#xd;
                  &lt;/FlightSegment&gt;&#xd;
               &lt;/FlightSegmentList&gt;&#xd;
               &lt;FlightList&gt;&#xd;
                  &lt;Flight FlightKey=&quot;FL1&quot;&gt;&#xd;
                     &lt;Journey&gt;&#xd;
                        &lt;Time&gt;PT16H10M&lt;/Time&gt;&#xd;
                     &lt;/Journey&gt;&#xd;
                     &lt;SegmentReferences&gt;SEG1&lt;/SegmentReferences&gt;&#xd;
                  &lt;/Flight&gt;&#xd;
               &lt;/FlightList&gt;&#xd;
               &lt;OriginDestinationList&gt;&#xd;
                  &lt;OriginDestination OriginDestinationKey=&quot;OD1&quot;&gt;&#xd;
                     &lt;DepartureCode&gt;${AirportCode1}&lt;/DepartureCode&gt;&#xd;
                     &lt;ArrivalCode&gt;${AirportCode2}&lt;/ArrivalCode&gt;&#xd;
                     &lt;FlightReferences&gt;FL1&lt;/FlightReferences&gt;&#xd;
                  &lt;/OriginDestination&gt;&#xd;
               &lt;/OriginDestinationList&gt;&#xd;
               &lt;ServiceList&gt;&#xd;
                  &lt;Service ObjectKey=&quot;SV1&quot;&gt;&#xd;
                     &lt;ServiceID Owner=&quot;${Airline}&quot;&gt;1022&lt;/ServiceID&gt;&#xd;
                     &lt;Name&gt;Asian Meal&lt;/Name&gt;&#xd;
                     &lt;Encoding&gt;&#xd;
                        &lt;RFIC&gt;&#xd;
                           &lt;Code&gt;G&lt;/Code&gt;&#xd;
                        &lt;/RFIC&gt;&#xd;
                        &lt;Code&gt;VGML&lt;/Code&gt;&#xd;
                        &lt;SubCode&gt;0AN&lt;/SubCode&gt;&#xd;
                     &lt;/Encoding&gt;&#xd;
                     &lt;Descriptions&gt;&#xd;
                        &lt;Description&gt;&#xd;
                           &lt;Text&gt;Asian Meal&lt;/Text&gt;&#xd;
                        &lt;/Description&gt;&#xd;
                     &lt;/Descriptions&gt;&#xd;
                     &lt;Price&gt;&#xd;
                        &lt;Total Code=&quot;USD&quot;&gt;100.00&lt;/Total&gt;&#xd;
                        &lt;Taxes&gt;&#xd;
                           &lt;Total Code=&quot;USD&quot;&gt;10.00&lt;/Total&gt;&#xd;
                           &lt;Breakdown&gt;&#xd;
                              &lt;Tax&gt;&#xd;
                                 &lt;Amount Code=&quot;USD&quot;&gt;10.00&lt;/Amount&gt;&#xd;
                                 &lt;Nation&gt;US&lt;/Nation&gt;&#xd;
                                 &lt;TaxCode&gt;FC&lt;/TaxCode&gt;&#xd;
                              &lt;/Tax&gt;&#xd;
                              &lt;!--Tax&gt;&#xd;
                                 &lt;Amount Code=&quot;USD&quot;&gt;5.00&lt;/Amount&gt;&#xd;
                                 &lt;Nation&gt;US&lt;/Nation&gt;&#xd;
                                 &lt;TaxCode&gt;DE&lt;/TaxCode&gt;&#xd;
                              &lt;/Tax--&gt;&#xd;
                           &lt;/Breakdown&gt;&#xd;
                        &lt;/Taxes&gt;&#xd;
                     &lt;/Price&gt;&#xd;
                     &lt;BookingInstructions&gt;&#xd;
                        &lt;SSRCode&gt;AVML&lt;/SSRCode&gt;&#xd;
                     &lt;/BookingInstructions&gt;&#xd;
                     &lt;Associations&gt;&#xd;
                        &lt;Flight&gt;&#xd;
                           &lt;SegmentReferences&gt;SEG1&lt;/SegmentReferences&gt;&#xd;
                        &lt;/Flight&gt;&#xd;
                     &lt;/Associations&gt;&#xd;
                  &lt;/Service&gt;&#xd;
                  &lt;Service ObjectKey=&quot;SV2&quot;&gt;&#xd;
                     &lt;ServiceID Owner=&quot;${Airline}&quot;&gt;1115&lt;/ServiceID&gt;&#xd;
                     &lt;Name&gt;LOUNGE ACCESS&lt;/Name&gt;&#xd;
                     &lt;Encoding&gt;&#xd;
                        &lt;RFIC&gt;&#xd;
                           &lt;Code&gt;E&lt;/Code&gt;&#xd;
                        &lt;/RFIC&gt;&#xd;
                        &lt;SubCode&gt;0BX&lt;/SubCode&gt;&#xd;
                     &lt;/Encoding&gt;&#xd;
                     &lt;Descriptions&gt;&#xd;
                        &lt;Description&gt;&#xd;
                           &lt;Text&gt;LOUNGE ACCESS&lt;/Text&gt;&#xd;
                        &lt;/Description&gt;&#xd;
                     &lt;/Descriptions&gt;&#xd;
                     &lt;Price&gt;&#xd;
                        &lt;Total Code=&quot;USD&quot;&gt;50.00&lt;/Total&gt;&#xd;
                        &lt;Taxes&gt;&#xd;
                           &lt;Total Code=&quot;USD&quot;&gt;10.00&lt;/Total&gt;&#xd;
                           &lt;Breakdown&gt;&#xd;
                              &lt;Tax&gt;&#xd;
                                 &lt;Amount Code=&quot;USD&quot;&gt;10.00&lt;/Amount&gt;&#xd;
                                 &lt;Nation&gt;US&lt;/Nation&gt;&#xd;
                                 &lt;TaxCode&gt;FC&lt;/TaxCode&gt;&#xd;
                              &lt;/Tax&gt;&#xd;
                              &lt;!--Tax&gt;&#xd;
                                 &lt;Amount Code=&quot;USD&quot;&gt;5.00&lt;/Amount&gt;&#xd;
                                 &lt;Nation&gt;US&lt;/Nation&gt;&#xd;
                                 &lt;TaxCode&gt;DE&lt;/TaxCode&gt;&#xd;
                              &lt;/Tax--&gt;&#xd;
                           &lt;/Breakdown&gt;&#xd;
                        &lt;/Taxes&gt;&#xd;
                     &lt;/Price&gt;&#xd;
                     &lt;Detail&gt;&#xd;
                        &lt;ServiceFulfillment&gt;&#xd;
                           &lt;OfferValidDates&gt;&#xd;
                              &lt;Start ShortDate=&quot;${DepartureDate}&quot;/&gt;&#xd;
                           &lt;/OfferValidDates&gt;&#xd;
                           &lt;Location&gt;&#xd;
                              &lt;AirportFulfillmentLocation&gt;&#xd;
                                 &lt;AirportCode&gt;${AirportCode1}&lt;/AirportCode&gt;&#xd;
                              &lt;/AirportFulfillmentLocation&gt;&#xd;
                              &lt;OtherFulfillmentLocation/&gt;&#xd;
                           &lt;/Location&gt;&#xd;
                        &lt;/ServiceFulfillment&gt;&#xd;
                     &lt;/Detail&gt;&#xd;
                  &lt;/Service&gt;&#xd;
               &lt;/ServiceList&gt;&#xd;
            &lt;/DataLists&gt;&#xd;
         &lt;/Query&gt;&#xd;
      &lt;/edis:OrderCreateRQ&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${Base_URL_3}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">BookingReferenceOrderID</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;OrderID Owner=&quot;${Airline}&quot;&gt;(.+?)&lt;/OrderID&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Scope.variable"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">3000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">vars.put(&quot;response&quot;, prev.getResponseDataAsString());

log.info(response);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Soap Request 2" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:head=&quot;http://www.iata.org/IATA/EDIST/Headerv1.0&quot; xmlns:edis=&quot;http://www.iata.org/IATA/EDIST&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;head:MessageHeaderType&gt;&#xd;
         &lt;head:UserName&gt;${UserName}&lt;/head:UserName&gt;&#xd;
         &lt;head:Password&gt;${Password}&lt;/head:Password&gt;&#xd;
         &lt;head:Airline&gt;${Airline}&lt;/head:Airline&gt;&#xd;
         &lt;head:api_key&gt;${API_Key}&lt;/head:api_key&gt;&#xd;
      &lt;/head:MessageHeaderType&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;edis:OrderCreateRQ Version=&quot;16.2&quot; xsi:schemaLocation=&quot;http://www.iata.org/IATA/EDIST OrderCreateRQ.xsd&quot; xmlns=&quot;http://www.iata.org/IATA/EDIST&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
         &lt;PointOfSale&gt;&#xd;
            &lt;Location&gt;&#xd;
               &lt;CountryCode&gt;US&lt;/CountryCode&gt;&#xd;
               &lt;CityCode&gt;${AirportCode1}&lt;/CityCode&gt;&#xd;
            &lt;/Location&gt;&#xd;
            &lt;RequestTime Zone=&quot;EST&quot;&gt;${RequestTime_zone}&lt;/RequestTime&gt;&#xd;
            &lt;TouchPoint&gt;&#xd;
               &lt;Device&gt;&#xd;
                  &lt;Code&gt;2&lt;/Code&gt;&#xd;
                  &lt;Definition&gt;Web Browser&lt;/Definition&gt;&#xd;
                  &lt;Position&gt;&#xd;
                     &lt;Latitude&gt;${Latitude}&lt;/Latitude&gt;&#xd;
                     &lt;Longitude&gt;${Longitude}&lt;/Longitude&gt;&#xd;
                     &lt;NAC&gt;${NAC}&lt;/NAC&gt;&#xd;
                  &lt;/Position&gt;&#xd;
               &lt;/Device&gt;&#xd;
               &lt;Event&gt;&#xd;
                  &lt;Code&gt;1&lt;/Code&gt;&#xd;
                  &lt;Definition&gt;Order or buy&lt;/Definition&gt;&#xd;
               &lt;/Event&gt;&#xd;
            &lt;/TouchPoint&gt;&#xd;
         &lt;/PointOfSale&gt;&#xd;
         &lt;Document&gt;&#xd;
            &lt;Name&gt;UNISYS NDC GATEWAY&lt;/Name&gt;&#xd;
            &lt;ReferenceVersion&gt;1.0&lt;/ReferenceVersion&gt;&#xd;
         &lt;/Document&gt;&#xd;
         &lt;Party&gt;&#xd;
            &lt;Sender&gt;&#xd;
               &lt;TravelAgencySender&gt;&#xd;
                  &lt;Name&gt;${TravelAgencySenderName}&lt;/Name&gt;&#xd;
                  &lt;Contacts&gt;&#xd;
                     &lt;Contact&gt;&#xd;
                        &lt;EmailContact&gt;&#xd;
                           &lt;Address&gt;${TravelAgencyAddress}&lt;/Address&gt;&#xd;
                        &lt;/EmailContact&gt;&#xd;
                     &lt;/Contact&gt;&#xd;
                  &lt;/Contacts&gt;&#xd;
                  &lt;PseudoCity&gt;A4A&lt;/PseudoCity&gt;&#xd;
                  &lt;IATA_Number&gt;${IATA_Number}&lt;/IATA_Number&gt;&#xd;
                  &lt;AgencyID Owner=&quot;${Airline}&quot;&gt;${TravelAgencySenderName}&lt;/AgencyID&gt;&#xd;
                  &lt;AgentUser&gt;&#xd;
                     &lt;Name&gt;${TravelAgencySenderName}&lt;/Name&gt;&#xd;
                     &lt;AgentUserID&gt;${TravelAgencySenderName}&lt;/AgentUserID&gt;&#xd;
                     &lt;UserRole&gt;${UserRole}&lt;/UserRole&gt;&#xd;
                  &lt;/AgentUser&gt;&#xd;
               &lt;/TravelAgencySender&gt;&#xd;
            &lt;/Sender&gt;&#xd;
         &lt;/Party&gt;&#xd;
         &lt;Query&gt;&#xd;
            &lt;Passengers&gt;&#xd;
               &lt;Passenger ObjectKey=&quot;PAX1&quot;&gt;&#xd;
                  &lt;PTC Quantity=&quot;1&quot;&gt;ADT&lt;/PTC&gt;&#xd;
                  &lt;ResidenceCode&gt;US&lt;/ResidenceCode&gt;&#xd;
                  &lt;Age&gt;&#xd;
                     &lt;BirthDate&gt;${DOB}&lt;/BirthDate&gt;&#xd;
                  &lt;/Age&gt;&#xd;
                  &lt;Name&gt;&#xd;
                     &lt;Surname&gt;${SurName}&lt;/Surname&gt;&#xd;
                     &lt;Given&gt;${GivenName}&lt;/Given&gt;&#xd;
                     &lt;!--Title&gt;Mr.&lt;/Title--&gt;&#xd;
                     &lt;!--Middle&gt;JM&lt;/Middle--&gt;&#xd;
                  &lt;/Name&gt;&#xd;
                  &lt;Contacts&gt;&#xd;
                     &lt;Contact&gt;&#xd;
                        &lt;EmailContact&gt;&#xd;
                           &lt;Address&gt;${Address}&lt;/Address&gt;&#xd;
                        &lt;/EmailContact&gt;&#xd;
                     &lt;/Contact&gt;&#xd;
                     &lt;!--Contact&gt;&#xd;
                        &lt;PhoneContact&gt;&#xd;
                           &lt;Application&gt;Emergency&lt;/Application&gt;&#xd;
                           &lt;Number&gt;${EmergencyNumber}&lt;/Number&gt;&#xd;
                        &lt;/PhoneContact&gt;&#xd;
                     &lt;/Contact--&gt;&#xd;
                     &lt;!--Contact&gt;&#xd;
                        &lt;AddressContact&gt;&#xd;
                           &lt;Application&gt;AddressAtOrigin&lt;/Application&gt;&#xd;
                           &lt;Street&gt;${AddressContact_Street}&lt;/Street&gt;&#xd;
                           &lt;CityName&gt;${AddressContact_CityName}&lt;/CityName&gt;&#xd;
                           &lt;PostalCode&gt;${AddressContact_PostalCode}&lt;/PostalCode&gt;&#xd;
                           &lt;CountryCode&gt;${AddressContact_CountryCode}&lt;/CountryCode&gt;&#xd;
                        &lt;/AddressContact&gt;&#xd;
                     &lt;/Contact--&gt;&#xd;
                  &lt;/Contacts&gt;&#xd;
                  &lt;Gender&gt;${Gender}&lt;/Gender&gt;&#xd;
               &lt;/Passenger&gt;&#xd;
            &lt;/Passengers&gt;&#xd;
            &lt;OrderItems&gt;&#xd;
               &lt;ShoppingResponse&gt;&#xd;
                  &lt;Owner&gt;${Airline}&lt;/Owner&gt;&#xd;
                  &lt;ResponseID&gt;${ResponseID}&lt;/ResponseID&gt;&#xd;
                  &lt;Offers&gt;&#xd;
                     &lt;Offer&gt;&#xd;
                        &lt;OfferID Owner=&quot;${Airline}&quot;&gt;1&lt;/OfferID&gt;&#xd;
                        &lt;OfferItems&gt;&#xd;
                           &lt;OfferItem&gt;&#xd;
                              &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162714&lt;/OfferItemID&gt;&#xd;
                              &lt;Passengers&gt;&#xd;
                                 &lt;PassengerReference&gt;PAX1&lt;/PassengerReference&gt;&#xd;
                              &lt;/Passengers&gt;&#xd;
                              &lt;ApplicableFlight&gt;&#xd;
                                 &lt;OriginDestinationReferences&gt;OD1&lt;/OriginDestinationReferences&gt;&#xd;
                              &lt;/ApplicableFlight&gt;&#xd;
                           &lt;/OfferItem&gt;&#xd;
                           &lt;!--OfferItem&gt;&#xd;
                              &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162715&lt;/OfferItemID&gt;&#xd;
                              &lt;Passengers&gt;&#xd;
                                 &lt;PassengerReference&gt;PAX1&lt;/PassengerReference&gt;&#xd;
                              &lt;/Passengers&gt;&#xd;
                              &lt;AssociatedServices&gt;&#xd;
                                 &lt;AssociatedService&gt;&#xd;
                                    &lt;ServiceID Owner=&quot;${Airline}&quot;&gt;SV1&lt;/ServiceID&gt;&#xd;
                                 &lt;/AssociatedService&gt;&#xd;
                              &lt;/AssociatedServices&gt;&#xd;
                           &lt;/OfferItem--&gt;&#xd;
                           &lt;!--OfferItem&gt;&#xd;
                              &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162716&lt;/OfferItemID&gt;&#xd;
                              &lt;Passengers&gt;&#xd;
                                 &lt;PassengerReference&gt;PAX1&lt;/PassengerReference&gt;&#xd;
                              &lt;/Passengers&gt;&#xd;
                              &lt;AssociatedServices&gt;&#xd;
                                 &lt;AssociatedService&gt;&#xd;
                                    &lt;ServiceID Owner=&quot;${Airline}&quot;&gt;SV2&lt;/ServiceID&gt;&#xd;
                                 &lt;/AssociatedService&gt;&#xd;
                              &lt;/AssociatedServices&gt;&#xd;
                           &lt;/OfferItem--&gt;&#xd;
                        &lt;/OfferItems&gt;&#xd;
                     &lt;/Offer&gt;&#xd;
                  &lt;/Offers&gt;&#xd;
               &lt;/ShoppingResponse&gt;&#xd;
               &lt;OfferItem&gt;&#xd;
                  &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162714&lt;/OfferItemID&gt;&#xd;
                  &lt;OfferItemType&gt;&#xd;
                     &lt;DetailedFlightItem&gt;&#xd;
                        &lt;OriginDestination&gt;&#xd;
                           &lt;Flight&gt;&#xd;
                              &lt;Departure&gt;&#xd;
                                 &lt;AirportCode&gt;${AirportCode1}&lt;/AirportCode&gt;&#xd;
                                 &lt;Date&gt;${DepartureDate}&lt;/Date&gt;&#xd;
                                 &lt;Time&gt;02:00&lt;/Time&gt;&#xd;
                              &lt;/Departure&gt;&#xd;
                              &lt;Arrival&gt;&#xd;
                                 &lt;AirportCode&gt;${AirportCode2}&lt;/AirportCode&gt;&#xd;
                                 &lt;Date&gt;${ArrivalDate}&lt;/Date&gt;&#xd;
                                 &lt;Time&gt;08:10&lt;/Time&gt;&#xd;
                              &lt;/Arrival&gt;&#xd;
                              &lt;MarketingCarrier&gt;&#xd;
                                 &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                                 &lt;Name&gt;NORTHWEST AIRLINES&lt;/Name&gt;&#xd;
                                 &lt;FlightNumber&gt;${FlightNumber}&lt;/FlightNumber&gt;&#xd;
                              &lt;/MarketingCarrier&gt;&#xd;
                              &lt;OperatingCarrier&gt;&#xd;
                                 &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                                 &lt;Name&gt;NORTHWEST AIRLINES&lt;/Name&gt;&#xd;
                                 &lt;FlightNumber&gt;${FlightNumber}&lt;/FlightNumber&gt;&#xd;
                              &lt;/OperatingCarrier&gt;&#xd;
                           &lt;/Flight&gt;&#xd;
                        &lt;/OriginDestination&gt;&#xd;
                        &lt;FareDetail&gt;&#xd;
                           &lt;FareComponent&gt;&#xd;
                              &lt;SegmentReference&gt;SEG1&lt;/SegmentReference&gt;&#xd;
                              &lt;PriceBreakdown&gt;&#xd;
                                 &lt;Price&gt;&#xd;
                                    &lt;BaseAmount Code=&quot;USD&quot;&gt;950.00&lt;/BaseAmount&gt;&#xd;
                                    &lt;Taxes&gt;&#xd;
                                       &lt;Total Code=&quot;USD&quot;&gt;50.00&lt;/Total&gt;&#xd;
                                       &lt;Breakdown&gt;&#xd;
                                          &lt;Tax&gt;&#xd;
                                             &lt;Amount Code=&quot;USD&quot;&gt;50.00&lt;/Amount&gt;&#xd;
                                             &lt;TaxCode&gt;FC&lt;/TaxCode&gt;&#xd;
                                          &lt;/Tax&gt;&#xd;
                                       &lt;/Breakdown&gt;&#xd;
                                    &lt;/Taxes&gt;&#xd;
                                 &lt;/Price&gt;&#xd;
                              &lt;/PriceBreakdown&gt;&#xd;
                              &lt;FareBasis&gt;&#xd;
                                 &lt;FareBasisCode&gt;&#xd;
                                    &lt;Code&gt;F5&lt;/Code&gt;&#xd;
                                 &lt;/FareBasisCode&gt;&#xd;
                                 &lt;RBD&gt;Y&lt;/RBD&gt;&#xd;
                              &lt;/FareBasis&gt;&#xd;
                              &lt;FareRules&gt;&#xd;
                                 &lt;Penalty&gt;&#xd;
                                    &lt;Details&gt;&#xd;
                                       &lt;Detail&gt;&#xd;
                                          &lt;Type&gt;Cancel&lt;/Type&gt;&#xd;
                                          &lt;Amounts&gt;&#xd;
                                             &lt;Amount&gt;&#xd;
                                                &lt;CurrencyAmountValue&gt;900.00&lt;/CurrencyAmountValue&gt;&#xd;
                                               &#xd;
                                             &lt;/Amount&gt;&#xd;
                                          &lt;/Amounts&gt;&#xd;
                                       &lt;/Detail&gt;&#xd;
                                       &lt;Detail&gt;&#xd;
                                          &lt;Type&gt;Change&lt;/Type&gt;&#xd;
                                          &lt;Amounts&gt;&#xd;
                                             &lt;Amount&gt;&#xd;
                                                &lt;CurrencyAmountValue&gt;40.00&lt;/CurrencyAmountValue&gt;&#xd;
                                                &#xd;
                                             &lt;/Amount&gt;&#xd;
                                          &lt;/Amounts&gt;&#xd;
                                       &lt;/Detail&gt;&#xd;
                                    &lt;/Details&gt;&#xd;
                                 &lt;/Penalty&gt;&#xd;
                              &lt;/FareRules&gt;&#xd;
                           &lt;/FareComponent&gt;&#xd;
                        &lt;/FareDetail&gt;&#xd;
                     &lt;/DetailedFlightItem&gt;&#xd;
                  &lt;/OfferItemType&gt;&#xd;
                  &lt;TimeLimits&gt;&#xd;
                     &lt;TimeLimit&gt;&#xd;
                        &lt;PriceGuaranteeTimeLimit Timestamp=&quot;${Timestamp_TicketBy}&quot;/&gt;&#xd;
                        &lt;TicketByTimeLimit&gt;&#xd;
                           &lt;TicketBy&gt;${Timestamp_TicketBy}&lt;/TicketBy&gt;&#xd;
                        &lt;/TicketByTimeLimit&gt;&#xd;
                     &lt;/TimeLimit&gt;&#xd;
                  &lt;/TimeLimits&gt;&#xd;
               &lt;/OfferItem&gt;&#xd;
               &lt;OfferItem&gt;&#xd;
                  &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162715&lt;/OfferItemID&gt;&#xd;
                  &lt;OfferItemType&gt;&#xd;
                     &lt;DetailedFlightItem&gt;&#xd;
                        &lt;OriginDestination&gt;&#xd;
                           &lt;Flight&gt;&#xd;
                              &lt;Departure&gt;&#xd;
                                 &lt;AirportCode&gt;${AirportCode1}&lt;/AirportCode&gt;&#xd;
                                 &lt;Date&gt;${DepartureDate}&lt;/Date&gt;&#xd;
                                 &lt;Time&gt;02:00&lt;/Time&gt;&#xd;
                              &lt;/Departure&gt;&#xd;
                              &lt;Arrival&gt;&#xd;
                                 &lt;AirportCode&gt;${AirportCode2}&lt;/AirportCode&gt;&#xd;
                                 &lt;Date&gt;${ArrivalDate}&lt;/Date&gt;&#xd;
                                 &lt;Time&gt;08:10&lt;/Time&gt;&#xd;
                              &lt;/Arrival&gt;&#xd;
                              &lt;MarketingCarrier&gt;&#xd;
                                 &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                                 &lt;Name&gt;NORTHWEST AIRLINES&lt;/Name&gt;&#xd;
                                 &lt;FlightNumber&gt;${FlightNumber}&lt;/FlightNumber&gt;&#xd;
                              &lt;/MarketingCarrier&gt;&#xd;
                              &lt;OperatingCarrier&gt;&#xd;
                                 &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                                 &lt;Name&gt;NORTHWEST AIRLINES&lt;/Name&gt;&#xd;
                                 &lt;FlightNumber&gt;${FlightNumber}&lt;/FlightNumber&gt;&#xd;
                              &lt;/OperatingCarrier&gt;&#xd;
                           &lt;/Flight&gt;&#xd;
                        &lt;/OriginDestination&gt;&#xd;
                     &lt;/DetailedFlightItem&gt;&#xd;
                  &lt;/OfferItemType&gt;&#xd;
                  &lt;TimeLimits&gt;&#xd;
                     &lt;TimeLimit&gt;&#xd;
                        &lt;PriceGuaranteeTimeLimit Timestamp=&quot;${Timestamp_TicketBy}&quot;/&gt;&#xd;
                        &lt;TicketByTimeLimit&gt;&#xd;
                           &lt;TicketBy&gt;${Timestamp_TicketBy}&lt;/TicketBy&gt;&#xd;
                        &lt;/TicketByTimeLimit&gt;&#xd;
                     &lt;/TimeLimit&gt;&#xd;
                  &lt;/TimeLimits&gt;&#xd;
               &lt;/OfferItem&gt;&#xd;
               &lt;OfferItem&gt;&#xd;
                  &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162716&lt;/OfferItemID&gt;&#xd;
                  &lt;OfferItemType&gt;&#xd;
                     &lt;OtherItem&gt;&#xd;
                        &lt;Price&gt;&#xd;
                           &lt;DetailCurrencyPrice&gt;&#xd;
                              &lt;Total Code=&quot;USD&quot;&gt;140.00&lt;/Total&gt;&#xd;
                           &lt;/DetailCurrencyPrice&gt;&#xd;
                        &lt;/Price&gt;&#xd;
                     &lt;/OtherItem&gt;&#xd;
                  &lt;/OfferItemType&gt;&#xd;
                  &lt;TimeLimits&gt;&#xd;
                     &lt;TimeLimit&gt;&#xd;
                        &lt;PriceGuaranteeTimeLimit Timestamp=&quot;${Timestamp_TicketBy}&quot;/&gt;&#xd;
                        &lt;TicketByTimeLimit&gt;&#xd;
                           &lt;TicketBy&gt;${Timestamp_TicketBy}&lt;/TicketBy&gt;&#xd;
                        &lt;/TicketByTimeLimit&gt;&#xd;
                     &lt;/TimeLimit&gt;&#xd;
                  &lt;/TimeLimits&gt;&#xd;
               &lt;/OfferItem&gt;&#xd;
            &lt;/OrderItems&gt;&#xd;
            &lt;Payments&gt;&#xd;
             &#xd;
               &#xd;
               &lt;Payment&gt;&#xd;
                  &lt;Method&gt;&#xd;
                     &lt;Cash CashInd=&quot;true&quot;/&gt;&#xd;
                  &lt;/Method&gt;&#xd;
                  &lt;Amount Code=&quot;USD&quot; Taxable=&quot;true&quot;&gt;${PaymentAmount}&lt;/Amount&gt;&#xd;
               &lt;/Payment&gt;&#xd;
          &#xd;
            &lt;/Payments&gt;&#xd;
            &#xd;
            &lt;DataLists&gt;&#xd;
               &lt;FlightSegmentList&gt;&#xd;
                  &lt;FlightSegment SegmentKey=&quot;SEG1&quot;&gt;&#xd;
                     &lt;Departure&gt;&#xd;
                        &lt;AirportCode&gt;${AirportCode1}&lt;/AirportCode&gt;&#xd;
                        &lt;Date&gt;${DepartureDate}&lt;/Date&gt;&#xd;
                        &lt;Time&gt;11:10&lt;/Time&gt;&#xd;
                     &lt;/Departure&gt;&#xd;
                     &lt;Arrival&gt;&#xd;
                        &lt;AirportCode&gt;${AirportCode2}&lt;/AirportCode&gt;&#xd;
                        &lt;Date&gt;${ArrivalDate}&lt;/Date&gt;&#xd;
                        &lt;Time&gt;20:20&lt;/Time&gt;&#xd;
                     &lt;/Arrival&gt;&#xd;
                     &lt;MarketingCarrier&gt;&#xd;
                        &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                        &lt;Name&gt;NORTHWEST AIRLINES&lt;/Name&gt;&#xd;
                        &lt;FlightNumber&gt;${FlightNumber}&lt;/FlightNumber&gt;&#xd;
                     &lt;/MarketingCarrier&gt;&#xd;
                     &lt;OperatingCarrier&gt;&#xd;
                        &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                        &lt;Name&gt;NORTHWEST AIRLINES&lt;/Name&gt;&#xd;
                        &lt;FlightNumber&gt;${FlightNumber}&lt;/FlightNumber&gt;&#xd;
                     &lt;/OperatingCarrier&gt;&#xd;
                     &lt;Equipment&gt;&#xd;
                        &lt;AircraftCode&gt;320&lt;/AircraftCode&gt;&#xd;
                        &lt;Name&gt;320 - AIRBUS INDUSTRIE A320 JET&lt;/Name&gt;&#xd;
                     &lt;/Equipment&gt;&#xd;
                     &lt;ClassOfService&gt;&#xd;
                        &lt;Code&gt;Y&lt;/Code&gt;&#xd;
                     &lt;/ClassOfService&gt;&#xd;
                     &lt;FlightDetail&gt;&#xd;
                        &lt;FlightDuration&gt;&#xd;
                           &lt;Value&gt;PT6H10M&lt;/Value&gt;&#xd;
                        &lt;/FlightDuration&gt;&#xd;
                     &lt;/FlightDetail&gt;&#xd;
                  &lt;/FlightSegment&gt;&#xd;
               &lt;/FlightSegmentList&gt;&#xd;
               &lt;FlightList&gt;&#xd;
                  &lt;Flight FlightKey=&quot;FL1&quot;&gt;&#xd;
                     &lt;Journey&gt;&#xd;
                        &lt;Time&gt;PT16H10M&lt;/Time&gt;&#xd;
                     &lt;/Journey&gt;&#xd;
                     &lt;SegmentReferences&gt;SEG1&lt;/SegmentReferences&gt;&#xd;
                  &lt;/Flight&gt;&#xd;
               &lt;/FlightList&gt;&#xd;
               &lt;OriginDestinationList&gt;&#xd;
                  &lt;OriginDestination OriginDestinationKey=&quot;OD1&quot;&gt;&#xd;
                     &lt;DepartureCode&gt;${AirportCode1}&lt;/DepartureCode&gt;&#xd;
                     &lt;ArrivalCode&gt;${AirportCode2}&lt;/ArrivalCode&gt;&#xd;
                     &lt;FlightReferences&gt;FL1&lt;/FlightReferences&gt;&#xd;
                  &lt;/OriginDestination&gt;&#xd;
               &lt;/OriginDestinationList&gt;&#xd;
               &lt;ServiceList&gt;&#xd;
                  &lt;Service ObjectKey=&quot;SV1&quot;&gt;&#xd;
                     &lt;ServiceID Owner=&quot;${Airline}&quot;&gt;1022&lt;/ServiceID&gt;&#xd;
                     &lt;Name&gt;Asian Meal&lt;/Name&gt;&#xd;
                     &lt;Encoding&gt;&#xd;
                        &lt;RFIC&gt;&#xd;
                           &lt;Code&gt;G&lt;/Code&gt;&#xd;
                        &lt;/RFIC&gt;&#xd;
                        &lt;Code&gt;VGML&lt;/Code&gt;&#xd;
                        &lt;SubCode&gt;0AN&lt;/SubCode&gt;&#xd;
                     &lt;/Encoding&gt;&#xd;
                     &lt;Descriptions&gt;&#xd;
                        &lt;Description&gt;&#xd;
                           &lt;Text&gt;Asian Meal&lt;/Text&gt;&#xd;
                        &lt;/Description&gt;&#xd;
                     &lt;/Descriptions&gt;&#xd;
                     &lt;Price&gt;&#xd;
                        &lt;Total Code=&quot;USD&quot;&gt;100.00&lt;/Total&gt;&#xd;
                        &lt;Taxes&gt;&#xd;
                           &lt;Total Code=&quot;USD&quot;&gt;10.00&lt;/Total&gt;&#xd;
                           &lt;Breakdown&gt;&#xd;
                              &lt;Tax&gt;&#xd;
                                 &lt;Amount Code=&quot;USD&quot;&gt;10.00&lt;/Amount&gt;&#xd;
                                 &lt;Nation&gt;US&lt;/Nation&gt;&#xd;
                                 &lt;TaxCode&gt;FC&lt;/TaxCode&gt;&#xd;
                              &lt;/Tax&gt;&#xd;
                              &lt;!--Tax&gt;&#xd;
                                 &lt;Amount Code=&quot;USD&quot;&gt;5.00&lt;/Amount&gt;&#xd;
                                 &lt;Nation&gt;US&lt;/Nation&gt;&#xd;
                                 &lt;TaxCode&gt;DE&lt;/TaxCode&gt;&#xd;
                              &lt;/Tax--&gt;&#xd;
                           &lt;/Breakdown&gt;&#xd;
                        &lt;/Taxes&gt;&#xd;
                     &lt;/Price&gt;&#xd;
                     &lt;BookingInstructions&gt;&#xd;
                        &lt;SSRCode&gt;AVML&lt;/SSRCode&gt;&#xd;
                     &lt;/BookingInstructions&gt;&#xd;
                     &lt;Associations&gt;&#xd;
                        &lt;Flight&gt;&#xd;
                           &lt;SegmentReferences&gt;SEG1&lt;/SegmentReferences&gt;&#xd;
                        &lt;/Flight&gt;&#xd;
                     &lt;/Associations&gt;&#xd;
                  &lt;/Service&gt;&#xd;
                  &lt;Service ObjectKey=&quot;SV2&quot;&gt;&#xd;
                     &lt;ServiceID Owner=&quot;${Airline}&quot;&gt;1115&lt;/ServiceID&gt;&#xd;
                     &lt;Name&gt;LOUNGE ACCESS&lt;/Name&gt;&#xd;
                     &lt;Encoding&gt;&#xd;
                        &lt;RFIC&gt;&#xd;
                           &lt;Code&gt;E&lt;/Code&gt;&#xd;
                        &lt;/RFIC&gt;&#xd;
                        &lt;SubCode&gt;0BX&lt;/SubCode&gt;&#xd;
                     &lt;/Encoding&gt;&#xd;
                     &lt;Descriptions&gt;&#xd;
                        &lt;Description&gt;&#xd;
                           &lt;Text&gt;LOUNGE ACCESS&lt;/Text&gt;&#xd;
                        &lt;/Description&gt;&#xd;
                     &lt;/Descriptions&gt;&#xd;
                     &lt;Price&gt;&#xd;
                        &lt;Total Code=&quot;USD&quot;&gt;50.00&lt;/Total&gt;&#xd;
                        &lt;Taxes&gt;&#xd;
                           &lt;Total Code=&quot;USD&quot;&gt;10.00&lt;/Total&gt;&#xd;
                           &lt;Breakdown&gt;&#xd;
                              &lt;Tax&gt;&#xd;
                                 &lt;Amount Code=&quot;USD&quot;&gt;10.00&lt;/Amount&gt;&#xd;
                                 &lt;Nation&gt;US&lt;/Nation&gt;&#xd;
                                 &lt;TaxCode&gt;FC&lt;/TaxCode&gt;&#xd;
                              &lt;/Tax&gt;&#xd;
                              &lt;!--Tax&gt;&#xd;
                                 &lt;Amount Code=&quot;USD&quot;&gt;5.00&lt;/Amount&gt;&#xd;
                                 &lt;Nation&gt;US&lt;/Nation&gt;&#xd;
                                 &lt;TaxCode&gt;DE&lt;/TaxCode&gt;&#xd;
                              &lt;/Tax--&gt;&#xd;
                           &lt;/Breakdown&gt;&#xd;
                        &lt;/Taxes&gt;&#xd;
                     &lt;/Price&gt;&#xd;
                     &lt;Detail&gt;&#xd;
                        &lt;ServiceFulfillment&gt;&#xd;
                           &lt;OfferValidDates&gt;&#xd;
                              &lt;Start ShortDate=&quot;${DepartureDate}&quot;/&gt;&#xd;
                           &lt;/OfferValidDates&gt;&#xd;
                           &lt;Location&gt;&#xd;
                              &lt;AirportFulfillmentLocation&gt;&#xd;
                                 &lt;AirportCode&gt;${AirportCode1}&lt;/AirportCode&gt;&#xd;
                              &lt;/AirportFulfillmentLocation&gt;&#xd;
                              &lt;OtherFulfillmentLocation/&gt;&#xd;
                           &lt;/Location&gt;&#xd;
                        &lt;/ServiceFulfillment&gt;&#xd;
                     &lt;/Detail&gt;&#xd;
                  &lt;/Service&gt;&#xd;
               &lt;/ServiceList&gt;&#xd;
            &lt;/DataLists&gt;&#xd;
         &lt;/Query&gt;&#xd;
      &lt;/edis:OrderCreateRQ&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${Base_URL_3}${response}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">BookingReferenceOrderID</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;OrderID Owner=&quot;${Airline}&quot;&gt;(.+?)&lt;/OrderID&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Scope.variable"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">3000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">vars.put(&quot;response&quot;, prev.getResponseDataAsString());

log.info(response);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="AC-55589 Create Non homogenous 16.2 order without payments with multiple segments and seats " enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="false">
            <collectionProp name="UserParameters.names">
              <stringProp name="-189293349">SurName</stringProp>
              <stringProp name="-821952632">GivenName</stringProp>
              <stringProp name="516961236">Address</stringProp>
              <stringProp name="2129321697">Gender</stringProp>
              <stringProp name="77796008">RCHAR</stringProp>
              <stringProp name="2520532">RNUM</stringProp>
              <stringProp name="1360325948">ResponseID</stringProp>
              <stringProp name="672861214">Airline</stringProp>
              <stringProp name="2016261304">Version</stringProp>
              <stringProp name="-202022634">UserName</stringProp>
              <stringProp name="1281629883">Password</stringProp>
              <stringProp name="-81148294">API_Key</stringProp>
              <stringProp name="-1375334260">Latitude</stringProp>
              <stringProp name="2141333903">Longitude</stringProp>
              <stringProp name="67863">DOB</stringProp>
              <stringProp name="77040">NAC</stringProp>
              <stringProp name="-130000993">TravelAgencySenderName</stringProp>
              <stringProp name="936823573">TravelAgencyAddress</stringProp>
              <stringProp name="-1347729565">IATA_Number</stringProp>
              <stringProp name="-201890047">UserRole</stringProp>
              <stringProp name="632881826">DepartureDate</stringProp>
              <stringProp name="1179798311">ArrivalDate</stringProp>
              <stringProp name="2084670457">FlightNumber</stringProp>
              <stringProp name="1254220236">Timestamp_TicketBy</stringProp>
              <stringProp name="1708294622">PaymentAmount</stringProp>
              <stringProp name="260857337">AirportCode1</stringProp>
              <stringProp name="260857338">AirportCode2</stringProp>
              <stringProp name="260857339">AirportCode3</stringProp>
              <stringProp name="260857340">AirportCode4</stringProp>
              <stringProp name="200274776">FlightNumber1</stringProp>
              <stringProp name="2144347183">RequestTime_zone</stringProp>
              <stringProp name="-1855499825">DepartureDate1</stringProp>
              <stringProp name="-2080957974">ArrivalDate1</stringProp>
              <stringProp name="200274777">FlightNumber2</stringProp>
              <stringProp name="200274778">FlightNumber3</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1412929778">
                <stringProp name="80294290">Swati</stringProp>
                <stringProp name="78733432">Ratna</stringProp>
                <stringProp name="1025115230">test@unisys.com</stringProp>
                <stringProp name="2100660076">Female</stringProp>
                <stringProp name="1658739812">${__RandomString(7,GENR,RCHAR)}</stringProp>
                <stringProp name="1952742500">${__Random(1000000,9999999,RNUM)}</stringProp>
                <stringProp name="-157003066">${RCHAR}${RNUM}</stringProp>
                <stringProp name="2793">XA</stringProp>
                <stringProp name="1513129">16.2</stringProp>
                <stringProp name="-405744036">05U1atQUh1CtSeOoo06eOw==</stringProp>
                <stringProp name="-2060907369">HclT4XJ4yxGOQz+i8Kc2+A==</stringProp>
                <stringProp name="-1478533182">BNCIn6GzRbrKqIepyhYR0Q==</stringProp>
                <stringProp name="-1779976786">38.89756</stringProp>
                <stringProp name="8714627">-77.0365</stringProp>
                <stringProp name="-1044346971">1985-09-09</stringProp>
                <stringProp name="-678097693">8KD7V PGGM0</stringProp>
                <stringProp name="-1805844232">Swathi</stringProp>
                <stringProp name="-100624221">ndc@unisys.com</stringProp>
                <stringProp name="-1433446883">88614039</stringProp>
                <stringProp name="63116079">Admin</stringProp>
                <stringProp name="131611006">2020-01-25</stringProp>
                <stringProp name="131611006">2020-01-25</stringProp>
                <stringProp name="1570013">3341</stringProp>
                <stringProp name="1695993808">2020-01-28T01:59:00</stringProp>
                <stringProp name="1507423">1000</stringProp>
                <stringProp name="76650">MSP</stringProp>
                <stringProp name="78529">ORD</stringProp>
                <stringProp name="78529">ORD</stringProp>
                <stringProp name="83528">TXL</stringProp>
                <stringProp name="1570014">3342</stringProp>
                <stringProp name="1921949634">2017-05-24T07:45:00+07:45</stringProp>
                <stringProp name="131611007">2020-01-26</stringProp>
                <stringProp name="131611007">2020-01-26</stringProp>
                <stringProp name="1570015">3343</stringProp>
                <stringProp name="1570016">3344</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-189293349">SurName</stringProp>
              <stringProp name="-821952632">GivenName</stringProp>
              <stringProp name="516961236">Address</stringProp>
              <stringProp name="2129321697">Gender</stringProp>
              <stringProp name="77796008">RCHAR</stringProp>
              <stringProp name="2520532">RNUM</stringProp>
              <stringProp name="1360325948">ResponseID</stringProp>
              <stringProp name="672861214">Airline</stringProp>
              <stringProp name="2016261304">Version</stringProp>
              <stringProp name="1708294622">PaymentAmount</stringProp>
              <stringProp name="-1573126474">SurName1</stringProp>
              <stringProp name="289272233">GivenName1</stringProp>
              <stringProp name="2658826">Var1</stringProp>
              <stringProp name="2658827">Var2</stringProp>
              <stringProp name="2658828">Var3</stringProp>
              <stringProp name="2658829">Var4</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1366742004">
                <stringProp name="80294290">Swati</stringProp>
                <stringProp name="78733432">Ratna</stringProp>
                <stringProp name="1025115230">test@unisys.com</stringProp>
                <stringProp name="2100660076">Female</stringProp>
                <stringProp name="1658739812">${__RandomString(7,GENR,RCHAR)}</stringProp>
                <stringProp name="1952742500">${__Random(1000000,9999999,RNUM)}</stringProp>
                <stringProp name="-157003066">${RCHAR}${RNUM}</stringProp>
                <stringProp name="2793">XA</stringProp>
                <stringProp name="1513129">16.2</stringProp>
                <stringProp name="54391">700</stringProp>
                <stringProp name="2314539">John</stringProp>
                <stringProp name="69496448">Harry</stringProp>
                <stringProp name="-1137923771">${__RandomString(1,ABCDEF,)}</stringProp>
                <stringProp name="-1104482590">${__Random(15,48,)}</stringProp>
                <stringProp name="1363690118">${__RandomString(1,CDEF,)}</stringProp>
                <stringProp name="638327745">${__Random(25,48,)}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AC-55590_Soap Request" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:head=&quot;http://www.iata.org/IATA/EDIST/Headerv1.0&quot; xmlns:edis=&quot;http://www.iata.org/IATA/EDIST&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;head:MessageHeaderType&gt;&#xd;
         &lt;head:UserName&gt;${UserName}&lt;/head:UserName&gt;&#xd;
         &lt;head:Password&gt;${Password}&lt;/head:Password&gt;&#xd;
         &lt;head:Airline&gt;${Airline}&lt;/head:Airline&gt;&#xd;
         &lt;head:api_key&gt;${API_Key}&lt;/head:api_key&gt;&#xd;
      &lt;/head:MessageHeaderType&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;edis:OrderCreateRQ Version=&quot;16.2&quot; xsi:schemaLocation=&quot;http://www.iata.org/IATA/EDIST OrderCreateRQ.xsd&quot; xmlns=&quot;http://www.iata.org/IATA/EDIST&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
         &lt;PointOfSale&gt;&#xd;
            &lt;Location&gt;&#xd;
               &lt;CountryCode&gt;US&lt;/CountryCode&gt;&#xd;
               &lt;CityCode&gt;${AirportCode1}&lt;/CityCode&gt;&#xd;
            &lt;/Location&gt;&#xd;
            &lt;RequestTime Zone=&quot;EST&quot;&gt;${RequestTime_zone}&lt;/RequestTime&gt;&#xd;
            &lt;TouchPoint&gt;&#xd;
               &lt;Device&gt;&#xd;
                  &lt;Code&gt;2&lt;/Code&gt;&#xd;
                  &lt;Definition&gt;Web Browser&lt;/Definition&gt;&#xd;
                  &lt;Position&gt;&#xd;
                     &lt;Latitude&gt;${Latitude}&lt;/Latitude&gt;&#xd;
                     &lt;Longitude&gt;${Longitude}&lt;/Longitude&gt;&#xd;
                     &lt;NAC&gt;${NAC}&lt;/NAC&gt;&#xd;
                  &lt;/Position&gt;&#xd;
               &lt;/Device&gt;&#xd;
               &lt;Event&gt;&#xd;
                  &lt;Code&gt;1&lt;/Code&gt;&#xd;
                  &lt;Definition&gt;Order or buy&lt;/Definition&gt;&#xd;
               &lt;/Event&gt;&#xd;
            &lt;/TouchPoint&gt;&#xd;
         &lt;/PointOfSale&gt;&#xd;
         &lt;Document&gt;&#xd;
            &lt;Name&gt;UNISYS NDC GATEWAY&lt;/Name&gt;&#xd;
            &lt;ReferenceVersion&gt;1.0&lt;/ReferenceVersion&gt;&#xd;
         &lt;/Document&gt;&#xd;
         &lt;Party&gt;&#xd;
            &lt;Sender&gt;&#xd;
               &lt;TravelAgencySender&gt;&#xd;
                  &lt;Name&gt;${TravelAgencySenderName}&lt;/Name&gt;&#xd;
                  &lt;Contacts&gt;&#xd;
                     &lt;Contact&gt;&#xd;
                        &lt;EmailContact&gt;&#xd;
                           &lt;Address&gt;${TravelAgencyAddress}&lt;/Address&gt;&#xd;
                        &lt;/EmailContact&gt;&#xd;
                     &lt;/Contact&gt;&#xd;
                  &lt;/Contacts&gt;&#xd;
                  &lt;PseudoCity&gt;A4A&lt;/PseudoCity&gt;&#xd;
                  &lt;IATA_Number&gt;${IATA_Number}&lt;/IATA_Number&gt;&#xd;
                  &lt;AgencyID Owner=&quot;${Airline}&quot;&gt;${TravelAgencySenderName}&lt;/AgencyID&gt;&#xd;
               &lt;/TravelAgencySender&gt;&#xd;
            &lt;/Sender&gt;&#xd;
         &lt;/Party&gt;&#xd;
         &lt;Query&gt;&#xd;
            &lt;Passengers&gt;&#xd;
               &lt;Passenger ObjectKey=&quot;PAX1&quot;&gt;&#xd;
                  &lt;PTC Quantity=&quot;1&quot;&gt;ADT&lt;/PTC&gt;&#xd;
                  &lt;Age&gt;&#xd;
                     &lt;BirthDate&gt;2005-10-26&lt;/BirthDate&gt;&#xd;
                  &lt;/Age&gt;&#xd;
                  &lt;Name&gt;&#xd;
                     &lt;Surname&gt;Todor&lt;/Surname&gt;&#xd;
                     &lt;Given&gt;Darko&lt;/Given&gt;&#xd;
                     &lt;Title&gt;Dr.&lt;/Title&gt;&#xd;
                     &lt;Middle&gt;Mise&lt;/Middle&gt;&#xd;
                  &lt;/Name&gt;&#xd;
                  &lt;Contacts&gt;&#xd;
                     &lt;Contact&gt;&#xd;
                        &lt;EmailContact&gt;&#xd;
                           &lt;Address&gt;darko.todorovic@unisys.com&lt;/Address&gt;&#xd;
                        &lt;/EmailContact&gt;&#xd;
                     &lt;/Contact&gt;&#xd;
                     &lt;Contact&gt;&#xd;
                        &lt;PhoneContact&gt;&#xd;
                           &lt;Application&gt;Emergency&lt;/Application&gt;&#xd;
                           &lt;Number&gt;9867236081&lt;/Number&gt;&#xd;
                        &lt;/PhoneContact&gt;&#xd;
                     &lt;/Contact&gt;&#xd;
                  &lt;/Contacts&gt;&#xd;
                  &lt;Gender&gt;Male&lt;/Gender&gt;&#xd;
               &lt;/Passenger&gt;&#xd;
               &lt;Passenger ObjectKey=&quot;PAX2&quot;&gt;&#xd;
                  &lt;PTC Quantity=&quot;1&quot;&gt;ADT&lt;/PTC&gt;&#xd;
                  &lt;Age&gt;&#xd;
                     &lt;BirthDate&gt;1972-06-16&lt;/BirthDate&gt;&#xd;
                  &lt;/Age&gt;&#xd;
                  &lt;Name&gt;&#xd;
                     &lt;Surname&gt;Khair&lt;/Surname&gt;&#xd;
                     &lt;Given&gt;George&lt;/Given&gt;&#xd;
                     &lt;Title&gt;Prof.&lt;/Title&gt;&#xd;
                     &lt;Middle&gt;Barski&lt;/Middle&gt;&#xd;
                  &lt;/Name&gt;&#xd;
                  &lt;Contacts&gt;&#xd;
                     &lt;Contact&gt;&#xd;
                        &lt;EmailContact&gt;&#xd;
                           &lt;Address&gt;george.khairallah@unisys.com&lt;/Address&gt;&#xd;
                        &lt;/EmailContact&gt;&#xd;
                     &lt;/Contact&gt;&#xd;
                     &lt;Contact&gt;&#xd;
                        &lt;PhoneContact&gt;&#xd;
                           &lt;Application&gt;Emergency&lt;/Application&gt;&#xd;
                           &lt;Number&gt;9867236082&lt;/Number&gt;&#xd;
                        &lt;/PhoneContact&gt;&#xd;
                     &lt;/Contact&gt;&#xd;
                  &lt;/Contacts&gt;&#xd;
                  &lt;Gender&gt;Female&lt;/Gender&gt;&#xd;
               &lt;/Passenger&gt;&#xd;
            &lt;/Passengers&gt;&#xd;
            &lt;OrderItems&gt;&#xd;
               &lt;ShoppingResponse&gt;&#xd;
                  &lt;Owner&gt;${Airline}&lt;/Owner&gt;&#xd;
                  &lt;ResponseID&gt;${ResponseID}&lt;/ResponseID&gt;&#xd;
                  &lt;Offers&gt;&#xd;
                     &lt;Offer&gt;&#xd;
                        &lt;OfferID Owner=&quot;${Airline}&quot;&gt;1#M#111198795&lt;/OfferID&gt;&#xd;
                        &lt;OfferItems&gt;&#xd;
                           &lt;OfferItem&gt;&#xd;
                              &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162711&lt;/OfferItemID&gt;&#xd;
                              &lt;Passengers&gt;&#xd;
                                 &lt;PassengerReference&gt;PAX1 PAX2&lt;/PassengerReference&gt;&#xd;
                              &lt;/Passengers&gt;&#xd;
                              &lt;ApplicableFlight&gt;&#xd;
                                 &lt;OriginDestinationReferences&gt;OD1&lt;/OriginDestinationReferences&gt;&#xd;
                              &lt;/ApplicableFlight&gt;&#xd;
                           &lt;/OfferItem&gt;&#xd;
                           &lt;OfferItem&gt;&#xd;
                              &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162712&lt;/OfferItemID&gt;&#xd;
                              &lt;Passengers&gt;&#xd;
                                 &lt;PassengerReference&gt;PAX1 PAX2&lt;/PassengerReference&gt;&#xd;
                              &lt;/Passengers&gt;&#xd;
                              &lt;AssociatedServices&gt;&#xd;
                                 &lt;AssociatedService&gt;&#xd;
                                    &lt;ServiceID Owner=&quot;${Airline}&quot;&gt;SV1&lt;/ServiceID&gt;&#xd;
                                 &lt;/AssociatedService&gt;&#xd;
                              &lt;/AssociatedServices&gt;&#xd;
                           &lt;/OfferItem&gt;&#xd;
                           &#xd;
                               &lt;OfferItem&gt;&#xd;
                              &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162713&lt;/OfferItemID&gt;&#xd;
                              &lt;Passengers&gt;&#xd;
                                 &lt;PassengerReference&gt;PAX1 PAX2&lt;/PassengerReference&gt;&#xd;
                              &lt;/Passengers&gt;&#xd;
                              &lt;AssociatedServices&gt;&#xd;
                                 &lt;AssociatedService&gt;&#xd;
                                    &lt;ServiceID Owner=&quot;${Airline}&quot;&gt;SV2&lt;/ServiceID&gt;&#xd;
                                 &lt;/AssociatedService&gt;&#xd;
                              &lt;/AssociatedServices&gt;&#xd;
                           &lt;/OfferItem&gt;&#xd;
                           &#xd;
                        &lt;/OfferItems&gt;&#xd;
                     &lt;/Offer&gt;&#xd;
                     &lt;Offer&gt;&#xd;
                        &lt;OfferID Owner=&quot;${Airline}&quot;&gt;1#M#111198795&lt;/OfferID&gt;&#xd;
                        &lt;OfferItems&gt;&#xd;
                           &lt;OfferItem&gt;&#xd;
                              &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162714&lt;/OfferItemID&gt;&#xd;
                              &lt;Passengers&gt;&#xd;
                                 &lt;PassengerReference&gt;PAX1&lt;/PassengerReference&gt;&#xd;
                              &lt;/Passengers&gt;&#xd;
                              &lt;ApplicableFlight&gt;&#xd;
                                 &lt;OriginDestinationReferences&gt;OD2&lt;/OriginDestinationReferences&gt;&#xd;
                              &lt;/ApplicableFlight&gt;&#xd;
                           &lt;/OfferItem&gt;&#xd;
                           &lt;OfferItem&gt;&#xd;
                              &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162715&lt;/OfferItemID&gt;&#xd;
                              &lt;Passengers&gt;&#xd;
                                 &lt;PassengerReference&gt;PAX1&lt;/PassengerReference&gt;&#xd;
                              &lt;/Passengers&gt;&#xd;
                              &lt;AssociatedServices&gt;&#xd;
                                 &lt;AssociatedService&gt;&#xd;
                                    &lt;ServiceID Owner=&quot;${Airline}&quot;&gt;SV3&lt;/ServiceID&gt;&#xd;
                                 &lt;/AssociatedService&gt;&#xd;
                              &lt;/AssociatedServices&gt;&#xd;
                           &lt;/OfferItem&gt;&#xd;
                           &#xd;
                  &#xd;
                           &#xd;
                        &lt;/OfferItems&gt;&#xd;
                     &lt;/Offer&gt;&#xd;
                     &lt;Offer&gt;&#xd;
                        &lt;OfferID Owner=&quot;${Airline}&quot;&gt;1#M#111198795&lt;/OfferID&gt;&#xd;
                        &lt;OfferItems&gt;&#xd;
                           &lt;OfferItem&gt;&#xd;
                              &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162717&lt;/OfferItemID&gt;&#xd;
                              &lt;Passengers&gt;&#xd;
                                 &lt;PassengerReference&gt;PAX2&lt;/PassengerReference&gt;&#xd;
                              &lt;/Passengers&gt;&#xd;
                              &lt;ApplicableFlight&gt;&#xd;
                                 &lt;OriginDestinationReferences&gt;OD3&lt;/OriginDestinationReferences&gt;&#xd;
                              &lt;/ApplicableFlight&gt;&#xd;
                           &lt;/OfferItem&gt;&#xd;
                           &lt;OfferItem&gt;&#xd;
                              &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162718&lt;/OfferItemID&gt;&#xd;
                              &lt;Passengers&gt;&#xd;
                                 &lt;PassengerReference&gt;PAX2&lt;/PassengerReference&gt;&#xd;
                              &lt;/Passengers&gt;&#xd;
                              &lt;AssociatedServices&gt;&#xd;
                                 &lt;AssociatedService&gt;&#xd;
                                    &lt;ServiceID Owner=&quot;${Airline}&quot;&gt;SV4&lt;/ServiceID&gt;&#xd;
                                 &lt;/AssociatedService&gt;&#xd;
                              &lt;/AssociatedServices&gt;&#xd;
                           &lt;/OfferItem&gt;&#xd;
                           &#xd;
                         &#xd;
                        &lt;/OfferItems&gt;&#xd;
                     &lt;/Offer&gt;&#xd;
                  &lt;/Offers&gt;&#xd;
               &lt;/ShoppingResponse&gt;&#xd;
               &lt;OfferItem&gt;&#xd;
                  &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162711&lt;/OfferItemID&gt;&#xd;
                  &lt;OfferItemType&gt;&#xd;
                     &lt;DetailedFlightItem&gt;&#xd;
                        &lt;OriginDestination&gt;&#xd;
                           &lt;Flight&gt;&#xd;
                              &lt;Departure&gt;&#xd;
                                 &lt;AirportCode&gt;${AirportCode1}&lt;/AirportCode&gt;&#xd;
                                 &lt;Date&gt;${DepartureDate}&lt;/Date&gt;&#xd;
                                 &lt;Time&gt;02:00&lt;/Time&gt;&#xd;
                              &lt;/Departure&gt;&#xd;
                              &lt;Arrival&gt;&#xd;
                                 &lt;AirportCode&gt;${AirportCode2}&lt;/AirportCode&gt;&#xd;
                                 &lt;Date&gt;${ArrivalDate}&lt;/Date&gt;&#xd;
                                 &lt;Time&gt;08:10&lt;/Time&gt;&#xd;
                              &lt;/Arrival&gt;&#xd;
                              &lt;MarketingCarrier&gt;&#xd;
                                 &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                                 &lt;FlightNumber&gt;${FlightNumber}&lt;/FlightNumber&gt;&#xd;
                              &lt;/MarketingCarrier&gt;&#xd;
                              &lt;OperatingCarrier&gt;&#xd;
                                 &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                                 &lt;FlightNumber&gt;${FlightNumber}&lt;/FlightNumber&gt;&#xd;
                              &lt;/OperatingCarrier&gt;&#xd;
                           &lt;/Flight&gt;&#xd;
                        &lt;/OriginDestination&gt;&#xd;
                        &lt;FareDetail&gt;&#xd;
                           &lt;FareComponent&gt;&#xd;
                              &lt;SegmentReference&gt;SEG1&lt;/SegmentReference&gt;&#xd;
                              &lt;PriceBreakdown&gt;&#xd;
                                 &lt;Price&gt;&#xd;
                                    &lt;BaseAmount Code=&quot;USD&quot;&gt;100.00&lt;/BaseAmount&gt;&#xd;
                                    &lt;Taxes&gt;&#xd;
                                       &lt;Total Code=&quot;USD&quot;&gt;20.00&lt;/Total&gt;&#xd;
                                       &lt;Breakdown&gt;&#xd;
                                          &lt;Tax&gt;&#xd;
                                             &lt;Amount Code=&quot;USD&quot;&gt;10.00&lt;/Amount&gt;&#xd;
                                             &lt;TaxCode&gt;FC&lt;/TaxCode&gt;&#xd;
                                          &lt;/Tax&gt;&#xd;
                                          &lt;Tax&gt;&#xd;
                                             &lt;Amount Code=&quot;USD&quot;&gt;10.00&lt;/Amount&gt;&#xd;
                                             &lt;TaxCode&gt;DE&lt;/TaxCode&gt;&#xd;
                                          &lt;/Tax&gt;&#xd;
                                       &lt;/Breakdown&gt;&#xd;
                                    &lt;/Taxes&gt;&#xd;
                                 &lt;/Price&gt;&#xd;
                              &lt;/PriceBreakdown&gt;&#xd;
                              &lt;FareBasis&gt;&#xd;
                                 &lt;FareBasisCode&gt;&#xd;
                                    &lt;Code&gt;F5&lt;/Code&gt;&#xd;
                                 &lt;/FareBasisCode&gt;&#xd;
                                 &lt;RBD&gt;Y&lt;/RBD&gt;&#xd;
                              &lt;/FareBasis&gt;&#xd;
                              &lt;FareRules&gt;&#xd;
                                 &lt;Penalty&gt;&#xd;
                                    &lt;Details&gt;&#xd;
                                       &lt;Detail&gt;&#xd;
                                          &lt;Type&gt;Cancel&lt;/Type&gt;&#xd;
                                          &lt;Amounts&gt;&#xd;
                                             &lt;Amount&gt;&#xd;
                                                &lt;CurrencyAmountValue&gt;60.00&lt;/CurrencyAmountValue&gt;&#xd;
                                                &lt;!--PercentageValue&gt;22&lt;/PercentageValue--&gt;&#xd;
                                             &lt;/Amount&gt;&#xd;
                                          &lt;/Amounts&gt;&#xd;
                                       &lt;/Detail&gt;&#xd;
                                       &lt;Detail&gt;&#xd;
                                          &lt;Type&gt;Change&lt;/Type&gt;&#xd;
                                          &lt;Amounts&gt;&#xd;
                                             &lt;Amount&gt;&#xd;
                                                &lt;CurrencyAmountValue&gt;40.00&lt;/CurrencyAmountValue&gt;&#xd;
                                                &lt;!--PercentageValue&gt;23&lt;/PercentageValue--&gt;&#xd;
                                             &lt;/Amount&gt;&#xd;
                                          &lt;/Amounts&gt;&#xd;
                                       &lt;/Detail&gt;&#xd;
                                    &lt;/Details&gt;&#xd;
                                 &lt;/Penalty&gt;&#xd;
                              &lt;/FareRules&gt;&#xd;
                           &lt;/FareComponent&gt;&#xd;
                        &lt;/FareDetail&gt;&#xd;
                     &lt;/DetailedFlightItem&gt;&#xd;
                  &lt;/OfferItemType&gt;&#xd;
                  &lt;TimeLimits&gt;&#xd;
                     &lt;TimeLimit&gt;&#xd;
                        &lt;PriceGuaranteeTimeLimit Timestamp=&quot;${Timestamp_TicketBy}&quot;/&gt;&#xd;
                        &lt;TicketByTimeLimit&gt;&#xd;
                           &lt;TicketBy&gt;${Timestamp_TicketBy}&lt;/TicketBy&gt;&#xd;
                        &lt;/TicketByTimeLimit&gt;&#xd;
                     &lt;/TimeLimit&gt;&#xd;
                  &lt;/TimeLimits&gt;&#xd;
               &lt;/OfferItem&gt;&#xd;
               &lt;OfferItem&gt;&#xd;
                  &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162712&lt;/OfferItemID&gt;&#xd;
                  &lt;OfferItemType&gt;&#xd;
                     &lt;DetailedFlightItem&gt;&#xd;
                        &lt;OriginDestination&gt;&#xd;
                           &lt;Flight&gt;&#xd;
                              &lt;Departure&gt;&#xd;
                                 &lt;AirportCode&gt;${AirportCode1}&lt;/AirportCode&gt;&#xd;
                                 &lt;Date&gt;${DepartureDate}&lt;/Date&gt;&#xd;
                                 &lt;Time&gt;02:00&lt;/Time&gt;&#xd;
                              &lt;/Departure&gt;&#xd;
                              &lt;Arrival&gt;&#xd;
                                 &lt;AirportCode&gt;${AirportCode2}&lt;/AirportCode&gt;&#xd;
                                 &lt;Date&gt;${ArrivalDate}&lt;/Date&gt;&#xd;
                                 &lt;Time&gt;08:10&lt;/Time&gt;&#xd;
                              &lt;/Arrival&gt;&#xd;
                              &lt;MarketingCarrier&gt;&#xd;
                                 &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                                 &lt;FlightNumber&gt;${FlightNumber}&lt;/FlightNumber&gt;&#xd;
                              &lt;/MarketingCarrier&gt;&#xd;
                              &lt;OperatingCarrier&gt;&#xd;
                                 &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                                 &lt;FlightNumber&gt;${FlightNumber}&lt;/FlightNumber&gt;&#xd;
                              &lt;/OperatingCarrier&gt;&#xd;
                           &lt;/Flight&gt;&#xd;
                        &lt;/OriginDestination&gt;&#xd;
                     &lt;/DetailedFlightItem&gt;&#xd;
                  &lt;/OfferItemType&gt;&#xd;
                  &lt;TimeLimits&gt;&#xd;
                     &lt;TimeLimit&gt;&#xd;
                        &lt;PriceGuaranteeTimeLimit Timestamp=&quot;${Timestamp_TicketBy}&quot;/&gt;&#xd;
                        &lt;TicketByTimeLimit&gt;&#xd;
                           &lt;TicketBy&gt;${Timestamp_TicketBy}&lt;/TicketBy&gt;&#xd;
                        &lt;/TicketByTimeLimit&gt;&#xd;
                     &lt;/TimeLimit&gt;&#xd;
                  &lt;/TimeLimits&gt;&#xd;
               &lt;/OfferItem&gt;&#xd;
               &lt;OfferItem&gt;&#xd;
                  &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162713&lt;/OfferItemID&gt;&#xd;
                  &lt;OfferItemType&gt;&#xd;
                     &lt;OtherItem&gt;&#xd;
                        &lt;Price&gt;&#xd;
                           &lt;DetailCurrencyPrice&gt;&#xd;
                              &lt;Total Code=&quot;USD&quot;&gt;120.00&lt;/Total&gt;&#xd;
                           &lt;/DetailCurrencyPrice&gt;&#xd;
                        &lt;/Price&gt;&#xd;
                     &lt;/OtherItem&gt;&#xd;
                  &lt;/OfferItemType&gt;&#xd;
                  &lt;TimeLimits&gt;&#xd;
                     &lt;TimeLimit&gt;&#xd;
                        &lt;PriceGuaranteeTimeLimit Timestamp=&quot;${Timestamp_TicketBy}&quot;/&gt;&#xd;
                        &lt;TicketByTimeLimit&gt;&#xd;
                           &lt;TicketBy&gt;${Timestamp_TicketBy}&lt;/TicketBy&gt;&#xd;
                        &lt;/TicketByTimeLimit&gt;&#xd;
                     &lt;/TimeLimit&gt;&#xd;
                  &lt;/TimeLimits&gt;&#xd;
               &lt;/OfferItem&gt;&#xd;
               &lt;OfferItem&gt;&#xd;
                  &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162714&lt;/OfferItemID&gt;&#xd;
                  &lt;OfferItemType&gt;&#xd;
                     &lt;DetailedFlightItem&gt;&#xd;
                        &lt;OriginDestination&gt;&#xd;
                           &lt;Flight&gt;&#xd;
                              &lt;Departure&gt;&#xd;
                                 &lt;AirportCode&gt;${AirportCode1}&lt;/AirportCode&gt;&#xd;
                                 &lt;Date&gt;${DepartureDate}&lt;/Date&gt;&#xd;
                                 &lt;Time&gt;02:00&lt;/Time&gt;&#xd;
                              &lt;/Departure&gt;&#xd;
                              &lt;Arrival&gt;&#xd;
                                 &lt;AirportCode&gt;${AirportCode2}&lt;/AirportCode&gt;&#xd;
                                 &lt;Date&gt;${ArrivalDate}&lt;/Date&gt;&#xd;
                                 &lt;Time&gt;08:10&lt;/Time&gt;&#xd;
                              &lt;/Arrival&gt;&#xd;
                              &lt;MarketingCarrier&gt;&#xd;
                                 &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                                 &lt;FlightNumber&gt;${FlightNumber}&lt;/FlightNumber&gt;&#xd;
                              &lt;/MarketingCarrier&gt;&#xd;
                              &lt;OperatingCarrier&gt;&#xd;
                                 &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                                 &lt;FlightNumber&gt;${FlightNumber}&lt;/FlightNumber&gt;&#xd;
                              &lt;/OperatingCarrier&gt;&#xd;
                           &lt;/Flight&gt;&#xd;
                        &lt;/OriginDestination&gt;&#xd;
                        &lt;FareDetail&gt;&#xd;
                           &lt;FareComponent&gt;&#xd;
                              &lt;SegmentReference&gt;SEG2&lt;/SegmentReference&gt;&#xd;
                              &lt;PriceBreakdown&gt;&#xd;
                                 &lt;Price&gt;&#xd;
                                    &lt;BaseAmount Code=&quot;USD&quot;&gt;120.00&lt;/BaseAmount&gt;&#xd;
                                    &lt;Taxes&gt;&#xd;
                                       &lt;Total Code=&quot;USD&quot;&gt;30.00&lt;/Total&gt;&#xd;
                                       &lt;Breakdown&gt;&#xd;
                                          &lt;Tax&gt;&#xd;
                                             &lt;Amount Code=&quot;USD&quot;&gt;15.00&lt;/Amount&gt;&#xd;
                                             &lt;TaxCode&gt;FC&lt;/TaxCode&gt;&#xd;
                                          &lt;/Tax&gt;&#xd;
                                          &lt;Tax&gt;&#xd;
                                             &lt;Amount Code=&quot;USD&quot;&gt;15.00&lt;/Amount&gt;&#xd;
                                             &lt;TaxCode&gt;DE&lt;/TaxCode&gt;&#xd;
                                          &lt;/Tax&gt;&#xd;
                                       &lt;/Breakdown&gt;&#xd;
                                    &lt;/Taxes&gt;&#xd;
                                 &lt;/Price&gt;&#xd;
                              &lt;/PriceBreakdown&gt;&#xd;
                              &lt;FareBasis&gt;&#xd;
                                 &lt;FareBasisCode&gt;&#xd;
                                    &lt;Code&gt;F5&lt;/Code&gt;&#xd;
                                 &lt;/FareBasisCode&gt;&#xd;
                                 &lt;RBD&gt;Y&lt;/RBD&gt;&#xd;
                              &lt;/FareBasis&gt;&#xd;
                              &lt;FareRules&gt;&#xd;
                                 &lt;Penalty&gt;&#xd;
                                    &lt;Details&gt;&#xd;
                                       &lt;Detail&gt;&#xd;
                                          &lt;Type&gt;Cancel&lt;/Type&gt;&#xd;
                                          &lt;Amounts&gt;&#xd;
                                             &lt;Amount&gt;&#xd;
                                                &lt;CurrencyAmountValue&gt;30.00&lt;/CurrencyAmountValue&gt;&#xd;
                                                &lt;!--PercentageValue&gt;22&lt;/PercentageValue--&gt;&#xd;
                                             &lt;/Amount&gt;&#xd;
                                          &lt;/Amounts&gt;&#xd;
                                       &lt;/Detail&gt;&#xd;
                                       &lt;Detail&gt;&#xd;
                                          &lt;Type&gt;Change&lt;/Type&gt;&#xd;
                                          &lt;Amounts&gt;&#xd;
                                             &lt;Amount&gt;&#xd;
                                                &lt;CurrencyAmountValue&gt;20.00&lt;/CurrencyAmountValue&gt;&#xd;
                                                &lt;!--PercentageValue&gt;23&lt;/PercentageValue--&gt;&#xd;
                                             &lt;/Amount&gt;&#xd;
                                          &lt;/Amounts&gt;&#xd;
                                       &lt;/Detail&gt;&#xd;
                                    &lt;/Details&gt;&#xd;
                                 &lt;/Penalty&gt;&#xd;
                              &lt;/FareRules&gt;&#xd;
                           &lt;/FareComponent&gt;&#xd;
                        &lt;/FareDetail&gt;&#xd;
                     &lt;/DetailedFlightItem&gt;&#xd;
                  &lt;/OfferItemType&gt;&#xd;
                  &lt;TimeLimits&gt;&#xd;
                     &lt;TimeLimit&gt;&#xd;
                        &lt;PriceGuaranteeTimeLimit Timestamp=&quot;${Timestamp_TicketBy}&quot;/&gt;&#xd;
                        &lt;TicketByTimeLimit&gt;&#xd;
                           &lt;TicketBy&gt;${Timestamp_TicketBy}&lt;/TicketBy&gt;&#xd;
                        &lt;/TicketByTimeLimit&gt;&#xd;
                     &lt;/TimeLimit&gt;&#xd;
                  &lt;/TimeLimits&gt;&#xd;
               &lt;/OfferItem&gt;&#xd;
               &lt;OfferItem&gt;&#xd;
                  &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162715&lt;/OfferItemID&gt;&#xd;
                  &lt;OfferItemType&gt;&#xd;
                     &lt;DetailedFlightItem&gt;&#xd;
                        &lt;OriginDestination&gt;&#xd;
                           &lt;Flight&gt;&#xd;
                              &lt;Departure&gt;&#xd;
                                 &lt;AirportCode&gt;${AirportCode1}&lt;/AirportCode&gt;&#xd;
                                 &lt;Date&gt;${DepartureDate}&lt;/Date&gt;&#xd;
                                 &lt;Time&gt;02:00&lt;/Time&gt;&#xd;
                              &lt;/Departure&gt;&#xd;
                              &lt;Arrival&gt;&#xd;
                                 &lt;AirportCode&gt;${AirportCode2}&lt;/AirportCode&gt;&#xd;
                                 &lt;Date&gt;${ArrivalDate}&lt;/Date&gt;&#xd;
                                 &lt;Time&gt;08:10&lt;/Time&gt;&#xd;
                              &lt;/Arrival&gt;&#xd;
                              &lt;MarketingCarrier&gt;&#xd;
                                 &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                                 &lt;FlightNumber&gt;${FlightNumber}&lt;/FlightNumber&gt;&#xd;
                              &lt;/MarketingCarrier&gt;&#xd;
                              &lt;OperatingCarrier&gt;&#xd;
                                 &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                                 &lt;FlightNumber&gt;${FlightNumber}&lt;/FlightNumber&gt;&#xd;
                              &lt;/OperatingCarrier&gt;&#xd;
                           &lt;/Flight&gt;&#xd;
                        &lt;/OriginDestination&gt;&#xd;
                     &lt;/DetailedFlightItem&gt;&#xd;
                  &lt;/OfferItemType&gt;&#xd;
                  &lt;TimeLimits&gt;&#xd;
                     &lt;TimeLimit&gt;&#xd;
                        &lt;PriceGuaranteeTimeLimit Timestamp=&quot;${Timestamp_TicketBy}&quot;/&gt;&#xd;
                        &lt;TicketByTimeLimit&gt;&#xd;
                           &lt;TicketBy&gt;${Timestamp_TicketBy}&lt;/TicketBy&gt;&#xd;
                        &lt;/TicketByTimeLimit&gt;&#xd;
                     &lt;/TimeLimit&gt;&#xd;
                  &lt;/TimeLimits&gt;&#xd;
               &lt;/OfferItem&gt;&#xd;
               &lt;OfferItem&gt;&#xd;
                  &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162716&lt;/OfferItemID&gt;&#xd;
                  &lt;OfferItemType&gt;&#xd;
                     &lt;OtherItem&gt;&#xd;
                        &lt;Price&gt;&#xd;
                           &lt;DetailCurrencyPrice&gt;&#xd;
                              &lt;Total Code=&quot;USD&quot;&gt;120.00&lt;/Total&gt;&#xd;
                           &lt;/DetailCurrencyPrice&gt;&#xd;
                        &lt;/Price&gt;&#xd;
                     &lt;/OtherItem&gt;&#xd;
                  &lt;/OfferItemType&gt;&#xd;
                  &lt;TimeLimits&gt;&#xd;
                     &lt;TimeLimit&gt;&#xd;
                        &lt;PriceGuaranteeTimeLimit Timestamp=&quot;${Timestamp_TicketBy}&quot;/&gt;&#xd;
                        &lt;TicketByTimeLimit&gt;&#xd;
                           &lt;TicketBy&gt;${Timestamp_TicketBy}&lt;/TicketBy&gt;&#xd;
                        &lt;/TicketByTimeLimit&gt;&#xd;
                     &lt;/TimeLimit&gt;&#xd;
                  &lt;/TimeLimits&gt;&#xd;
               &lt;/OfferItem&gt;&#xd;
               &lt;OfferItem&gt;&#xd;
                  &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162717&lt;/OfferItemID&gt;&#xd;
                  &lt;OfferItemType&gt;&#xd;
                     &lt;DetailedFlightItem&gt;&#xd;
                        &lt;OriginDestination&gt;&#xd;
                           &lt;Flight&gt;&#xd;
                              &lt;Departure&gt;&#xd;
                                 &lt;AirportCode&gt;${AirportCode1}&lt;/AirportCode&gt;&#xd;
                                 &lt;Date&gt;${DepartureDate}&lt;/Date&gt;&#xd;
                                 &lt;Time&gt;02:00&lt;/Time&gt;&#xd;
                              &lt;/Departure&gt;&#xd;
                              &lt;Arrival&gt;&#xd;
                                 &lt;AirportCode&gt;${AirportCode2}&lt;/AirportCode&gt;&#xd;
                                 &lt;Date&gt;${ArrivalDate}&lt;/Date&gt;&#xd;
                                 &lt;Time&gt;08:10&lt;/Time&gt;&#xd;
                              &lt;/Arrival&gt;&#xd;
                              &lt;MarketingCarrier&gt;&#xd;
                                 &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                                 &lt;FlightNumber&gt;${FlightNumber}&lt;/FlightNumber&gt;&#xd;
                              &lt;/MarketingCarrier&gt;&#xd;
                              &lt;OperatingCarrier&gt;&#xd;
                                 &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                                 &lt;FlightNumber&gt;${FlightNumber}&lt;/FlightNumber&gt;&#xd;
                              &lt;/OperatingCarrier&gt;&#xd;
                           &lt;/Flight&gt;&#xd;
                        &lt;/OriginDestination&gt;&#xd;
                        &lt;FareDetail&gt;&#xd;
                           &lt;FareComponent&gt;&#xd;
                              &lt;SegmentReference&gt;SEG3&lt;/SegmentReference&gt;&#xd;
                              &lt;PriceBreakdown&gt;&#xd;
                                 &lt;Price&gt;&#xd;
                                    &lt;BaseAmount Code=&quot;USD&quot;&gt;140.00&lt;/BaseAmount&gt;&#xd;
                                    &lt;Taxes&gt;&#xd;
                                       &lt;Total Code=&quot;USD&quot;&gt;40.00&lt;/Total&gt;&#xd;
                                       &lt;Breakdown&gt;&#xd;
                                          &lt;Tax&gt;&#xd;
                                             &lt;Amount Code=&quot;USD&quot;&gt;20.00&lt;/Amount&gt;&#xd;
                                             &lt;TaxCode&gt;FC&lt;/TaxCode&gt;&#xd;
                                          &lt;/Tax&gt;&#xd;
                                          &lt;Tax&gt;&#xd;
                                             &lt;Amount Code=&quot;USD&quot;&gt;20.00&lt;/Amount&gt;&#xd;
                                             &lt;TaxCode&gt;DE&lt;/TaxCode&gt;&#xd;
                                          &lt;/Tax&gt;&#xd;
                                       &lt;/Breakdown&gt;&#xd;
                                    &lt;/Taxes&gt;&#xd;
                                 &lt;/Price&gt;&#xd;
                              &lt;/PriceBreakdown&gt;&#xd;
                              &lt;FareBasis&gt;&#xd;
                                 &lt;FareBasisCode&gt;&#xd;
                                    &lt;Code&gt;F5&lt;/Code&gt;&#xd;
                                 &lt;/FareBasisCode&gt;&#xd;
                                 &lt;RBD&gt;Y&lt;/RBD&gt;&#xd;
                              &lt;/FareBasis&gt;&#xd;
                              &lt;FareRules&gt;&#xd;
                                 &lt;Penalty&gt;&#xd;
                                    &lt;Details&gt;&#xd;
                                       &lt;Detail&gt;&#xd;
                                          &lt;Type&gt;Cancel&lt;/Type&gt;&#xd;
                                          &lt;Amounts&gt;&#xd;
                                             &lt;Amount&gt;&#xd;
                                                &lt;CurrencyAmountValue&gt;35.00&lt;/CurrencyAmountValue&gt;&#xd;
                                                &lt;!--PercentageValue&gt;22&lt;/PercentageValue--&gt;&#xd;
                                             &lt;/Amount&gt;&#xd;
                                          &lt;/Amounts&gt;&#xd;
                                       &lt;/Detail&gt;&#xd;
                                       &lt;Detail&gt;&#xd;
                                          &lt;Type&gt;Change&lt;/Type&gt;&#xd;
                                          &lt;Amounts&gt;&#xd;
                                             &lt;Amount&gt;&#xd;
                                                &lt;CurrencyAmountValue&gt;25.00&lt;/CurrencyAmountValue&gt;&#xd;
                                                &lt;!--PercentageValue&gt;23&lt;/PercentageValue--&gt;&#xd;
                                             &lt;/Amount&gt;&#xd;
                                          &lt;/Amounts&gt;&#xd;
                                       &lt;/Detail&gt;&#xd;
                                    &lt;/Details&gt;&#xd;
                                 &lt;/Penalty&gt;&#xd;
                              &lt;/FareRules&gt;&#xd;
                           &lt;/FareComponent&gt;&#xd;
                        &lt;/FareDetail&gt;&#xd;
                     &lt;/DetailedFlightItem&gt;&#xd;
                  &lt;/OfferItemType&gt;&#xd;
                  &lt;TimeLimits&gt;&#xd;
                     &lt;TimeLimit&gt;&#xd;
                        &lt;PriceGuaranteeTimeLimit Timestamp=&quot;${Timestamp_TicketBy}&quot;/&gt;&#xd;
                        &lt;TicketByTimeLimit&gt;&#xd;
                           &lt;TicketBy&gt;${Timestamp_TicketBy}&lt;/TicketBy&gt;&#xd;
                        &lt;/TicketByTimeLimit&gt;&#xd;
                     &lt;/TimeLimit&gt;&#xd;
                  &lt;/TimeLimits&gt;&#xd;
               &lt;/OfferItem&gt;&#xd;
               &lt;OfferItem&gt;&#xd;
                  &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162718&lt;/OfferItemID&gt;&#xd;
                  &lt;OfferItemType&gt;&#xd;
                     &lt;DetailedFlightItem&gt;&#xd;
                        &lt;OriginDestination&gt;&#xd;
                           &lt;Flight&gt;&#xd;
                              &lt;Departure&gt;&#xd;
                                 &lt;AirportCode&gt;${AirportCode1}&lt;/AirportCode&gt;&#xd;
                                 &lt;Date&gt;${DepartureDate}&lt;/Date&gt;&#xd;
                                 &lt;Time&gt;02:00&lt;/Time&gt;&#xd;
                              &lt;/Departure&gt;&#xd;
                              &lt;Arrival&gt;&#xd;
                                 &lt;AirportCode&gt;${AirportCode2}&lt;/AirportCode&gt;&#xd;
                                 &lt;Date&gt;${ArrivalDate}&lt;/Date&gt;&#xd;
                                 &lt;Time&gt;08:10&lt;/Time&gt;&#xd;
                              &lt;/Arrival&gt;&#xd;
                              &lt;MarketingCarrier&gt;&#xd;
                                 &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                                 &lt;FlightNumber&gt;${FlightNumber}&lt;/FlightNumber&gt;&#xd;
                              &lt;/MarketingCarrier&gt;&#xd;
                              &lt;OperatingCarrier&gt;&#xd;
                                 &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                                 &lt;FlightNumber&gt;${FlightNumber}&lt;/FlightNumber&gt;&#xd;
                              &lt;/OperatingCarrier&gt;&#xd;
                           &lt;/Flight&gt;&#xd;
                        &lt;/OriginDestination&gt;&#xd;
                     &lt;/DetailedFlightItem&gt;&#xd;
                  &lt;/OfferItemType&gt;&#xd;
                  &lt;TimeLimits&gt;&#xd;
                     &lt;TimeLimit&gt;&#xd;
                        &lt;PriceGuaranteeTimeLimit Timestamp=&quot;${Timestamp_TicketBy}&quot;/&gt;&#xd;
                        &lt;TicketByTimeLimit&gt;&#xd;
                           &lt;TicketBy&gt;${Timestamp_TicketBy}&lt;/TicketBy&gt;&#xd;
                        &lt;/TicketByTimeLimit&gt;&#xd;
                     &lt;/TimeLimit&gt;&#xd;
                  &lt;/TimeLimits&gt;&#xd;
               &lt;/OfferItem&gt;&#xd;
               &lt;OfferItem&gt;&#xd;
                  &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162719&lt;/OfferItemID&gt;&#xd;
                  &lt;OfferItemType&gt;&#xd;
                     &lt;OtherItem&gt;&#xd;
                        &lt;Price&gt;&#xd;
                           &lt;DetailCurrencyPrice&gt;&#xd;
                              &lt;Total Code=&quot;USD&quot;&gt;120.00&lt;/Total&gt;&#xd;
                           &lt;/DetailCurrencyPrice&gt;&#xd;
                        &lt;/Price&gt;&#xd;
                     &lt;/OtherItem&gt;&#xd;
                  &lt;/OfferItemType&gt;&#xd;
                  &lt;TimeLimits&gt;&#xd;
                     &lt;TimeLimit&gt;&#xd;
                        &lt;PriceGuaranteeTimeLimit Timestamp=&quot;${Timestamp_TicketBy}&quot;/&gt;&#xd;
                        &lt;TicketByTimeLimit&gt;&#xd;
                           &lt;TicketBy&gt;${Timestamp_TicketBy}&lt;/TicketBy&gt;&#xd;
                        &lt;/TicketByTimeLimit&gt;&#xd;
                     &lt;/TimeLimit&gt;&#xd;
                  &lt;/TimeLimits&gt;&#xd;
               &lt;/OfferItem&gt;&#xd;
            &lt;/OrderItems&gt;&#xd;
            &#xd;
            &lt;DataLists&gt;&#xd;
              &#xd;
               &lt;FlightSegmentList&gt;&#xd;
                  &lt;FlightSegment SegmentKey=&quot;SEG1&quot;&gt;&#xd;
                     &lt;Departure&gt;&#xd;
                        &lt;AirportCode&gt;${AirportCode1}&lt;/AirportCode&gt;&#xd;
                        &lt;Date&gt;${DepartureDate}&lt;/Date&gt;&#xd;
                        &lt;Time&gt;11:10&lt;/Time&gt;&#xd;
                     &lt;/Departure&gt;&#xd;
                     &lt;Arrival&gt;&#xd;
                        &lt;AirportCode&gt;${AirportCode2}&lt;/AirportCode&gt;&#xd;
                        &lt;Date&gt;${ArrivalDate}&lt;/Date&gt;&#xd;
                        &lt;Time&gt;20:20&lt;/Time&gt;&#xd;
                     &lt;/Arrival&gt;&#xd;
                     &lt;MarketingCarrier&gt;&#xd;
                        &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                        &lt;FlightNumber&gt;${FlightNumber}&lt;/FlightNumber&gt;&#xd;
                     &lt;/MarketingCarrier&gt;&#xd;
                     &lt;OperatingCarrier&gt;&#xd;
                        &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                        &lt;FlightNumber&gt;${FlightNumber}&lt;/FlightNumber&gt;&#xd;
                     &lt;/OperatingCarrier&gt;&#xd;
                     &lt;Equipment&gt;&#xd;
                        &lt;AircraftCode&gt;320&lt;/AircraftCode&gt;&#xd;
                        &lt;Name&gt;320 - AIRBUS INDUSTRIE A320 JET&lt;/Name&gt;&#xd;
                     &lt;/Equipment&gt;&#xd;
                     &lt;ClassOfService&gt;&#xd;
                        &lt;Code&gt;Y&lt;/Code&gt;&#xd;
                     &lt;/ClassOfService&gt;&#xd;
                     &lt;FlightDetail&gt;&#xd;
                        &lt;FlightDuration&gt;&#xd;
                           &lt;Value&gt;PT6H10M&lt;/Value&gt;&#xd;
                        &lt;/FlightDuration&gt;&#xd;
                     &lt;/FlightDetail&gt;&#xd;
                  &lt;/FlightSegment&gt;&#xd;
                  &lt;FlightSegment SegmentKey=&quot;SEG2&quot;&gt;&#xd;
                     &lt;Departure&gt;&#xd;
                        &lt;AirportCode&gt;${AirportCode2}&lt;/AirportCode&gt;&#xd;
                        &lt;Date&gt;${DepartureDate}&lt;/Date&gt;&#xd;
                        &lt;Time&gt;11:10&lt;/Time&gt;&#xd;
                     &lt;/Departure&gt;&#xd;
                     &lt;Arrival&gt;&#xd;
                        &lt;AirportCode&gt;${AirportCode4}&lt;/AirportCode&gt;&#xd;
                        &lt;Date&gt;${ArrivalDate}&lt;/Date&gt;&#xd;
                        &lt;Time&gt;20:20&lt;/Time&gt;&#xd;
                     &lt;/Arrival&gt;&#xd;
                     &lt;MarketingCarrier&gt;&#xd;
                        &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                        &lt;FlightNumber&gt;${FlightNumber1}&lt;/FlightNumber&gt;&#xd;
                     &lt;/MarketingCarrier&gt;&#xd;
                     &lt;OperatingCarrier&gt;&#xd;
                        &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                        &lt;FlightNumber&gt;${FlightNumber1}&lt;/FlightNumber&gt;&#xd;
                     &lt;/OperatingCarrier&gt;&#xd;
                     &lt;Equipment&gt;&#xd;
                        &lt;AircraftCode&gt;320&lt;/AircraftCode&gt;&#xd;
                        &lt;Name&gt;320 - AIRBUS INDUSTRIE A320 JET&lt;/Name&gt;&#xd;
                     &lt;/Equipment&gt;&#xd;
                     &lt;ClassOfService&gt;&#xd;
                        &lt;Code&gt;Y&lt;/Code&gt;&#xd;
                     &lt;/ClassOfService&gt;&#xd;
                     &lt;FlightDetail&gt;&#xd;
                        &lt;FlightDuration&gt;&#xd;
                           &lt;Value&gt;PT6H10M&lt;/Value&gt;&#xd;
                        &lt;/FlightDuration&gt;&#xd;
                     &lt;/FlightDetail&gt;&#xd;
                  &lt;/FlightSegment&gt;&#xd;
                  &lt;FlightSegment SegmentKey=&quot;SEG3&quot;&gt;&#xd;
                     &lt;Departure&gt;&#xd;
                        &lt;AirportCode&gt;${AirportCode2}&lt;/AirportCode&gt;&#xd;
                        &lt;Date&gt;${DepartureDate1}&lt;/Date&gt;&#xd;
                        &lt;Time&gt;11:10&lt;/Time&gt;&#xd;
                     &lt;/Departure&gt;&#xd;
                     &lt;Arrival&gt;&#xd;
                        &lt;AirportCode&gt;${AirportCode4}&lt;/AirportCode&gt;&#xd;
                        &lt;Date&gt;${ArrivalDate1}&lt;/Date&gt;&#xd;
                        &lt;Time&gt;20:20&lt;/Time&gt;&#xd;
                     &lt;/Arrival&gt;&#xd;
                     &lt;MarketingCarrier&gt;&#xd;
                        &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                        &lt;FlightNumber&gt;${FlightNumber1}&lt;/FlightNumber&gt;&#xd;
                     &lt;/MarketingCarrier&gt;&#xd;
                     &lt;OperatingCarrier&gt;&#xd;
                        &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                        &lt;FlightNumber&gt;${FlightNumber1}&lt;/FlightNumber&gt;&#xd;
                     &lt;/OperatingCarrier&gt;&#xd;
                     &lt;Equipment&gt;&#xd;
                        &lt;AircraftCode&gt;320&lt;/AircraftCode&gt;&#xd;
                        &lt;Name&gt;320 - AIRBUS INDUSTRIE A320 JET&lt;/Name&gt;&#xd;
                     &lt;/Equipment&gt;&#xd;
                     &lt;ClassOfService&gt;&#xd;
                        &lt;Code&gt;Y&lt;/Code&gt;&#xd;
                     &lt;/ClassOfService&gt;&#xd;
                     &lt;FlightDetail&gt;&#xd;
                        &lt;FlightDuration&gt;&#xd;
                           &lt;Value&gt;PT6H10M&lt;/Value&gt;&#xd;
                        &lt;/FlightDuration&gt;&#xd;
                     &lt;/FlightDetail&gt;&#xd;
                  &lt;/FlightSegment&gt;&#xd;
               &lt;/FlightSegmentList&gt;&#xd;
               &lt;FlightList&gt;&#xd;
                  &lt;Flight FlightKey=&quot;FL1&quot;&gt;&#xd;
                     &lt;Journey&gt;&#xd;
                        &lt;Time&gt;PT16H10M&lt;/Time&gt;&#xd;
                     &lt;/Journey&gt;&#xd;
                     &lt;SegmentReferences&gt;SEG1&lt;/SegmentReferences&gt;&#xd;
                  &lt;/Flight&gt;&#xd;
                  &lt;Flight FlightKey=&quot;FL2&quot;&gt;&#xd;
                     &lt;Journey&gt;&#xd;
                        &lt;Time&gt;PT16H10M&lt;/Time&gt;&#xd;
                     &lt;/Journey&gt;&#xd;
                     &lt;SegmentReferences&gt;SEG2&lt;/SegmentReferences&gt;&#xd;
                  &lt;/Flight&gt;&#xd;
                  &lt;Flight FlightKey=&quot;FL3&quot;&gt;&#xd;
                     &lt;Journey&gt;&#xd;
                        &lt;Time&gt;PT16H10M&lt;/Time&gt;&#xd;
                     &lt;/Journey&gt;&#xd;
                     &lt;SegmentReferences&gt;SEG3&lt;/SegmentReferences&gt;&#xd;
                  &lt;/Flight&gt;&#xd;
               &lt;/FlightList&gt;&#xd;
               &lt;OriginDestinationList&gt;&#xd;
                  &lt;OriginDestination OriginDestinationKey=&quot;OD1&quot;&gt;&#xd;
                     &lt;DepartureCode&gt;${AirportCode1}&lt;/DepartureCode&gt;&#xd;
                     &lt;ArrivalCode&gt;${AirportCode2}&lt;/ArrivalCode&gt;&#xd;
                     &lt;FlightReferences&gt;FL1&lt;/FlightReferences&gt;&#xd;
                  &lt;/OriginDestination&gt;&#xd;
                  &lt;OriginDestination OriginDestinationKey=&quot;OD2&quot;&gt;&#xd;
                     &lt;DepartureCode&gt;${AirportCode2}&lt;/DepartureCode&gt;&#xd;
                     &lt;ArrivalCode&gt;${AirportCode4}&lt;/ArrivalCode&gt;&#xd;
                     &lt;FlightReferences&gt;FL2&lt;/FlightReferences&gt;&#xd;
                  &lt;/OriginDestination&gt;&#xd;
                  &lt;OriginDestination OriginDestinationKey=&quot;OD3&quot;&gt;&#xd;
                     &lt;DepartureCode&gt;${AirportCode2}&lt;/DepartureCode&gt;&#xd;
                     &lt;ArrivalCode&gt;${AirportCode4}&lt;/ArrivalCode&gt;&#xd;
                     &lt;FlightReferences&gt;FL3&lt;/FlightReferences&gt;&#xd;
                  &lt;/OriginDestination&gt;&#xd;
               &lt;/OriginDestinationList&gt;&#xd;
              &lt;ServiceList&gt;&#xd;
                          &lt;Service ObjectKey=&quot;SV1&quot;&gt;&#xd;
                     &lt;ServiceID Owner=&quot;${Airline}&quot;&gt;7111&lt;/ServiceID&gt;&#xd;
                     &lt;Name&gt;SEAT&lt;/Name&gt;&#xd;
                     &lt;Descriptions&gt;&#xd;
                        &lt;Description&gt;&#xd;
                           &lt;Text&gt;SEAT&lt;/Text&gt;&#xd;
                        &lt;/Description&gt;&#xd;
                     &lt;/Descriptions&gt;&#xd;
                     &lt;Associations&gt;&#xd;
                        &lt;Traveler&gt;&#xd;
                           &lt;TravelerReferences&gt;PAX1&lt;/TravelerReferences&gt;&#xd;
                        &lt;/Traveler&gt;&#xd;
                        &lt;Flight&gt;&#xd;
                           &lt;SegmentReferences&gt;SEG1&lt;/SegmentReferences&gt;&#xd;
                        &lt;/Flight&gt;&#xd;
                        &lt;edis:SeatReference&gt;SEAT1&lt;/edis:SeatReference&gt;&#xd;
                     &lt;/Associations&gt;&#xd;
                  &lt;/Service&gt;&#xd;
&#xd;
                  &#xd;
                   &lt;Service ObjectKey=&quot;SV2&quot;&gt;&#xd;
                   &#xd;
                     &lt;ServiceID Owner=&quot;${Airline}&quot;&gt;7112&lt;/ServiceID&gt;&#xd;
                     &lt;Name&gt;SEAT&lt;/Name&gt;&#xd;
                     &lt;Descriptions&gt;&#xd;
                        &lt;Description&gt;&#xd;
                           &lt;Text&gt;SEAT&lt;/Text&gt;&#xd;
                        &lt;/Description&gt;&#xd;
                     &lt;/Descriptions&gt;&#xd;
                     &lt;Associations&gt;&#xd;
                        &lt;Traveler&gt;&#xd;
                           &lt;TravelerReferences&gt;PAX2&lt;/TravelerReferences&gt;&#xd;
                        &lt;/Traveler&gt;&#xd;
                        &lt;Flight&gt;&#xd;
                           &lt;SegmentReferences&gt;SEG1&lt;/SegmentReferences&gt;&#xd;
                        &lt;/Flight&gt;&#xd;
                        &lt;edis:SeatReference&gt;SEAT2&lt;/edis:SeatReference&gt;&#xd;
                     &lt;/Associations&gt;&#xd;
                  &lt;/Service&gt;&#xd;
                  &#xd;
                  &#xd;
                  &#xd;
                  &#xd;
                   &lt;Service ObjectKey=&quot;SV3&quot;&gt;&#xd;
                   &#xd;
                     &lt;ServiceID Owner=&quot;${Airline}&quot;&gt;7113&lt;/ServiceID&gt;&#xd;
                     &lt;Name&gt;SEAT&lt;/Name&gt;&#xd;
                     &lt;Descriptions&gt;&#xd;
                        &lt;Description&gt;&#xd;
                           &lt;Text&gt;SEAT&lt;/Text&gt;&#xd;
                        &lt;/Description&gt;&#xd;
                     &lt;/Descriptions&gt;&#xd;
                     &lt;Associations&gt;&#xd;
                        &lt;Traveler&gt;&#xd;
                           &lt;TravelerReferences&gt;PAX1&lt;/TravelerReferences&gt;&#xd;
                        &lt;/Traveler&gt;&#xd;
                        &lt;Flight&gt;&#xd;
                           &lt;SegmentReferences&gt;SEG2&lt;/SegmentReferences&gt;&#xd;
                        &lt;/Flight&gt;&#xd;
                        &lt;edis:SeatReference&gt;SEAT3&lt;/edis:SeatReference&gt;&#xd;
                     &lt;/Associations&gt;&#xd;
                  &lt;/Service&gt;&#xd;
                  &#xd;
                  &#xd;
                  &#xd;
                   &lt;Service ObjectKey=&quot;SV4&quot;&gt;&#xd;
               &#xd;
                     &lt;ServiceID Owner=&quot;${Airline}&quot;&gt;7114&lt;/ServiceID&gt;&#xd;
                     &lt;Name&gt;SEAT&lt;/Name&gt;&#xd;
                     &lt;Descriptions&gt;&#xd;
                        &lt;Description&gt;&#xd;
                           &lt;Text&gt;SEAT&lt;/Text&gt;&#xd;
                        &lt;/Description&gt;&#xd;
                     &lt;/Descriptions&gt;&#xd;
                     &lt;Associations&gt;&#xd;
                        &lt;Traveler&gt;&#xd;
                           &lt;TravelerReferences&gt;PAX2&lt;/TravelerReferences&gt;&#xd;
                        &lt;/Traveler&gt;&#xd;
                        &lt;Flight&gt;&#xd;
                           &lt;SegmentReferences&gt;SEG3&lt;/SegmentReferences&gt;&#xd;
                        &lt;/Flight&gt;&#xd;
                        &lt;edis:SeatReference&gt;SEAT4&lt;/edis:SeatReference&gt;&#xd;
                     &lt;/Associations&gt;&#xd;
                  &lt;/Service&gt;&#xd;
               &lt;/ServiceList&gt;&#xd;
                &lt;SeatList&gt;&#xd;
                  &lt;Seats ListKey=&quot;SEAT1&quot;&gt;&#xd;
                     &lt;Location&gt;&#xd;
                        &lt;Column&gt;${Var3}&lt;/Column&gt;&#xd;
                        &lt;Row&gt;&#xd;
                           &lt;Number&gt;${Var4}&lt;/Number&gt;&#xd;
                        &lt;/Row&gt;&#xd;
                     &lt;/Location&gt;&#xd;
                  &lt;/Seats&gt;&#xd;
                  &lt;Seats ListKey=&quot;SEAT2&quot;&gt;&#xd;
                     &lt;Location&gt;&#xd;
                        &lt;Column&gt;${Var1}&lt;/Column&gt;&#xd;
                        &lt;Row&gt;&#xd;
                           &lt;Number&gt;${Var2}&lt;/Number&gt;&#xd;
                        &lt;/Row&gt;&#xd;
                     &lt;/Location&gt;&#xd;
                  &lt;/Seats&gt;&#xd;
                  &lt;Seats ListKey=&quot;SEAT3&quot;&gt;&#xd;
                     &lt;Location&gt;&#xd;
                        &lt;Column&gt;${Var1}&lt;/Column&gt;&#xd;
                        &lt;Row&gt;&#xd;
                           &lt;Number&gt;${Var2}&lt;/Number&gt;&#xd;
                        &lt;/Row&gt;&#xd;
                     &lt;/Location&gt;&#xd;
                  &lt;/Seats&gt;&#xd;
                  &lt;Seats ListKey=&quot;SEAT4&quot;&gt;&#xd;
                     &lt;Location&gt;&#xd;
                        &lt;Column&gt;${Var1}&lt;/Column&gt;&#xd;
                        &lt;Row&gt;&#xd;
                           &lt;Number&gt;${Var2}&lt;/Number&gt;&#xd;
                        &lt;/Row&gt;&#xd;
                     &lt;/Location&gt;&#xd;
                  &lt;/Seats&gt;&#xd;
               &lt;/SeatList&gt;&#xd;
            &lt;/DataLists&gt;&#xd;
         &lt;/Query&gt;&#xd;
      &lt;/edis:OrderCreateRQ&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${ProxyURL}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">OrderID</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;ID&gt;(.+?)&lt;/ID&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Scope.variable"></stringProp>
              <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">BookingReferenceOrderID</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;OrderID Owner=&quot;${Airline}&quot;&gt;(.+?)&lt;/OrderID&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Scope.variable"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">OrderItemID3</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;OrderItemID Owner=&quot;${Airline}&quot;&gt;(.+?)&lt;/OrderItemID&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">3</stringProp>
              <stringProp name="Scope.variable"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">OrderItemID1</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;OrderItemID Owner=&quot;${Airline}&quot;&gt;(.+?)&lt;/OrderItemID&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Scope.variable"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">OrderItemID2</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;OrderItemID Owner=&quot;${Airline}&quot;&gt;(.+?)&lt;/OrderItemID&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">2</stringProp>
              <stringProp name="Scope.variable"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">ServiceID1</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;ServiceID Owner=&quot;${Airline}&quot;&gt;(.*?)&lt;/ServiceID&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">ServiceID2</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;ServiceID Owner=&quot;${Airline}&quot;&gt;(.*?)&lt;/ServiceID&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">2</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">ServiceID3</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;ServiceID Owner=&quot;${Airline}&quot;&gt;(.*?)&lt;/ServiceID&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">3</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">OrderItemID4</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;OrderItemID Owner=&quot;${Airline}&quot;&gt;(.+?)&lt;/OrderItemID&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">4</stringProp>
              <stringProp name="Scope.variable"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">OrderItemID5</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;OrderItemID Owner=&quot;${Airline}&quot;&gt;(.+?)&lt;/OrderItemID&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">5</stringProp>
              <stringProp name="Scope.variable"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">OrderItemID6</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;OrderItemID Owner=&quot;${Airline}&quot;&gt;(.+?)&lt;/OrderItemID&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">6</stringProp>
              <stringProp name="Scope.variable"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">OrderItemID7</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;OrderItemID Owner=&quot;${Airline}&quot;&gt;(.+?)&lt;/OrderItemID&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">7</stringProp>
              <stringProp name="Scope.variable"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
              <stringProp name="XPathExtractor.default"></stringProp>
              <stringProp name="XPathExtractor.refname">Column1</stringProp>
              <stringProp name="XPathExtractor.matchNumber">1</stringProp>
              <stringProp name="XPathExtractor.xpathQuery">//Column[1]</stringProp>
              <boolProp name="XPathExtractor.validate">false</boolProp>
              <boolProp name="XPathExtractor.tolerant">false</boolProp>
              <boolProp name="XPathExtractor.namespace">false</boolProp>
            </XPathExtractor>
            <hashTree/>
            <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
              <stringProp name="XPathExtractor.default"></stringProp>
              <stringProp name="XPathExtractor.refname">Column2</stringProp>
              <stringProp name="XPathExtractor.matchNumber">2</stringProp>
              <stringProp name="XPathExtractor.xpathQuery">//Column[2]</stringProp>
              <boolProp name="XPathExtractor.validate">false</boolProp>
              <boolProp name="XPathExtractor.tolerant">false</boolProp>
              <boolProp name="XPathExtractor.namespace">false</boolProp>
            </XPathExtractor>
            <hashTree/>
            <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
              <stringProp name="XPathExtractor.default"></stringProp>
              <stringProp name="XPathExtractor.refname">Column3</stringProp>
              <stringProp name="XPathExtractor.matchNumber">3</stringProp>
              <stringProp name="XPathExtractor.xpathQuery">//Column[3]</stringProp>
              <boolProp name="XPathExtractor.validate">false</boolProp>
              <boolProp name="XPathExtractor.tolerant">false</boolProp>
              <boolProp name="XPathExtractor.namespace">false</boolProp>
            </XPathExtractor>
            <hashTree/>
            <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
              <stringProp name="XPathExtractor.default"></stringProp>
              <stringProp name="XPathExtractor.refname">Column4</stringProp>
              <stringProp name="XPathExtractor.matchNumber">4</stringProp>
              <stringProp name="XPathExtractor.xpathQuery">//Column[4]</stringProp>
              <boolProp name="XPathExtractor.validate">false</boolProp>
              <boolProp name="XPathExtractor.tolerant">false</boolProp>
              <boolProp name="XPathExtractor.namespace">false</boolProp>
            </XPathExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">OrderID1</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;ID&gt;(.+?)&lt;/ID&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">2</stringProp>
              <stringProp name="Scope.variable"></stringProp>
              <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">OrderID2</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;ID&gt;(.+?)&lt;/ID&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">3</stringProp>
              <stringProp name="Scope.variable"></stringProp>
              <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
            </RegexExtractor>
            <hashTree/>
            <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
              <stringProp name="XPathExtractor.default"></stringProp>
              <stringProp name="XPathExtractor.refname">Number1</stringProp>
              <stringProp name="XPathExtractor.matchNumber">1</stringProp>
              <stringProp name="XPathExtractor.xpathQuery">//Row/Number</stringProp>
              <boolProp name="XPathExtractor.validate">false</boolProp>
              <boolProp name="XPathExtractor.tolerant">false</boolProp>
              <boolProp name="XPathExtractor.namespace">false</boolProp>
            </XPathExtractor>
            <hashTree/>
            <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
              <stringProp name="XPathExtractor.default"></stringProp>
              <stringProp name="XPathExtractor.refname">Number2</stringProp>
              <stringProp name="XPathExtractor.matchNumber">2</stringProp>
              <stringProp name="XPathExtractor.xpathQuery">//Row/Number</stringProp>
              <boolProp name="XPathExtractor.validate">false</boolProp>
              <boolProp name="XPathExtractor.tolerant">false</boolProp>
              <boolProp name="XPathExtractor.namespace">false</boolProp>
            </XPathExtractor>
            <hashTree/>
            <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
              <stringProp name="XPathExtractor.default"></stringProp>
              <stringProp name="XPathExtractor.refname">Number3</stringProp>
              <stringProp name="XPathExtractor.matchNumber">3</stringProp>
              <stringProp name="XPathExtractor.xpathQuery">//Row/Number</stringProp>
              <boolProp name="XPathExtractor.validate">false</boolProp>
              <boolProp name="XPathExtractor.tolerant">false</boolProp>
              <boolProp name="XPathExtractor.namespace">false</boolProp>
            </XPathExtractor>
            <hashTree/>
            <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
              <stringProp name="XPathExtractor.default"></stringProp>
              <stringProp name="XPathExtractor.refname">Number4</stringProp>
              <stringProp name="XPathExtractor.matchNumber">4</stringProp>
              <stringProp name="XPathExtractor.xpathQuery">//Row/Number</stringProp>
              <boolProp name="XPathExtractor.validate">false</boolProp>
              <boolProp name="XPathExtractor.tolerant">false</boolProp>
              <boolProp name="XPathExtractor.namespace">false</boolProp>
            </XPathExtractor>
            <hashTree/>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="false">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">vars.put(&quot;response&quot;, prev.getResponseDataAsString());
if (prev.getResponseDataAsString().contains(&quot;Error&quot;))



</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">var</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;Errors&gt;(.+?)&lt;/Errors&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Scope.variable"></stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Step1: AC-55590_ 7 /publicrouter.jsp" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${Protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">ISO-8859-1</stringProp>
            <stringProp name="HTTPSampler.path">/publicrouter.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.117 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">3000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="step2: AC-55590_8 /protectedrouter.jsp" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="isTravelAgent" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isTravelAgent</stringProp>
                  <stringProp name="Argument.value">null</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="travelAgentAirline" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">travelAgentAirline</stringProp>
                  <stringProp name="Argument.value">null</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${Protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">ISO-8859-1</stringProp>
            <stringProp name="HTTPSampler.path">/protectedrouter.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${URL_1}/publicrouter.jsp</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.117 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">3000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="step3: AC-55590_ 9 /utils/security/userlogin.jsp" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="warningMsg" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">warningMsg</stringProp>
                  <stringProp name="Argument.value">null</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${Protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">ISO-8859-1</stringProp>
            <stringProp name="HTTPSampler.path">/utils/security/userlogin.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${URL_1}/protectedrouter.jsp?isTravelAgent=null&amp;travelAgentAirline=null</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.117 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">OWASP_CSRFTOKEN</stringProp>
              <stringProp name="RegexExtractor.regex">OWASP_CSRFTOKEN\&quot;\ value=\&quot;(.*?)\&quot;/&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
            </RegexExtractor>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">3000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="step4: AC-55590_13 /utils/security/j_security_check" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="OWASP_CSRFTOKEN" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">OWASP_CSRFTOKEN</stringProp>
                  <stringProp name="Argument.value">${OWASP_CSRFTOKEN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="j_username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">j_username</stringProp>
                  <stringProp name="Argument.value">SwathiAdminAgent%2C${Airline}%2C%2C</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="j_password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">j_password</stringProp>
                  <stringProp name="Argument.value">Unisys@1234</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${Protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/utils/security/j_security_check</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${URL_1}/utils/security/userlogin.jsp?warningMsg=null</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${URL_1}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.117 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">3000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="69 /resagentmode/findbooking.jsp" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="OWASP_CSRFTOKEN" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">OWASP_CSRFTOKEN</stringProp>
                  <stringProp name="Argument.value">${OWASP_CSRFTOKEN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnConfNum" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnConfNum</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnOrderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnOrderId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnCustNum" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnCustNum</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnFlightDate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnFlightDate</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnRdoBooking" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnRdoBooking</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnSurName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnSurName</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnFlightNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnFlightNumber</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnFlightSuffix" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnFlightSuffix</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnAirline" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnAirline</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnOrigin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnOrigin</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnDestination" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnDestination</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnRdoAndOr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnRdoAndOr</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnMergeBooking" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnMergeBooking</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="rdoBooking" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rdoBooking</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="txtOrderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">txtOrderId</stringProp>
                  <stringProp name="Argument.value">${BookingReferenceOrderID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="btnFindBookings" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">btnFindBookings</stringProp>
                  <stringProp name="Argument.value">Find Booking</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">ustr-erl-9904.na.uis.unisys.com</stringProp>
            <stringProp name="HTTPSampler.port">4446</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">ISO-8859-1</stringProp>
            <stringProp name="HTTPSampler.path">/resagentmode/findbooking.jsp</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://ustr-erl-9904.na.uis.unisys.com:4446/resagentmode/findbooking.jsp</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://ustr-erl-9904.na.uis.unisys.com:4446</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1459468476">${FlightNumber1}</stringProp>
                <stringProp name="878363693">${FlightNumber}</stringProp>
                <stringProp name="-1350041059">${OrderID2}</stringProp>
                <stringProp name="-1350041090">${OrderID1}</stringProp>
                <stringProp name="-459191637">${OrderID}</stringProp>
                <stringProp name="-1942291291">${Number1}${Column1}</stringProp>
                <stringProp name="-1813208541">${Number2}${Column2}</stringProp>
                <stringProp name="-1684125791">${Number3}${Column3}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Step7: AC-55590_35 /customermode/itinerary.jsp" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="OWASP_CSRFTOKEN" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">OWASP_CSRFTOKEN</stringProp>
                  <stringProp name="Argument.value">${OWASP_CSRFTOKEN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnRemark" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnRemark</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnCorporateCustomerNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnCorporateCustomerNumber</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnBookingType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnBookingType</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnCorporateDetails" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnCorporateDetails</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="checkboxcount" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">checkboxcount</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="selectindex" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">selectindex</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="selectindex2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">selectindex2</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="action" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">action</stringProp>
                  <stringProp name="Argument.value">MergeBooking</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="direct" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">direct</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnValidationList" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnValidationList</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="seatRow" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">seatRow</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="seatColumn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">seatColumn</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="seatCompartment" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">seatCompartment</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="seatOrigin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">seatOrigin</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="seatDestination" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">seatDestination</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="customerIndex" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">customerIndex</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnTripIdToMerge" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnTripIdToMerge</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnMergeBooking" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnMergeBooking</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aWorkQueueRequestId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">aWorkQueueRequestId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnFormName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnFormName</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnReturnLink" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnReturnLink</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnReturnLinkName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnReturnLinkName</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnIsExistingBooking" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnIsExistingBooking</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="splitbooking" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">splitbooking</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dividebooking" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dividebooking</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnMarriageId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnMarriageId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnAppendTemplateName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnAppendTemplateName</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnAppendTripId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnAppendTripId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnAppendCustomerNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnAppendCustomerNumber</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnTripId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnTripId</stringProp>
                  <stringProp name="Argument.value">${OrderID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnCustNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnCustNumber</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnIsGroupBooking" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnIsGroupBooking</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnCopyForSameDates" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnCopyForSameDates</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnForwardToCustomerScreen" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnForwardToCustomerScreen</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnWorkConvId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnWorkConvId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnUpdateTemplate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnUpdateTemplate</stringProp>
                  <stringProp name="Argument.value">null</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnTemplateName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnTemplateName</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnWaitlistSeg" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnWaitlistSeg</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnTripSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnTripSize</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnReturnDuplicate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnReturnDuplicate</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnReturnDuplicateForEOT" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnReturnDuplicateForEOT</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnFromDuplicateBkgForDemand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnFromDuplicateBkgForDemand</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnfromGroupReadOut" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnfromGroupReadOut</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnConfirmKKBookingFromQueue" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnConfirmKKBookingFromQueue</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnFromDuplicateBkg" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnFromDuplicateBkg</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cmbViewOptions" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cmbViewOptions</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lstOtherAction" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lstOtherAction</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnCancelBooking" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnCancelBooking</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnPromptOnSplit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnPromptOnSplit</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnInvalidateFareQuote" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnInvalidateFareQuote</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnPromptOnDelete" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnPromptOnDelete</stringProp>
                  <stringProp name="Argument.value">True</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnIsFutureDatedBkg" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnIsFutureDatedBkg</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnIsPastDatedBkg" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnIsPastDatedBkg</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnUpdateSeat" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnUpdateSeat</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnCheckedCustomers" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnCheckedCustomers</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnWorkingFareId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnWorkingFareId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnActualTicketless" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnActualTicketless</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnActualTicketlessForPurchaseSummary" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnActualTicketlessForPurchaseSummary</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnAwardSubmit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnAwardSubmit</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnAwardTripId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnAwardTripId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnPage</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnPurchase" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnPurchase</stringProp>
                  <stringProp name="Argument.value">null%3A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnUtilServiceId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnUtilServiceId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnWorkTripSegId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnWorkTripSegId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hdnOpenOfficePopup" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hdnOpenOfficePopup</stringProp>
                  <stringProp name="Argument.value">+</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${Protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/customermode/itinerary.jsp</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${URL_1}/resagentmode/findbooking.jsp</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${URL_1}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Step8: AC-55590_36 /customermode/order.jsp" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tab" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tab</stringProp>
                  <stringProp name="Argument.value">Order</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${Protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/customermode/order.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${URL_1}/resagentmode/findbooking.jsp</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="758816677">${ServiceID1}</stringProp>
                <stringProp name="758816708">${ServiceID2}</stringProp>
                <stringProp name="758816739">${ServiceID3}</stringProp>
                <stringProp name="180530287">${OrderItemID3}</stringProp>
                <stringProp name="180530256">${OrderItemID2}</stringProp>
                <stringProp name="180530225">${OrderItemID1}</stringProp>
                <stringProp name="180530318">${OrderItemID4}</stringProp>
                <stringProp name="180530349">${OrderItemID5}</stringProp>
                <stringProp name="180530380">${OrderItemID6}</stringProp>
                <stringProp name="180530411">${OrderItemID7}</stringProp>
                <stringProp name="1459468476">${FlightNumber1}</stringProp>
                <stringProp name="878363693">${FlightNumber}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1942291291">${Number1}${Column1}</stringProp>
                <stringProp name="-1813208541">${Number2}${Column2}</stringProp>
                <stringProp name="-1684125791">${Number3}${Column3}</stringProp>
                <stringProp name="-599661408">Payment&amp;nbsp;Time&amp;nbsp;Limit</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Step9: AC-55590_37 /resagentmode/ticket.jsp" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tab" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tab</stringProp>
                  <stringProp name="Argument.value">Tickets</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${Protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/resagentmode/ticket.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${URL_1}/customermode/order.jsp?tab=Order</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
          <stringProp name="WhileController.condition">${__javaScript(&quot;${var}&quot;.contains ((&quot;Requested seat is not available&quot;))}</stringProp>
        </WhileController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Soap Request 2" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:head=&quot;http://www.iata.org/IATA/EDIST/Headerv1.0&quot; xmlns:edis=&quot;http://www.iata.org/IATA/EDIST&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;head:MessageHeaderType&gt;&#xd;
         &lt;head:UserName&gt;${UserName}&lt;/head:UserName&gt;ddd&#xd;
         &lt;head:Password&gt;${Password}&lt;/head:Password&gt;&#xd;
         &lt;head:Airline&gt;${Airline}&lt;/head:Airline&gt;&#xd;
         &lt;head:api_key&gt;${API_Key}&lt;/head:api_key&gt;&#xd;
      &lt;/head:MessageHeaderType&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;edis:OrderCreateRQ Version=&quot;16.2&quot; xsi:schemaLocation=&quot;http://www.iata.org/IATA/EDIST OrderCreateRQ.xsd&quot; xmlns=&quot;http://www.iata.org/IATA/EDIST&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
         &lt;PointOfSale&gt;&#xd;
            &lt;Location&gt;&#xd;
               &lt;CountryCode&gt;US&lt;/CountryCode&gt;&#xd;
               &lt;CityCode&gt;${AirportCode1}&lt;/CityCode&gt;&#xd;
            &lt;/Location&gt;&#xd;
            &lt;RequestTime Zone=&quot;EST&quot;&gt;${RequestTime_zone}&lt;/RequestTime&gt;&#xd;
            &lt;TouchPoint&gt;&#xd;
               &lt;Device&gt;&#xd;
                  &lt;Code&gt;2&lt;/Code&gt;&#xd;
                  &lt;Definition&gt;Web Browser&lt;/Definition&gt;&#xd;
                  &lt;Position&gt;&#xd;
                     &lt;Latitude&gt;${Latitude}&lt;/Latitude&gt;&#xd;
                     &lt;Longitude&gt;${Longitude}&lt;/Longitude&gt;&#xd;
                     &lt;NAC&gt;${NAC}&lt;/NAC&gt;&#xd;
                  &lt;/Position&gt;&#xd;
               &lt;/Device&gt;&#xd;
               &lt;Event&gt;&#xd;
                  &lt;Code&gt;1&lt;/Code&gt;&#xd;
                  &lt;Definition&gt;Order or buy&lt;/Definition&gt;&#xd;
               &lt;/Event&gt;&#xd;
            &lt;/TouchPoint&gt;&#xd;
         &lt;/PointOfSale&gt;&#xd;
         &lt;Document&gt;&#xd;
            &lt;Name&gt;UNISYS NDC GATEWAY&lt;/Name&gt;&#xd;
            &lt;ReferenceVersion&gt;1.0&lt;/ReferenceVersion&gt;&#xd;
         &lt;/Document&gt;&#xd;
         &lt;Party&gt;&#xd;
            &lt;Sender&gt;&#xd;
               &lt;TravelAgencySender&gt;&#xd;
                  &lt;Name&gt;${TravelAgencySenderName}&lt;/Name&gt;&#xd;
                  &lt;Contacts&gt;&#xd;
                     &lt;Contact&gt;&#xd;
                        &lt;EmailContact&gt;&#xd;
                           &lt;Address&gt;${TravelAgencyAddress}&lt;/Address&gt;&#xd;
                        &lt;/EmailContact&gt;&#xd;
                     &lt;/Contact&gt;&#xd;
                  &lt;/Contacts&gt;&#xd;
                  &lt;PseudoCity&gt;A4A&lt;/PseudoCity&gt;&#xd;
                  &lt;IATA_Number&gt;${IATA_Number}&lt;/IATA_Number&gt;&#xd;
                  &lt;AgencyID Owner=&quot;${Airline}&quot;&gt;${TravelAgencySenderName}&lt;/AgencyID&gt;&#xd;
                  &lt;AgentUser&gt;&#xd;
                     &lt;Name&gt;${TravelAgencySenderName}&lt;/Name&gt;&#xd;
                     &lt;AgentUserID&gt;${TravelAgencySenderName}&lt;/AgentUserID&gt;&#xd;
                     &lt;UserRole&gt;${UserRole}&lt;/UserRole&gt;&#xd;
                  &lt;/AgentUser&gt;&#xd;
               &lt;/TravelAgencySender&gt;&#xd;
            &lt;/Sender&gt;&#xd;
         &lt;/Party&gt;&#xd;
         &lt;Query&gt;&#xd;
            &lt;Passengers&gt;&#xd;
               &lt;Passenger ObjectKey=&quot;PAX1&quot;&gt;&#xd;
                  &lt;PTC Quantity=&quot;1&quot;&gt;ADT&lt;/PTC&gt;&#xd;
                  &lt;ResidenceCode&gt;US&lt;/ResidenceCode&gt;&#xd;
                  &lt;Age&gt;&#xd;
                     &lt;BirthDate&gt;${DOB}&lt;/BirthDate&gt;&#xd;
                  &lt;/Age&gt;&#xd;
                  &lt;Name&gt;&#xd;
                     &lt;Surname&gt;${SurName}&lt;/Surname&gt;&#xd;
                     &lt;Given&gt;${GivenName}&lt;/Given&gt;&#xd;
                     &lt;!--Title&gt;Mr.&lt;/Title--&gt;&#xd;
                     &lt;!--Middle&gt;JM&lt;/Middle--&gt;&#xd;
                  &lt;/Name&gt;&#xd;
                  &lt;Contacts&gt;&#xd;
                     &lt;Contact&gt;&#xd;
                        &lt;EmailContact&gt;&#xd;
                           &lt;Address&gt;${Address}&lt;/Address&gt;&#xd;
                        &lt;/EmailContact&gt;&#xd;
                     &lt;/Contact&gt;&#xd;
                     &lt;!--Contact&gt;&#xd;
                        &lt;PhoneContact&gt;&#xd;
                           &lt;Application&gt;Emergency&lt;/Application&gt;&#xd;
                           &lt;Number&gt;${EmergencyNumber}&lt;/Number&gt;&#xd;
                        &lt;/PhoneContact&gt;&#xd;
                     &lt;/Contact--&gt;&#xd;
                     &lt;!--Contact&gt;&#xd;
                        &lt;AddressContact&gt;&#xd;
                           &lt;Application&gt;AddressAtOrigin&lt;/Application&gt;&#xd;
                           &lt;Street&gt;${AddressContact_Street}&lt;/Street&gt;&#xd;
                           &lt;CityName&gt;${AddressContact_CityName}&lt;/CityName&gt;&#xd;
                           &lt;PostalCode&gt;${AddressContact_PostalCode}&lt;/PostalCode&gt;&#xd;
                           &lt;CountryCode&gt;${AddressContact_CountryCode}&lt;/CountryCode&gt;&#xd;
                        &lt;/AddressContact&gt;&#xd;
                     &lt;/Contact--&gt;&#xd;
                  &lt;/Contacts&gt;&#xd;
                  &lt;Gender&gt;${Gender}&lt;/Gender&gt;&#xd;
               &lt;/Passenger&gt;&#xd;
            &lt;/Passengers&gt;&#xd;
            &lt;OrderItems&gt;&#xd;
               &lt;ShoppingResponse&gt;&#xd;
                  &lt;Owner&gt;${Airline}&lt;/Owner&gt;&#xd;
                  &lt;ResponseID&gt;${ResponseID}&lt;/ResponseID&gt;&#xd;
                  &lt;Offers&gt;&#xd;
                     &lt;Offer&gt;&#xd;
                        &lt;OfferID Owner=&quot;${Airline}&quot;&gt;1&lt;/OfferID&gt;&#xd;
                        &lt;OfferItems&gt;&#xd;
                           &lt;OfferItem&gt;&#xd;
                              &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162714&lt;/OfferItemID&gt;&#xd;
                              &lt;Passengers&gt;&#xd;
                                 &lt;PassengerReference&gt;PAX1&lt;/PassengerReference&gt;&#xd;
                              &lt;/Passengers&gt;&#xd;
                              &lt;ApplicableFlight&gt;&#xd;
                                 &lt;OriginDestinationReferences&gt;OD1&lt;/OriginDestinationReferences&gt;&#xd;
                              &lt;/ApplicableFlight&gt;&#xd;
                           &lt;/OfferItem&gt;&#xd;
                           &lt;!--OfferItem&gt;&#xd;
                              &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162715&lt;/OfferItemID&gt;&#xd;
                              &lt;Passengers&gt;&#xd;
                                 &lt;PassengerReference&gt;PAX1&lt;/PassengerReference&gt;&#xd;
                              &lt;/Passengers&gt;&#xd;
                              &lt;AssociatedServices&gt;&#xd;
                                 &lt;AssociatedService&gt;&#xd;
                                    &lt;ServiceID Owner=&quot;${Airline}&quot;&gt;SV1&lt;/ServiceID&gt;&#xd;
                                 &lt;/AssociatedService&gt;&#xd;
                              &lt;/AssociatedServices&gt;&#xd;
                           &lt;/OfferItem--&gt;&#xd;
                           &lt;!--OfferItem&gt;&#xd;
                              &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162716&lt;/OfferItemID&gt;&#xd;
                              &lt;Passengers&gt;&#xd;
                                 &lt;PassengerReference&gt;PAX1&lt;/PassengerReference&gt;&#xd;
                              &lt;/Passengers&gt;&#xd;
                              &lt;AssociatedServices&gt;&#xd;
                                 &lt;AssociatedService&gt;&#xd;
                                    &lt;ServiceID Owner=&quot;${Airline}&quot;&gt;SV2&lt;/ServiceID&gt;&#xd;
                                 &lt;/AssociatedService&gt;&#xd;
                              &lt;/AssociatedServices&gt;&#xd;
                           &lt;/OfferItem--&gt;&#xd;
                        &lt;/OfferItems&gt;&#xd;
                     &lt;/Offer&gt;&#xd;
                  &lt;/Offers&gt;&#xd;
               &lt;/ShoppingResponse&gt;&#xd;
               &lt;OfferItem&gt;&#xd;
                  &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162714&lt;/OfferItemID&gt;&#xd;
                  &lt;OfferItemType&gt;&#xd;
                     &lt;DetailedFlightItem&gt;&#xd;
                        &lt;OriginDestination&gt;&#xd;
                           &lt;Flight&gt;&#xd;
                              &lt;Departure&gt;&#xd;
                                 &lt;AirportCode&gt;${AirportCode1}&lt;/AirportCode&gt;&#xd;
                                 &lt;Date&gt;${DepartureDate}&lt;/Date&gt;&#xd;
                                 &lt;Time&gt;02:00&lt;/Time&gt;&#xd;
                              &lt;/Departure&gt;&#xd;
                              &lt;Arrival&gt;&#xd;
                                 &lt;AirportCode&gt;${AirportCode2}&lt;/AirportCode&gt;&#xd;
                                 &lt;Date&gt;${ArrivalDate}&lt;/Date&gt;&#xd;
                                 &lt;Time&gt;08:10&lt;/Time&gt;&#xd;
                              &lt;/Arrival&gt;&#xd;
                              &lt;MarketingCarrier&gt;&#xd;
                                 &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                                 &lt;Name&gt;NORTHWEST AIRLINES&lt;/Name&gt;&#xd;
                                 &lt;FlightNumber&gt;${FlightNumber}&lt;/FlightNumber&gt;&#xd;
                              &lt;/MarketingCarrier&gt;&#xd;
                              &lt;OperatingCarrier&gt;&#xd;
                                 &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                                 &lt;Name&gt;NORTHWEST AIRLINES&lt;/Name&gt;&#xd;
                                 &lt;FlightNumber&gt;${FlightNumber}&lt;/FlightNumber&gt;&#xd;
                              &lt;/OperatingCarrier&gt;&#xd;
                           &lt;/Flight&gt;&#xd;
                        &lt;/OriginDestination&gt;&#xd;
                        &lt;FareDetail&gt;&#xd;
                           &lt;FareComponent&gt;&#xd;
                              &lt;SegmentReference&gt;SEG1&lt;/SegmentReference&gt;&#xd;
                              &lt;PriceBreakdown&gt;&#xd;
                                 &lt;Price&gt;&#xd;
                                    &lt;BaseAmount Code=&quot;USD&quot;&gt;950.00&lt;/BaseAmount&gt;&#xd;
                                    &lt;Taxes&gt;&#xd;
                                       &lt;Total Code=&quot;USD&quot;&gt;50.00&lt;/Total&gt;&#xd;
                                       &lt;Breakdown&gt;&#xd;
                                          &lt;Tax&gt;&#xd;
                                             &lt;Amount Code=&quot;USD&quot;&gt;50.00&lt;/Amount&gt;&#xd;
                                             &lt;TaxCode&gt;FC&lt;/TaxCode&gt;&#xd;
                                          &lt;/Tax&gt;&#xd;
                                       &lt;/Breakdown&gt;&#xd;
                                    &lt;/Taxes&gt;&#xd;
                                 &lt;/Price&gt;&#xd;
                              &lt;/PriceBreakdown&gt;&#xd;
                              &lt;FareBasis&gt;&#xd;
                                 &lt;FareBasisCode&gt;&#xd;
                                    &lt;Code&gt;F5&lt;/Code&gt;&#xd;
                                 &lt;/FareBasisCode&gt;&#xd;
                                 &lt;RBD&gt;Y&lt;/RBD&gt;&#xd;
                              &lt;/FareBasis&gt;&#xd;
                              &lt;FareRules&gt;&#xd;
                                 &lt;Penalty&gt;&#xd;
                                    &lt;Details&gt;&#xd;
                                       &lt;Detail&gt;&#xd;
                                          &lt;Type&gt;Cancel&lt;/Type&gt;&#xd;
                                          &lt;Amounts&gt;&#xd;
                                             &lt;Amount&gt;&#xd;
                                                &lt;CurrencyAmountValue&gt;900.00&lt;/CurrencyAmountValue&gt;&#xd;
                                               &#xd;
                                             &lt;/Amount&gt;&#xd;
                                          &lt;/Amounts&gt;&#xd;
                                       &lt;/Detail&gt;&#xd;
                                       &lt;Detail&gt;&#xd;
                                          &lt;Type&gt;Change&lt;/Type&gt;&#xd;
                                          &lt;Amounts&gt;&#xd;
                                             &lt;Amount&gt;&#xd;
                                                &lt;CurrencyAmountValue&gt;40.00&lt;/CurrencyAmountValue&gt;&#xd;
                                                &#xd;
                                             &lt;/Amount&gt;&#xd;
                                          &lt;/Amounts&gt;&#xd;
                                       &lt;/Detail&gt;&#xd;
                                    &lt;/Details&gt;&#xd;
                                 &lt;/Penalty&gt;&#xd;
                              &lt;/FareRules&gt;&#xd;
                           &lt;/FareComponent&gt;&#xd;
                        &lt;/FareDetail&gt;&#xd;
                     &lt;/DetailedFlightItem&gt;&#xd;
                  &lt;/OfferItemType&gt;&#xd;
                  &lt;TimeLimits&gt;&#xd;
                     &lt;TimeLimit&gt;&#xd;
                        &lt;PriceGuaranteeTimeLimit Timestamp=&quot;${Timestamp_TicketBy}&quot;/&gt;&#xd;
                        &lt;TicketByTimeLimit&gt;&#xd;
                           &lt;TicketBy&gt;${Timestamp_TicketBy}&lt;/TicketBy&gt;&#xd;
                        &lt;/TicketByTimeLimit&gt;&#xd;
                     &lt;/TimeLimit&gt;&#xd;
                  &lt;/TimeLimits&gt;&#xd;
               &lt;/OfferItem&gt;&#xd;
               &lt;OfferItem&gt;&#xd;
                  &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162715&lt;/OfferItemID&gt;&#xd;
                  &lt;OfferItemType&gt;&#xd;
                     &lt;DetailedFlightItem&gt;&#xd;
                        &lt;OriginDestination&gt;&#xd;
                           &lt;Flight&gt;&#xd;
                              &lt;Departure&gt;&#xd;
                                 &lt;AirportCode&gt;${AirportCode1}&lt;/AirportCode&gt;&#xd;
                                 &lt;Date&gt;${DepartureDate}&lt;/Date&gt;&#xd;
                                 &lt;Time&gt;02:00&lt;/Time&gt;&#xd;
                              &lt;/Departure&gt;&#xd;
                              &lt;Arrival&gt;&#xd;
                                 &lt;AirportCode&gt;${AirportCode2}&lt;/AirportCode&gt;&#xd;
                                 &lt;Date&gt;${ArrivalDate}&lt;/Date&gt;&#xd;
                                 &lt;Time&gt;08:10&lt;/Time&gt;&#xd;
                              &lt;/Arrival&gt;&#xd;
                              &lt;MarketingCarrier&gt;&#xd;
                                 &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                                 &lt;Name&gt;NORTHWEST AIRLINES&lt;/Name&gt;&#xd;
                                 &lt;FlightNumber&gt;${FlightNumber}&lt;/FlightNumber&gt;&#xd;
                              &lt;/MarketingCarrier&gt;&#xd;
                              &lt;OperatingCarrier&gt;&#xd;
                                 &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                                 &lt;Name&gt;NORTHWEST AIRLINES&lt;/Name&gt;&#xd;
                                 &lt;FlightNumber&gt;${FlightNumber}&lt;/FlightNumber&gt;&#xd;
                              &lt;/OperatingCarrier&gt;&#xd;
                           &lt;/Flight&gt;&#xd;
                        &lt;/OriginDestination&gt;&#xd;
                     &lt;/DetailedFlightItem&gt;&#xd;
                  &lt;/OfferItemType&gt;&#xd;
                  &lt;TimeLimits&gt;&#xd;
                     &lt;TimeLimit&gt;&#xd;
                        &lt;PriceGuaranteeTimeLimit Timestamp=&quot;${Timestamp_TicketBy}&quot;/&gt;&#xd;
                        &lt;TicketByTimeLimit&gt;&#xd;
                           &lt;TicketBy&gt;${Timestamp_TicketBy}&lt;/TicketBy&gt;&#xd;
                        &lt;/TicketByTimeLimit&gt;&#xd;
                     &lt;/TimeLimit&gt;&#xd;
                  &lt;/TimeLimits&gt;&#xd;
               &lt;/OfferItem&gt;&#xd;
               &lt;OfferItem&gt;&#xd;
                  &lt;OfferItemID Owner=&quot;${Airline}&quot;&gt;1#M#111198795#111162716&lt;/OfferItemID&gt;&#xd;
                  &lt;OfferItemType&gt;&#xd;
                     &lt;OtherItem&gt;&#xd;
                        &lt;Price&gt;&#xd;
                           &lt;DetailCurrencyPrice&gt;&#xd;
                              &lt;Total Code=&quot;USD&quot;&gt;140.00&lt;/Total&gt;&#xd;
                           &lt;/DetailCurrencyPrice&gt;&#xd;
                        &lt;/Price&gt;&#xd;
                     &lt;/OtherItem&gt;&#xd;
                  &lt;/OfferItemType&gt;&#xd;
                  &lt;TimeLimits&gt;&#xd;
                     &lt;TimeLimit&gt;&#xd;
                        &lt;PriceGuaranteeTimeLimit Timestamp=&quot;${Timestamp_TicketBy}&quot;/&gt;&#xd;
                        &lt;TicketByTimeLimit&gt;&#xd;
                           &lt;TicketBy&gt;${Timestamp_TicketBy}&lt;/TicketBy&gt;&#xd;
                        &lt;/TicketByTimeLimit&gt;&#xd;
                     &lt;/TimeLimit&gt;&#xd;
                  &lt;/TimeLimits&gt;&#xd;
               &lt;/OfferItem&gt;&#xd;
            &lt;/OrderItems&gt;&#xd;
            &lt;Payments&gt;&#xd;
             &#xd;
               &#xd;
               &lt;Payment&gt;&#xd;
                  &lt;Method&gt;&#xd;
                     &lt;Cash CashInd=&quot;true&quot;/&gt;&#xd;
                  &lt;/Method&gt;&#xd;
                  &lt;Amount Code=&quot;USD&quot; Taxable=&quot;true&quot;&gt;${PaymentAmount}&lt;/Amount&gt;&#xd;
               &lt;/Payment&gt;&#xd;
          &#xd;
            &lt;/Payments&gt;&#xd;
            &#xd;
            &lt;DataLists&gt;&#xd;
               &lt;FlightSegmentList&gt;&#xd;
                  &lt;FlightSegment SegmentKey=&quot;SEG1&quot;&gt;&#xd;
                     &lt;Departure&gt;&#xd;
                        &lt;AirportCode&gt;${AirportCode1}&lt;/AirportCode&gt;&#xd;
                        &lt;Date&gt;${DepartureDate}&lt;/Date&gt;&#xd;
                        &lt;Time&gt;11:10&lt;/Time&gt;&#xd;
                     &lt;/Departure&gt;&#xd;
                     &lt;Arrival&gt;&#xd;
                        &lt;AirportCode&gt;${AirportCode2}&lt;/AirportCode&gt;&#xd;
                        &lt;Date&gt;${ArrivalDate}&lt;/Date&gt;&#xd;
                        &lt;Time&gt;20:20&lt;/Time&gt;&#xd;
                     &lt;/Arrival&gt;&#xd;
                     &lt;MarketingCarrier&gt;&#xd;
                        &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                        &lt;Name&gt;NORTHWEST AIRLINES&lt;/Name&gt;&#xd;
                        &lt;FlightNumber&gt;${FlightNumber}&lt;/FlightNumber&gt;&#xd;
                     &lt;/MarketingCarrier&gt;&#xd;
                     &lt;OperatingCarrier&gt;&#xd;
                        &lt;AirlineID&gt;${Airline}&lt;/AirlineID&gt;&#xd;
                        &lt;Name&gt;NORTHWEST AIRLINES&lt;/Name&gt;&#xd;
                        &lt;FlightNumber&gt;${FlightNumber}&lt;/FlightNumber&gt;&#xd;
                     &lt;/OperatingCarrier&gt;&#xd;
                     &lt;Equipment&gt;&#xd;
                        &lt;AircraftCode&gt;320&lt;/AircraftCode&gt;&#xd;
                        &lt;Name&gt;320 - AIRBUS INDUSTRIE A320 JET&lt;/Name&gt;&#xd;
                     &lt;/Equipment&gt;&#xd;
                     &lt;ClassOfService&gt;&#xd;
                        &lt;Code&gt;Y&lt;/Code&gt;&#xd;
                     &lt;/ClassOfService&gt;&#xd;
                     &lt;FlightDetail&gt;&#xd;
                        &lt;FlightDuration&gt;&#xd;
                           &lt;Value&gt;PT6H10M&lt;/Value&gt;&#xd;
                        &lt;/FlightDuration&gt;&#xd;
                     &lt;/FlightDetail&gt;&#xd;
                  &lt;/FlightSegment&gt;&#xd;
               &lt;/FlightSegmentList&gt;&#xd;
               &lt;FlightList&gt;&#xd;
                  &lt;Flight FlightKey=&quot;FL1&quot;&gt;&#xd;
                     &lt;Journey&gt;&#xd;
                        &lt;Time&gt;PT16H10M&lt;/Time&gt;&#xd;
                     &lt;/Journey&gt;&#xd;
                     &lt;SegmentReferences&gt;SEG1&lt;/SegmentReferences&gt;&#xd;
                  &lt;/Flight&gt;&#xd;
               &lt;/FlightList&gt;&#xd;
               &lt;OriginDestinationList&gt;&#xd;
                  &lt;OriginDestination OriginDestinationKey=&quot;OD1&quot;&gt;&#xd;
                     &lt;DepartureCode&gt;${AirportCode1}&lt;/DepartureCode&gt;&#xd;
                     &lt;ArrivalCode&gt;${AirportCode2}&lt;/ArrivalCode&gt;&#xd;
                     &lt;FlightReferences&gt;FL1&lt;/FlightReferences&gt;&#xd;
                  &lt;/OriginDestination&gt;&#xd;
               &lt;/OriginDestinationList&gt;&#xd;
               &lt;ServiceList&gt;&#xd;
                  &lt;Service ObjectKey=&quot;SV1&quot;&gt;&#xd;
                     &lt;ServiceID Owner=&quot;${Airline}&quot;&gt;1022&lt;/ServiceID&gt;&#xd;
                     &lt;Name&gt;Asian Meal&lt;/Name&gt;&#xd;
                     &lt;Encoding&gt;&#xd;
                        &lt;RFIC&gt;&#xd;
                           &lt;Code&gt;G&lt;/Code&gt;&#xd;
                        &lt;/RFIC&gt;&#xd;
                        &lt;Code&gt;VGML&lt;/Code&gt;&#xd;
                        &lt;SubCode&gt;0AN&lt;/SubCode&gt;&#xd;
                     &lt;/Encoding&gt;&#xd;
                     &lt;Descriptions&gt;&#xd;
                        &lt;Description&gt;&#xd;
                           &lt;Text&gt;Asian Meal&lt;/Text&gt;&#xd;
                        &lt;/Description&gt;&#xd;
                     &lt;/Descriptions&gt;&#xd;
                     &lt;Price&gt;&#xd;
                        &lt;Total Code=&quot;USD&quot;&gt;100.00&lt;/Total&gt;&#xd;
                        &lt;Taxes&gt;&#xd;
                           &lt;Total Code=&quot;USD&quot;&gt;10.00&lt;/Total&gt;&#xd;
                           &lt;Breakdown&gt;&#xd;
                              &lt;Tax&gt;&#xd;
                                 &lt;Amount Code=&quot;USD&quot;&gt;10.00&lt;/Amount&gt;&#xd;
                                 &lt;Nation&gt;US&lt;/Nation&gt;&#xd;
                                 &lt;TaxCode&gt;FC&lt;/TaxCode&gt;&#xd;
                              &lt;/Tax&gt;&#xd;
                              &lt;!--Tax&gt;&#xd;
                                 &lt;Amount Code=&quot;USD&quot;&gt;5.00&lt;/Amount&gt;&#xd;
                                 &lt;Nation&gt;US&lt;/Nation&gt;&#xd;
                                 &lt;TaxCode&gt;DE&lt;/TaxCode&gt;&#xd;
                              &lt;/Tax--&gt;&#xd;
                           &lt;/Breakdown&gt;&#xd;
                        &lt;/Taxes&gt;&#xd;
                     &lt;/Price&gt;&#xd;
                     &lt;BookingInstructions&gt;&#xd;
                        &lt;SSRCode&gt;AVML&lt;/SSRCode&gt;&#xd;
                     &lt;/BookingInstructions&gt;&#xd;
                     &lt;Associations&gt;&#xd;
                        &lt;Flight&gt;&#xd;
                           &lt;SegmentReferences&gt;SEG1&lt;/SegmentReferences&gt;&#xd;
                        &lt;/Flight&gt;&#xd;
                     &lt;/Associations&gt;&#xd;
                  &lt;/Service&gt;&#xd;
                  &lt;Service ObjectKey=&quot;SV2&quot;&gt;&#xd;
                     &lt;ServiceID Owner=&quot;${Airline}&quot;&gt;1115&lt;/ServiceID&gt;&#xd;
                     &lt;Name&gt;LOUNGE ACCESS&lt;/Name&gt;&#xd;
                     &lt;Encoding&gt;&#xd;
                        &lt;RFIC&gt;&#xd;
                           &lt;Code&gt;E&lt;/Code&gt;&#xd;
                        &lt;/RFIC&gt;&#xd;
                        &lt;SubCode&gt;0BX&lt;/SubCode&gt;&#xd;
                     &lt;/Encoding&gt;&#xd;
                     &lt;Descriptions&gt;&#xd;
                        &lt;Description&gt;&#xd;
                           &lt;Text&gt;LOUNGE ACCESS&lt;/Text&gt;&#xd;
                        &lt;/Description&gt;&#xd;
                     &lt;/Descriptions&gt;&#xd;
                     &lt;Price&gt;&#xd;
                        &lt;Total Code=&quot;USD&quot;&gt;50.00&lt;/Total&gt;&#xd;
                        &lt;Taxes&gt;&#xd;
                           &lt;Total Code=&quot;USD&quot;&gt;10.00&lt;/Total&gt;&#xd;
                           &lt;Breakdown&gt;&#xd;
                              &lt;Tax&gt;&#xd;
                                 &lt;Amount Code=&quot;USD&quot;&gt;10.00&lt;/Amount&gt;&#xd;
                                 &lt;Nation&gt;US&lt;/Nation&gt;&#xd;
                                 &lt;TaxCode&gt;FC&lt;/TaxCode&gt;&#xd;
                              &lt;/Tax&gt;&#xd;
                              &lt;!--Tax&gt;&#xd;
                                 &lt;Amount Code=&quot;USD&quot;&gt;5.00&lt;/Amount&gt;&#xd;
                                 &lt;Nation&gt;US&lt;/Nation&gt;&#xd;
                                 &lt;TaxCode&gt;DE&lt;/TaxCode&gt;&#xd;
                              &lt;/Tax--&gt;&#xd;
                           &lt;/Breakdown&gt;&#xd;
                        &lt;/Taxes&gt;&#xd;
                     &lt;/Price&gt;&#xd;
                     &lt;Detail&gt;&#xd;
                        &lt;ServiceFulfillment&gt;&#xd;
                           &lt;OfferValidDates&gt;&#xd;
                              &lt;Start ShortDate=&quot;${DepartureDate}&quot;/&gt;&#xd;
                           &lt;/OfferValidDates&gt;&#xd;
                           &lt;Location&gt;&#xd;
                              &lt;AirportFulfillmentLocation&gt;&#xd;
                                 &lt;AirportCode&gt;${AirportCode1}&lt;/AirportCode&gt;&#xd;
                              &lt;/AirportFulfillmentLocation&gt;&#xd;
                              &lt;OtherFulfillmentLocation/&gt;&#xd;
                           &lt;/Location&gt;&#xd;
                        &lt;/ServiceFulfillment&gt;&#xd;
                     &lt;/Detail&gt;&#xd;
                  &lt;/Service&gt;&#xd;
               &lt;/ServiceList&gt;&#xd;
            &lt;/DataLists&gt;&#xd;
         &lt;/Query&gt;&#xd;
      &lt;/edis:OrderCreateRQ&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${Base_URL_3}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">BookingReferenceOrderID</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;OrderID Owner=&quot;${Airline}&quot;&gt;(.+?)&lt;/OrderID&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Scope.variable"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">3000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="-1948168983">Thread Group</stringProp>
              <stringProp name="-1873496325">AC-55589 Create Non homogenous 16.2 order without payments with multiple segments and seats </stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
